{
	"id": "f202135facec0affcb5fab1abde2939d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RVA/Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n\ncontract erc20Token is ERC20, Ownable, Pausable {\n\n    address public icoContract;\n    uint256 private _totalSupply = 1000000 * 10 ** 18; \n\n    mapping(address => uint256) public lockedUntil; \n    mapping(address => bool) public blacklisted;  \n\n\n    event ICOContractSet(address indexed icoContract);\n    event LockupSet(address indexed account, uint256 lockedUntilTimestamp);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event EmergencyTokenRecovered(address indexed token, uint256 amount);\n\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {\n        _mint(msg.sender, _totalSupply); \n    }\n\n    modifier onlyICOContract() {\n        require(msg.sender == icoContract, \"Not authorized\");\n        _;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 18;\n    }\n\n    function setLockup(address account, uint256 timestamp) external onlyICOContract {\n        lockedUntil[account] = timestamp;\n        emit LockupSet(account, timestamp);\n    }\n    \n\n    function setBlacklist(address account, bool status) external onlyOwner {\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    function isBlacklisted(address account) public view returns (bool) {\n        return blacklisted[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function setICOContract(address _icoContract) external onlyOwner {\n        icoContract = _icoContract;\n        emit ICOContractSet(_icoContract);\n    }\n\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\n        require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\");\n        uint256 recipientLength = recipients.length;\n        for (uint256 i = 0; i < recipientLength; i++) {\n            require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\");\n            _transfer(msg.sender, recipients[i], amounts[i]);\n        }\n    }\n\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RVA/Token.sol": {
				"erc20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyTokenRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "icoContract",
									"type": "address"
								}
							],
							"name": "ICOContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedUntilTimestamp",
									"type": "uint256"
								}
							],
							"name": "LockupSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_icoContract",
									"type": "address"
								}
							],
							"name": "setICOContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "setLockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"RVA/Token.sol\":343:361  1000000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"RVA/Token.sol\":312:361  uint256 private _totalSupply = 1000000 * 10 ** 18 */\n  0x07\n  sstore\n    /* \"RVA/Token.sol\":749:892  constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"RVA/Token.sol\":831:841  msg.sender */\n  caller\n    /* \"RVA/Token.sol\":809:813  name */\n  dup3\n    /* \"RVA/Token.sol\":815:821  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  tag_9\n    /* \"RVA/Token.sol\":809:813  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4202:4253   */\n  mstore\n    /* \"#utility.yul\":4175:4193   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"RVA/Token.sol\":871:883  _totalSupply */\n  sload(0x07)\n    /* \"RVA/Token.sol\":853:884  _mint(msg.sender, _totalSupply) */\n  tag_20\n  swap1\n    /* \"RVA/Token.sol\":859:869  msg.sender */\n  caller\n  swap1\n    /* \"RVA/Token.sol\":853:858  _mint */\n  tag_21\n    /* \"RVA/Token.sol\":853:884  _mint(msg.sender, _totalSupply) */\n  jump\t// in\ntag_20:\n    /* \"RVA/Token.sol\":749:892  constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n  jump(tag_47)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4202:4253   */\n  mstore\n    /* \"#utility.yul\":4175:4193   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_14\n    /* \"#utility.yul\":4056:4259   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_33\n  swap1\n  pop\n  jump\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4711:4743   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4693:4744   */\n  mstore\n    /* \"#utility.yul\":4760:4778   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4753:4787   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4803:4821   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4796:4830   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4666:4684   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_14\n    /* \"#utility.yul\":4491:4836   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n    /* \"#utility.yul\":4987:5012   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4975:4977   */\n  0x20\n    /* \"#utility.yul\":4960:4978   */\n  add\n  swap1\n    /* \"#utility.yul\":4841:5018   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_41:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_42:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_50:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_52\n  tag_41\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_54\n  tag_41\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_55:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_56:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_56)\ntag_58:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_60:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_61:\n    /* \"#utility.yul\":1282:1343   */\n  tag_62\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_42\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_63:\n    /* \"#utility.yul\":1473:1536   */\n  tag_64\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_42\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_43:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_66:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_67:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_45:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_71:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_72:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_72)\ntag_74:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_70:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_10:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_78\n  tag_41\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2956:3053   */\n  tag_79\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_80\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_43\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_45\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_83\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_83:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_74)\n    /* \"#utility.yul\":3145:3794   */\ntag_82:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_86:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_89:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\n    /* \"#utility.yul\":4264:4486   */\ntag_32:\n    /* \"#utility.yul\":4329:4338   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4350:4360   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4347:4480   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4402:4412   */\n  0x4e487b71\n    /* \"#utility.yul\":4397:4400   */\n  0xe0\n    /* \"#utility.yul\":4393:4413   */\n  shl\n    /* \"#utility.yul\":4390:4391   */\n  0x00\n    /* \"#utility.yul\":4383:4414   */\n  mstore\n    /* \"#utility.yul\":4437:4441   */\n  0x11\n    /* \"#utility.yul\":4434:4435   */\n  0x04\n    /* \"#utility.yul\":4427:4442   */\n  mstore\n    /* \"#utility.yul\":4465:4469   */\n  0x24\n    /* \"#utility.yul\":4462:4463   */\n  0x00\n    /* \"#utility.yul\":4455:4470   */\n  revert\n    /* \"#utility.yul\":4347:4480   */\ntag_92:\n    /* \"#utility.yul\":4264:4486   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4841:5018   */\ntag_47:\n    /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc66e4095\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x88d695b2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9bc289f1\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x2e0d2a00\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x2e0d2a00\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e579307\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1194:1208   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1187:1209   */\n      iszero\n        /* \"#utility.yul\":1169:1210   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1157:1159   */\n      0x20\n        /* \"#utility.yul\":1142:1160   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1029:1216   */\n      jump\n        /* \"RVA/Token.sol\":1422:1582  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_5:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1719:1744   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1707:1709   */\n      0x20\n        /* \"#utility.yul\":1692:1710   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_31\n        /* \"#utility.yul\":1573:1750   */\n      jump\n        /* \"RVA/Token.sol\":2169:2647  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_7:\n      tag_33\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"RVA/Token.sol\":2653:2804  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_8:\n      tag_39\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"RVA/Token.sol\":1149:1232  function decimals() public pure override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"RVA/Token.sol\":1223:1225  18 */\n      0x12\n        /* \"#utility.yul\":2467:2503   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2455:2457   */\n      0x20\n        /* \"#utility.yul\":2440:2458   */\n      add\n        /* \"RVA/Token.sol\":1149:1232  function decimals() public pure override returns (uint8) {... */\n      tag_31\n        /* \"#utility.yul\":2325:2509   */\n      jump\n        /* \"RVA/Token.sol\":1238:1411  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_10:\n      tag_39\n      tag_61\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"RVA/Token.sol\":1078:1143  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_39\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_33)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_43\n      tag_69\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_39\n      tag_73\n      jump\t// in\n        /* \"RVA/Token.sol\":1011:1072  function pause() external onlyOwner {... */\n    tag_15:\n      tag_39\n      tag_75\n      jump\t// in\n        /* \"RVA/Token.sol\":2810:3300  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_16:\n      tag_39\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_80:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3823:3855   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3805:3856   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3778:3796   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_31\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_29\n      tag_85\n      jump\t// in\n        /* \"RVA/Token.sol\":369:415  mapping(address => uint256) public lockedUntil */\n    tag_19:\n      tag_43\n      tag_88\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_88:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"RVA/Token.sol\":1705:2163  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_20:\n      tag_33\n      tag_92\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"RVA/Token.sol\":280:306  address public icoContract */\n    tag_21:\n      sload(0x06)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"RVA/Token.sol\":422:465  mapping(address => bool) public blacklisted */\n    tag_22:\n      tag_33\n      tag_99\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_99:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_43\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_39\n      tag_108\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"RVA/Token.sol\":1588:1699  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_25:\n      tag_33\n      tag_111\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":1672:1692  blacklisted[account] */\n      and\n        /* \"RVA/Token.sol\":1649:1653  bool */\n      0x00\n        /* \"RVA/Token.sol\":1672:1692  blacklisted[account] */\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":1672:1683  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1672:1692  blacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"RVA/Token.sol\":1588:1699  function isBlacklisted(address account) public view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_121:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":1422:1582  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":1503:1523  blacklisted[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":1503:1514  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1503:1523  blacklisted[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RVA/Token.sol\":1503:1532  blacklisted[account] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"RVA/Token.sol\":1547:1575  Blacklisted(account, status) */\n      swap2\n      mload\n        /* \"#utility.yul\":1169:1210   */\n      swap2\n      dup3\n      mstore\n        /* \"RVA/Token.sol\":1547:1575  Blacklisted(account, status) */\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n      swap2\n        /* \"#utility.yul\":1142:1160   */\n      add\n        /* \"RVA/Token.sol\":1547:1575  Blacklisted(account, status) */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/Token.sol\":1422:1582  function setBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":2169:2647  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_50:\n        /* \"RVA/Token.sol\":2281:2285  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_133\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":2306:2325  blacklisted[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":2306:2317  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":2306:2325  blacklisted[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/Token.sol\":2305:2325  !blacklisted[sender] */\n      iszero\n        /* \"RVA/Token.sol\":2297:2368  require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":2387:2409  blacklisted[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":2387:2398  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":2387:2409  blacklisted[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/Token.sol\":2386:2409  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/Token.sol\":2378:2455  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_141\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":2492:2511  lockedUntil[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":2492:2503  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2492:2511  lockedUntil[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":2473:2488  block.timestamp */\n      timestamp\n        /* \"RVA/Token.sol\":2473:2511  block.timestamp >= lockedUntil[sender] */\n      lt\n      iszero\n      dup1\n        /* \"RVA/Token.sol\":2473:2539  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n      tag_142\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":2515:2534  lockedUntil[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":2515:2526  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2515:2534  lockedUntil[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":2515:2539  lockedUntil[sender] == 0 */\n      iszero\n        /* \"RVA/Token.sol\":2473:2539  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n    tag_142:\n        /* \"RVA/Token.sol\":2465:2578  require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_145\n      jump\t// in\n    tag_143:\n        /* \"RVA/Token.sol\":2595:2640  super.transferFrom(sender, recipient, amount) */\n      tag_146\n        /* \"RVA/Token.sol\":2614:2620  sender */\n      dup5\n        /* \"RVA/Token.sol\":2622:2631  recipient */\n      dup5\n        /* \"RVA/Token.sol\":2633:2639  amount */\n      dup5\n        /* \"RVA/Token.sol\":2595:2613  super.transferFrom */\n      tag_147\n        /* \"RVA/Token.sol\":2595:2640  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"RVA/Token.sol\":2588:2640  return super.transferFrom(sender, recipient, amount) */\n      swap5\n        /* \"RVA/Token.sol\":2169:2647  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":2653:2804  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"RVA/Token.sol\":2728:2739  icoContract */\n      0x06\n        /* \"RVA/Token.sol\":2728:2754  icoContract = _icoContract */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"RVA/Token.sol\":2769:2797  ICOContractSet(_icoContract) */\n      mload(0x40)\n      0xe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"RVA/Token.sol\":2653:2804  function setICOContract(address _icoContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":1238:1411  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_62:\n        /* \"RVA/Token.sol\":957:968  icoContract */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"RVA/Token.sol\":943:953  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":943:968  msg.sender == icoContract */\n      eq\n        /* \"RVA/Token.sol\":935:987  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5939:5941   */\n      0x20\n        /* \"RVA/Token.sol\":935:987  require(msg.sender == icoContract, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5921:5942   */\n      mstore\n        /* \"#utility.yul\":5978:5980   */\n      0x0e\n        /* \"#utility.yul\":5958:5976   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5951:5981   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":5997:6015   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5990:6034   */\n      mstore\n        /* \"#utility.yul\":6051:6069   */\n      0x64\n      add\n        /* \"RVA/Token.sol\":935:987  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_137\n        /* \"#utility.yul\":5737:6075   */\n      jump\n        /* \"RVA/Token.sol\":935:987  require(msg.sender == icoContract, \"Not authorized\") */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":1328:1348  lockedUntil[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":1328:1339  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":1328:1348  lockedUntil[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"RVA/Token.sol\":1328:1360  lockedUntil[account] = timestamp */\n      dup4\n      swap1\n      sstore\n        /* \"RVA/Token.sol\":1375:1404  LockupSet(account, timestamp) */\n      mload\n      0x611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f\n      swap1\n      tag_130\n      swap1\n        /* \"RVA/Token.sol\":1351:1360  timestamp */\n      dup5\n        /* \"#utility.yul\":1719:1744   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1707:1709   */\n      0x20\n        /* \"#utility.yul\":1692:1710   */\n      add\n      swap1\n        /* \"#utility.yul\":1573:1750   */\n      jump\n        /* \"RVA/Token.sol\":1078:1143  function unpause() external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"RVA/Token.sol\":1126:1136  _unpause() */\n      tag_161\n        /* \"RVA/Token.sol\":1126:1134  _unpause */\n      tag_162\n        /* \"RVA/Token.sol\":1126:1136  _unpause() */\n      jump\t// in\n    tag_161:\n        /* \"RVA/Token.sol\":1078:1143  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"RVA/Token.sol\":1011:1072  function pause() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"RVA/Token.sol\":1057:1065  _pause() */\n      tag_161\n        /* \"RVA/Token.sol\":1057:1063  _pause */\n      tag_174\n        /* \"RVA/Token.sol\":1057:1065  _pause() */\n      jump\t// in\n        /* \"RVA/Token.sol\":2810:3300  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_176\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_176:\n        /* \"RVA/Token.sol\":2933:2968  recipients.length == amounts.length */\n      dup3\n      dup2\n      eq\n        /* \"RVA/Token.sol\":2925:3012  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6282:6284   */\n      0x20\n        /* \"RVA/Token.sol\":2925:3012  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6264:6285   */\n      mstore\n        /* \"#utility.yul\":6321:6323   */\n      0x27\n        /* \"#utility.yul\":6301:6319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6294:6324   */\n      mstore\n        /* \"#utility.yul\":6360:6394   */\n      0x42617463685472616e73666572206661696c65643a204d69736d617463686564\n        /* \"#utility.yul\":6340:6358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6333:6395   */\n      mstore\n      shl(0xc8, 0x20617272617973)\n        /* \"#utility.yul\":6411:6429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6404:6441   */\n      mstore\n        /* \"#utility.yul\":6458:6477   */\n      0x84\n      add\n        /* \"RVA/Token.sol\":2925:3012  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_137\n        /* \"#utility.yul\":6080:6483   */\n      jump\n        /* \"RVA/Token.sol\":2925:3012  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n    tag_178:\n        /* \"RVA/Token.sol\":3048:3058  recipients */\n      dup3\n        /* \"RVA/Token.sol\":3022:3045  uint256 recipientLength */\n      0x00\n        /* \"RVA/Token.sol\":3075:3294  for (uint256 i = 0; i < recipientLength; i++) {... */\n    tag_181:\n        /* \"RVA/Token.sol\":3099:3114  recipientLength */\n      dup2\n        /* \"RVA/Token.sol\":3095:3096  i */\n      dup2\n        /* \"RVA/Token.sol\":3095:3114  i < recipientLength */\n      lt\n        /* \"RVA/Token.sol\":3075:3294  for (uint256 i = 0; i < recipientLength; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"RVA/Token.sol\":3144:3155  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":3144:3170  blacklisted[recipients[i]] */\n      0x00\n        /* \"RVA/Token.sol\":3156:3166  recipients */\n      dup8\n      dup8\n        /* \"RVA/Token.sol\":3167:3168  i */\n      dup5\n        /* \"RVA/Token.sol\":3156:3169  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":3144:3170  blacklisted[recipients[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/Token.sol\":3143:3170  !blacklisted[recipients[i]] */\n      iszero\n        /* \"RVA/Token.sol\":3135:3221  require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"RVA/Token.sol\":3135:3221  require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6804:6825   */\n      mstore\n        /* \"#utility.yul\":6861:6863   */\n      0x2e\n        /* \"#utility.yul\":6841:6859   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6834:6864   */\n      mstore\n        /* \"#utility.yul\":6900:6934   */\n      0x42617463685472616e73666572206661696c65643a20526563697069656e7420\n        /* \"#utility.yul\":6880:6898   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6873:6935   */\n      mstore\n      shl(0x92, 0x1a5cc8189b1858dadb1a5cdd1959)\n        /* \"#utility.yul\":6951:6969   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6944:6988   */\n      mstore\n        /* \"#utility.yul\":7005:7024   */\n      0x84\n      add\n        /* \"RVA/Token.sol\":3135:3221  require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\") */\n      tag_137\n        /* \"#utility.yul\":6620:7030   */\n      jump\n        /* \"RVA/Token.sol\":3135:3221  require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\") */\n    tag_188:\n        /* \"RVA/Token.sol\":3235:3283  _transfer(msg.sender, recipients[i], amounts[i]) */\n      tag_191\n        /* \"RVA/Token.sol\":3245:3255  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":3257:3267  recipients */\n      dup8\n      dup8\n        /* \"RVA/Token.sol\":3268:3269  i */\n      dup5\n        /* \"RVA/Token.sol\":3257:3270  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_186\n      jump\t// in\n    tag_193:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_194:\n        /* \"RVA/Token.sol\":3272:3279  amounts */\n      dup7\n      dup7\n        /* \"RVA/Token.sol\":3280:3281  i */\n      dup6\n        /* \"RVA/Token.sol\":3272:3282  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_186\n      jump\t// in\n    tag_196:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RVA/Token.sol\":3235:3244  _transfer */\n      tag_197\n        /* \"RVA/Token.sol\":3235:3283  _transfer(msg.sender, recipients[i], amounts[i]) */\n      jump\t// in\n    tag_191:\n        /* \"RVA/Token.sol\":3116:3119  i++ */\n      0x01\n      add\n        /* \"RVA/Token.sol\":3075:3294  for (uint256 i = 0; i < recipientLength; i++) {... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"RVA/Token.sol\":2915:3300  {... */\n      pop\n        /* \"RVA/Token.sol\":2810:3300  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n        /* \"RVA/Token.sol\":1705:2163  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_93:\n        /* \"RVA/Token.sol\":1797:1801  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_206\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_206:\n        /* \"RVA/Token.sol\":1834:1844  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":1822:1845  blacklisted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":1822:1833  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1822:1845  blacklisted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/Token.sol\":1821:1845  !blacklisted[msg.sender] */\n      iszero\n        /* \"RVA/Token.sol\":1813:1888  require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/Token.sol\":1907:1929  blacklisted[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":1907:1918  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1907:1929  blacklisted[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/Token.sol\":1906:1929  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/Token.sol\":1898:1975  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_141\n      jump\t// in\n    tag_210:\n        /* \"RVA/Token.sol\":2024:2034  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":2012:2035  lockedUntil[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":2012:2023  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2012:2035  lockedUntil[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":1993:2008  block.timestamp */\n      timestamp\n        /* \"RVA/Token.sol\":1993:2035  block.timestamp >= lockedUntil[msg.sender] */\n      lt\n      iszero\n      dup1\n        /* \"RVA/Token.sol\":1993:2067  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n      tag_212\n      jumpi\n      pop\n        /* \"RVA/Token.sol\":2051:2061  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":2039:2062  lockedUntil[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/Token.sol\":2039:2050  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2039:2062  lockedUntil[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":2039:2067  lockedUntil[msg.sender] == 0 */\n      iszero\n        /* \"RVA/Token.sol\":1993:2067  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n    tag_212:\n        /* \"RVA/Token.sol\":1985:2106  require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_145\n      jump\t// in\n    tag_213:\n        /* \"RVA/Token.sol\":2123:2156  super.transfer(recipient, amount) */\n      tag_215\n        /* \"RVA/Token.sol\":2138:2147  recipient */\n      dup4\n        /* \"RVA/Token.sol\":2149:2155  amount */\n      dup4\n        /* \"RVA/Token.sol\":2123:2137  super.transfer */\n      tag_216\n        /* \"RVA/Token.sol\":2123:2156  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_215:\n        /* \"RVA/Token.sol\":2116:2156  return super.transfer(recipient, amount) */\n      swap4\n        /* \"RVA/Token.sol\":1705:2163  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3856   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_137\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3856   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_137\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7237:7239   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7219:7240   */\n      mstore\n        /* \"#utility.yul\":7276:7278   */\n      0x10\n        /* \"#utility.yul\":7256:7274   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7249:7279   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":7295:7313   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7288:7334   */\n      mstore\n        /* \"#utility.yul\":7351:7369   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_137\n        /* \"#utility.yul\":7035:7375   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_244:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_247\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_249:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3823:3855   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3805:3856   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3793:3795   */\n      0x20\n        /* \"#utility.yul\":3778:3796   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3856   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_137\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3856   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_137\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3856   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_137\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3805:3856   */\n      mstore\n        /* \"#utility.yul\":3778:3796   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_137\n        /* \"#utility.yul\":3659:3862   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_273\n      swap2\n        /* \"#utility.yul\":1719:1744   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1707:1709   */\n      0x20\n        /* \"#utility.yul\":1692:1710   */\n      add\n      swap1\n        /* \"#utility.yul\":1573:1750   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7600:7632   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7582:7633   */\n      mstore\n        /* \"#utility.yul\":7649:7667   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7642:7676   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7692:7710   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7685:7719   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7555:7573   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_137\n        /* \"#utility.yul\":7380:7725   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7914:7935   */\n      mstore\n        /* \"#utility.yul\":7971:7973   */\n      0x14\n        /* \"#utility.yul\":7951:7969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7944:7974   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":7990:8008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7983:8033   */\n      mstore\n        /* \"#utility.yul\":8050:8068   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_137\n        /* \"#utility.yul\":7730:8074   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_290\n      swap1\n      pop\n      jump\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7600:7632   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7582:7633   */\n      mstore\n        /* \"#utility.yul\":7649:7667   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7642:7676   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7692:7710   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7685:7719   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7555:7573   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_137\n        /* \"#utility.yul\":7380:7725   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_291:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_294)\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_295\n      swap2\n        /* \"#utility.yul\":1719:1744   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1707:1709   */\n      0x20\n        /* \"#utility.yul\":1692:1710   */\n      add\n      swap1\n        /* \"#utility.yul\":1573:1750   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:541   */\n    tag_32:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":273:413   */\n    tag_300:\n        /* \"#utility.yul\":287:293   */\n      dup2\n        /* \"#utility.yul\":284:285   */\n      dup2\n        /* \"#utility.yul\":281:294   */\n      lt\n        /* \"#utility.yul\":273:413   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":382:396   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":378:401   */\n      dup2\n      add\n        /* \"#utility.yul\":372:402   */\n      mload\n        /* \"#utility.yul\":367:369   */\n      0x40\n        /* \"#utility.yul\":348:365   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":344:370   */\n      add\n        /* \"#utility.yul\":337:403   */\n      mstore\n        /* \"#utility.yul\":302:312   */\n      add\n        /* \"#utility.yul\":273:413   */\n      jump(tag_300)\n    tag_302:\n        /* \"#utility.yul\":277:280   */\n      pop\n        /* \"#utility.yul\":462:463   */\n      0x00\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":437:446   */\n      dup6\n        /* \"#utility.yul\":433:455   */\n      add\n        /* \"#utility.yul\":429:460   */\n      add\n        /* \"#utility.yul\":422:464   */\n      mstore\n        /* \"#utility.yul\":532:534   */\n      0x40\n        /* \"#utility.yul\":525:527   */\n      0x1f\n        /* \"#utility.yul\":521:528   */\n      not\n        /* \"#utility.yul\":516:518   */\n      0x1f\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":504:519   */\n      add\n        /* \"#utility.yul\":500:529   */\n      and\n        /* \"#utility.yul\":489:498   */\n      dup5\n        /* \"#utility.yul\":485:530   */\n      add\n        /* \"#utility.yul\":481:535   */\n      add\n        /* \"#utility.yul\":473:535   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:719   */\n    tag_296:\n        /* \"#utility.yul\":614:634   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:694   */\n      dup2\n      and\n        /* \"#utility.yul\":653:695   */\n      dup2\n      eq\n        /* \"#utility.yul\":643:713   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":706:707   */\n      dup1\n        /* \"#utility.yul\":699:711   */\n      revert\n        /* \"#utility.yul\":643:713   */\n    tag_304:\n        /* \"#utility.yul\":546:719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":724:1024   */\n    tag_35:\n        /* \"#utility.yul\":792:798   */\n      0x00\n        /* \"#utility.yul\":800:806   */\n      dup1\n        /* \"#utility.yul\":853:855   */\n      0x40\n        /* \"#utility.yul\":841:850   */\n      dup4\n        /* \"#utility.yul\":832:839   */\n      dup6\n        /* \"#utility.yul\":828:851   */\n      sub\n        /* \"#utility.yul\":824:856   */\n      slt\n        /* \"#utility.yul\":821:873   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":869:870   */\n      0x00\n        /* \"#utility.yul\":866:867   */\n      dup1\n        /* \"#utility.yul\":859:871   */\n      revert\n        /* \"#utility.yul\":821:873   */\n    tag_306:\n        /* \"#utility.yul\":892:921   */\n      tag_307\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":892:921   */\n      tag_296\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":882:921   */\n      swap5\n        /* \"#utility.yul\":990:992   */\n      0x20\n        /* \"#utility.yul\":975:993   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":962:994   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":724:1024   */\n      jump\t// out\n        /* \"#utility.yul\":1221:1568   */\n    tag_41:\n        /* \"#utility.yul\":1286:1292   */\n      0x00\n        /* \"#utility.yul\":1294:1300   */\n      dup1\n        /* \"#utility.yul\":1347:1349   */\n      0x40\n        /* \"#utility.yul\":1335:1344   */\n      dup4\n        /* \"#utility.yul\":1326:1333   */\n      dup6\n        /* \"#utility.yul\":1322:1345   */\n      sub\n        /* \"#utility.yul\":1318:1350   */\n      slt\n        /* \"#utility.yul\":1315:1367   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1363:1364   */\n      0x00\n        /* \"#utility.yul\":1360:1361   */\n      dup1\n        /* \"#utility.yul\":1353:1365   */\n      revert\n        /* \"#utility.yul\":1315:1367   */\n    tag_310:\n        /* \"#utility.yul\":1386:1415   */\n      tag_311\n        /* \"#utility.yul\":1405:1414   */\n      dup4\n        /* \"#utility.yul\":1386:1415   */\n      tag_296\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1376:1415   */\n      swap2\n      pop\n        /* \"#utility.yul\":1465:1467   */\n      0x20\n        /* \"#utility.yul\":1454:1463   */\n      dup4\n        /* \"#utility.yul\":1450:1468   */\n      add\n        /* \"#utility.yul\":1437:1469   */\n      calldataload\n        /* \"#utility.yul\":1512:1517   */\n      dup1\n        /* \"#utility.yul\":1505:1518   */\n      iszero\n        /* \"#utility.yul\":1498:1519   */\n      iszero\n        /* \"#utility.yul\":1491:1496   */\n      dup2\n        /* \"#utility.yul\":1488:1520   */\n      eq\n        /* \"#utility.yul\":1478:1538   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1534:1535   */\n      0x00\n        /* \"#utility.yul\":1531:1532   */\n      dup1\n        /* \"#utility.yul\":1524:1536   */\n      revert\n        /* \"#utility.yul\":1478:1538   */\n    tag_312:\n        /* \"#utility.yul\":1557:1562   */\n      dup1\n        /* \"#utility.yul\":1547:1562   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1221:1568   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1755:2129   */\n    tag_49:\n        /* \"#utility.yul\":1832:1838   */\n      0x00\n        /* \"#utility.yul\":1840:1846   */\n      dup1\n        /* \"#utility.yul\":1848:1854   */\n      0x00\n        /* \"#utility.yul\":1901:1903   */\n      0x60\n        /* \"#utility.yul\":1889:1898   */\n      dup5\n        /* \"#utility.yul\":1880:1887   */\n      dup7\n        /* \"#utility.yul\":1876:1899   */\n      sub\n        /* \"#utility.yul\":1872:1904   */\n      slt\n        /* \"#utility.yul\":1869:1921   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1914:1915   */\n      dup1\n        /* \"#utility.yul\":1907:1919   */\n      revert\n        /* \"#utility.yul\":1869:1921   */\n    tag_315:\n        /* \"#utility.yul\":1940:1969   */\n      tag_316\n        /* \"#utility.yul\":1959:1968   */\n      dup5\n        /* \"#utility.yul\":1940:1969   */\n      tag_296\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1930:1969   */\n      swap3\n      pop\n        /* \"#utility.yul\":1988:2026   */\n      tag_317\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup6\n        /* \"#utility.yul\":2007:2025   */\n      add\n        /* \"#utility.yul\":1988:2026   */\n      tag_296\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1755:2129   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1978:2026   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2095:2097   */\n      0x40\n        /* \"#utility.yul\":2080:2098   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2067:2099   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1755:2129   */\n      jump\t// out\n        /* \"#utility.yul\":2134:2320   */\n    tag_54:\n        /* \"#utility.yul\":2193:2199   */\n      0x00\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2234:2243   */\n      dup3\n        /* \"#utility.yul\":2225:2232   */\n      dup5\n        /* \"#utility.yul\":2221:2244   */\n      sub\n        /* \"#utility.yul\":2217:2249   */\n      slt\n        /* \"#utility.yul\":2214:2266   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2262:2263   */\n      0x00\n        /* \"#utility.yul\":2259:2260   */\n      dup1\n        /* \"#utility.yul\":2252:2264   */\n      revert\n        /* \"#utility.yul\":2214:2266   */\n    tag_319:\n        /* \"#utility.yul\":2285:2314   */\n      tag_215\n        /* \"#utility.yul\":2304:2313   */\n      dup3\n        /* \"#utility.yul\":2285:2314   */\n      tag_296\n      jump\t// in\n        /* \"#utility.yul\":2514:2881   */\n    tag_297:\n        /* \"#utility.yul\":2577:2585   */\n      0x00\n        /* \"#utility.yul\":2587:2593   */\n      dup1\n        /* \"#utility.yul\":2641:2644   */\n      dup4\n        /* \"#utility.yul\":2634:2638   */\n      0x1f\n        /* \"#utility.yul\":2626:2632   */\n      dup5\n        /* \"#utility.yul\":2622:2639   */\n      add\n        /* \"#utility.yul\":2618:2645   */\n      slt\n        /* \"#utility.yul\":2608:2663   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2659:2660   */\n      0x00\n        /* \"#utility.yul\":2656:2657   */\n      dup1\n        /* \"#utility.yul\":2649:2661   */\n      revert\n        /* \"#utility.yul\":2608:2663   */\n    tag_323:\n      pop\n        /* \"#utility.yul\":2682:2702   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2725:2743   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2714:2744   */\n      dup2\n      gt\n        /* \"#utility.yul\":2711:2761   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2757:2758   */\n      0x00\n        /* \"#utility.yul\":2754:2755   */\n      dup1\n        /* \"#utility.yul\":2747:2759   */\n      revert\n        /* \"#utility.yul\":2711:2761   */\n    tag_324:\n        /* \"#utility.yul\":2794:2798   */\n      0x20\n        /* \"#utility.yul\":2786:2792   */\n      dup4\n        /* \"#utility.yul\":2782:2799   */\n      add\n        /* \"#utility.yul\":2770:2799   */\n      swap2\n      pop\n        /* \"#utility.yul\":2854:2857   */\n      dup4\n        /* \"#utility.yul\":2847:2851   */\n      0x20\n        /* \"#utility.yul\":2837:2843   */\n      dup3\n        /* \"#utility.yul\":2834:2835   */\n      0x05\n        /* \"#utility.yul\":2830:2844   */\n      shl\n        /* \"#utility.yul\":2822:2828   */\n      dup6\n        /* \"#utility.yul\":2818:2845   */\n      add\n        /* \"#utility.yul\":2814:2852   */\n      add\n        /* \"#utility.yul\":2811:2858   */\n      gt\n        /* \"#utility.yul\":2808:2875   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":2871:2872   */\n      0x00\n        /* \"#utility.yul\":2868:2869   */\n      dup1\n        /* \"#utility.yul\":2861:2873   */\n      revert\n        /* \"#utility.yul\":2808:2875   */\n    tag_325:\n        /* \"#utility.yul\":2514:2881   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3654   */\n    tag_78:\n        /* \"#utility.yul\":3008:3014   */\n      0x00\n        /* \"#utility.yul\":3016:3022   */\n      dup1\n        /* \"#utility.yul\":3024:3030   */\n      0x00\n        /* \"#utility.yul\":3032:3038   */\n      dup1\n        /* \"#utility.yul\":3085:3087   */\n      0x40\n        /* \"#utility.yul\":3073:3082   */\n      dup6\n        /* \"#utility.yul\":3064:3071   */\n      dup8\n        /* \"#utility.yul\":3060:3083   */\n      sub\n        /* \"#utility.yul\":3056:3088   */\n      slt\n        /* \"#utility.yul\":3053:3105   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3101:3102   */\n      0x00\n        /* \"#utility.yul\":3098:3099   */\n      dup1\n        /* \"#utility.yul\":3091:3103   */\n      revert\n        /* \"#utility.yul\":3053:3105   */\n    tag_327:\n        /* \"#utility.yul\":3141:3150   */\n      dup5\n        /* \"#utility.yul\":3128:3151   */\n      calldataload\n        /* \"#utility.yul\":3174:3192   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3166:3172   */\n      dup2\n        /* \"#utility.yul\":3163:3193   */\n      gt\n        /* \"#utility.yul\":3160:3210   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3160:3210   */\n    tag_328:\n        /* \"#utility.yul\":3245:3315   */\n      tag_329\n        /* \"#utility.yul\":3307:3314   */\n      dup8\n        /* \"#utility.yul\":3298:3304   */\n      dup3\n        /* \"#utility.yul\":3287:3296   */\n      dup9\n        /* \"#utility.yul\":3283:3305   */\n      add\n        /* \"#utility.yul\":3245:3315   */\n      tag_297\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3334:3342   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":3219:3315   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":3422:3424   */\n      0x20\n        /* \"#utility.yul\":3407:3425   */\n      dup6\n      add\n        /* \"#utility.yul\":3394:3426   */\n      calldataload\n        /* \"#utility.yul\":3451:3469   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3438:3470   */\n      dup2\n      gt\n        /* \"#utility.yul\":3435:3487   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3483:3484   */\n      0x00\n        /* \"#utility.yul\":3480:3481   */\n      dup1\n        /* \"#utility.yul\":3473:3485   */\n      revert\n        /* \"#utility.yul\":3435:3487   */\n    tag_330:\n        /* \"#utility.yul\":3522:3594   */\n      tag_331\n        /* \"#utility.yul\":3586:3593   */\n      dup8\n        /* \"#utility.yul\":3575:3583   */\n      dup3\n        /* \"#utility.yul\":3564:3573   */\n      dup9\n        /* \"#utility.yul\":3560:3584   */\n      add\n        /* \"#utility.yul\":3522:3594   */\n      tag_297\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2886:3654   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":3613:3621   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2886:3654   */\n      jump\t// out\n        /* \"#utility.yul\":3867:4127   */\n    tag_104:\n        /* \"#utility.yul\":3935:3941   */\n      0x00\n        /* \"#utility.yul\":3943:3949   */\n      dup1\n        /* \"#utility.yul\":3996:3998   */\n      0x40\n        /* \"#utility.yul\":3984:3993   */\n      dup4\n        /* \"#utility.yul\":3975:3982   */\n      dup6\n        /* \"#utility.yul\":3971:3994   */\n      sub\n        /* \"#utility.yul\":3967:3999   */\n      slt\n        /* \"#utility.yul\":3964:4016   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":4012:4013   */\n      0x00\n        /* \"#utility.yul\":4009:4010   */\n      dup1\n        /* \"#utility.yul\":4002:4014   */\n      revert\n        /* \"#utility.yul\":3964:4016   */\n    tag_334:\n        /* \"#utility.yul\":4035:4064   */\n      tag_335\n        /* \"#utility.yul\":4054:4063   */\n      dup4\n        /* \"#utility.yul\":4035:4064   */\n      tag_296\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4025:4064   */\n      swap2\n      pop\n        /* \"#utility.yul\":4083:4121   */\n      tag_336\n        /* \"#utility.yul\":4117:4119   */\n      0x20\n        /* \"#utility.yul\":4106:4115   */\n      dup5\n        /* \"#utility.yul\":4102:4120   */\n      add\n        /* \"#utility.yul\":4083:4121   */\n      tag_296\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4073:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":3867:4127   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4512   */\n    tag_116:\n        /* \"#utility.yul\":4211:4212   */\n      0x01\n        /* \"#utility.yul\":4207:4219   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4254:4266   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4275:4336   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4329:4333   */\n      0x7f\n        /* \"#utility.yul\":4321:4327   */\n      dup3\n        /* \"#utility.yul\":4317:4334   */\n      and\n        /* \"#utility.yul\":4307:4334   */\n      swap2\n      pop\n        /* \"#utility.yul\":4275:4336   */\n    tag_338:\n        /* \"#utility.yul\":4382:4384   */\n      0x20\n        /* \"#utility.yul\":4374:4380   */\n      dup3\n        /* \"#utility.yul\":4371:4385   */\n      lt\n        /* \"#utility.yul\":4351:4369   */\n      dup2\n        /* \"#utility.yul\":4348:4386   */\n      sub\n        /* \"#utility.yul\":4345:4506   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4428:4438   */\n      0x4e487b71\n        /* \"#utility.yul\":4423:4426   */\n      0xe0\n        /* \"#utility.yul\":4419:4439   */\n      shl\n        /* \"#utility.yul\":4416:4417   */\n      0x00\n        /* \"#utility.yul\":4409:4440   */\n      mstore\n        /* \"#utility.yul\":4463:4467   */\n      0x22\n        /* \"#utility.yul\":4460:4461   */\n      0x04\n        /* \"#utility.yul\":4453:4468   */\n      mstore\n        /* \"#utility.yul\":4491:4495   */\n      0x24\n        /* \"#utility.yul\":4488:4489   */\n      0x00\n        /* \"#utility.yul\":4481:4496   */\n      revert\n        /* \"#utility.yul\":4345:4506   */\n    tag_339:\n      pop\n        /* \"#utility.yul\":4132:4512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4919   */\n    tag_138:\n        /* \"#utility.yul\":4719:4721   */\n      0x20\n        /* \"#utility.yul\":4701:4722   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4758:4760   */\n      0x26\n        /* \"#utility.yul\":4738:4756   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4731:4761   */\n      mstore\n        /* \"#utility.yul\":4797:4831   */\n      0x5472616e73666572206661696c65643a2053656e64657220697320626c61636b\n        /* \"#utility.yul\":4792:4794   */\n      0x40\n        /* \"#utility.yul\":4777:4795   */\n      dup3\n      add\n        /* \"#utility.yul\":4770:4832   */\n      mstore\n      shl(0xd2, 0x1b1a5cdd1959)\n        /* \"#utility.yul\":4863:4865   */\n      0x60\n        /* \"#utility.yul\":4848:4866   */\n      dup3\n      add\n        /* \"#utility.yul\":4841:4877   */\n      mstore\n        /* \"#utility.yul\":4909:4912   */\n      0x80\n        /* \"#utility.yul\":4894:4913   */\n      add\n      swap1\n        /* \"#utility.yul\":4517:4919   */\n      jump\t// out\n        /* \"#utility.yul\":4924:5329   */\n    tag_141:\n        /* \"#utility.yul\":5126:5128   */\n      0x20\n        /* \"#utility.yul\":5108:5129   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5165:5167   */\n      0x29\n        /* \"#utility.yul\":5145:5163   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5138:5168   */\n      mstore\n        /* \"#utility.yul\":5204:5238   */\n      0x5472616e73666572206661696c65643a20526563697069656e7420697320626c\n        /* \"#utility.yul\":5199:5201   */\n      0x40\n        /* \"#utility.yul\":5184:5202   */\n      dup3\n      add\n        /* \"#utility.yul\":5177:5239   */\n      mstore\n      shl(0xba, 0x1858dadb1a5cdd1959)\n        /* \"#utility.yul\":5270:5272   */\n      0x60\n        /* \"#utility.yul\":5255:5273   */\n      dup3\n      add\n        /* \"#utility.yul\":5248:5287   */\n      mstore\n        /* \"#utility.yul\":5319:5322   */\n      0x80\n        /* \"#utility.yul\":5304:5323   */\n      add\n      swap1\n        /* \"#utility.yul\":4924:5329   */\n      jump\t// out\n        /* \"#utility.yul\":5334:5732   */\n    tag_145:\n        /* \"#utility.yul\":5536:5538   */\n      0x20\n        /* \"#utility.yul\":5518:5539   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5575:5577   */\n      0x22\n        /* \"#utility.yul\":5555:5573   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5548:5578   */\n      mstore\n        /* \"#utility.yul\":5614:5648   */\n      0x5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b\n        /* \"#utility.yul\":5609:5611   */\n      0x40\n        /* \"#utility.yul\":5594:5612   */\n      dup3\n      add\n        /* \"#utility.yul\":5587:5649   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":5680:5682   */\n      0x60\n        /* \"#utility.yul\":5665:5683   */\n      dup3\n      add\n        /* \"#utility.yul\":5658:5690   */\n      mstore\n        /* \"#utility.yul\":5722:5725   */\n      0x80\n        /* \"#utility.yul\":5707:5726   */\n      add\n      swap1\n        /* \"#utility.yul\":5334:5732   */\n      jump\t// out\n        /* \"#utility.yul\":6488:6615   */\n    tag_186:\n        /* \"#utility.yul\":6549:6559   */\n      0x4e487b71\n        /* \"#utility.yul\":6544:6547   */\n      0xe0\n        /* \"#utility.yul\":6540:6560   */\n      shl\n        /* \"#utility.yul\":6537:6538   */\n      0x00\n        /* \"#utility.yul\":6530:6561   */\n      mstore\n        /* \"#utility.yul\":6580:6584   */\n      0x32\n        /* \"#utility.yul\":6577:6578   */\n      0x04\n        /* \"#utility.yul\":6570:6585   */\n      mstore\n        /* \"#utility.yul\":6604:6608   */\n      0x24\n        /* \"#utility.yul\":6601:6602   */\n      0x00\n        /* \"#utility.yul\":6594:6609   */\n      revert\n        /* \"#utility.yul\":8079:8301   */\n    tag_289:\n        /* \"#utility.yul\":8144:8153   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8165:8175   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8162:8295   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":8217:8227   */\n      0x4e487b71\n        /* \"#utility.yul\":8212:8215   */\n      0xe0\n        /* \"#utility.yul\":8208:8228   */\n      shl\n        /* \"#utility.yul\":8205:8206   */\n      0x00\n        /* \"#utility.yul\":8198:8229   */\n      mstore\n        /* \"#utility.yul\":8252:8256   */\n      0x11\n        /* \"#utility.yul\":8249:8250   */\n      0x04\n        /* \"#utility.yul\":8242:8257   */\n      mstore\n        /* \"#utility.yul\":8280:8284   */\n      0x24\n        /* \"#utility.yul\":8277:8278   */\n      0x00\n        /* \"#utility.yul\":8270:8285   */\n      revert\n\n    auxdata: 0xa264697066735822122001e9bab1fe0f0f85bafdc7f831deecb1b7fd44ad383d29d145823f95136a8be964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 265,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 183,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 323,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5020:8",
										"nodeType": "YulBlock",
										"src": "0:5020:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "210:770:8",
													"nodeType": "YulBlock",
													"src": "210:770:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:8",
																"nodeType": "YulBlock",
																"src": "259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:8"
																			},
																			"nativeSrc": "261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:8"
																		},
																		"nativeSrc": "261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:8",
																						"nodeType": "YulLiteral",
																						"src": "246:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:8"
																				},
																				"nativeSrc": "234:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:8"
																		},
																		"nativeSrc": "230:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:8"
																},
																"nativeSrc": "223:35:8",
																"nodeType": "YulFunctionCall",
																"src": "223:35:8"
															},
															"nativeSrc": "220:55:8",
															"nodeType": "YulIf",
															"src": "220:55:8"
														},
														{
															"nativeSrc": "284:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:8"
																},
																"nativeSrc": "298:13:8",
																"nodeType": "YulFunctionCall",
																"src": "298:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:8",
																	"nodeType": "YulTypedName",
																	"src": "288:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:8",
																"nodeType": "YulBlock",
																"src": "354:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:8"
																			},
																			"nativeSrc": "356:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:8"
																		},
																		"nativeSrc": "356:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:8",
																						"nodeType": "YulLiteral",
																						"src": "342:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:8",
																						"nodeType": "YulLiteral",
																						"src": "346:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:8"
																				},
																				"nativeSrc": "338:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:8",
																				"nodeType": "YulLiteral",
																				"src": "350:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:8"
																		},
																		"nativeSrc": "334:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:8"
																},
																"nativeSrc": "323:30:8",
																"nodeType": "YulFunctionCall",
																"src": "323:30:8"
															},
															"nativeSrc": "320:56:8",
															"nodeType": "YulIf",
															"src": "320:56:8"
														},
														{
															"nativeSrc": "385:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:8",
																		"nodeType": "YulLiteral",
																		"src": "405:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:8"
																},
																"nativeSrc": "399:9:8",
																"nodeType": "YulFunctionCall",
																"src": "399:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:8",
																	"nodeType": "YulTypedName",
																	"src": "389:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:8",
																										"nodeType": "YulLiteral",
																										"src": "471:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:8"
																								},
																								"nativeSrc": "459:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:8",
																										"nodeType": "YulLiteral",
																										"src": "482:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:8"
																								},
																								"nativeSrc": "478:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:8"
																						},
																						"nativeSrc": "455:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:8",
																						"nodeType": "YulLiteral",
																						"src": "488:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:8"
																				},
																				"nativeSrc": "451:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:8",
																						"nodeType": "YulLiteral",
																						"src": "497:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:8"
																				},
																				"nativeSrc": "493:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:8"
																		},
																		"nativeSrc": "447:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:8"
																},
																"nativeSrc": "435:67:8",
																"nodeType": "YulFunctionCall",
																"src": "435:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:8",
																	"nodeType": "YulTypedName",
																	"src": "421:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:8",
																"nodeType": "YulBlock",
																"src": "577:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:8"
																			},
																			"nativeSrc": "579:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:8"
																		},
																		"nativeSrc": "579:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:8",
																								"nodeType": "YulLiteral",
																								"src": "540:2:8",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:8",
																								"nodeType": "YulLiteral",
																								"src": "544:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:8"
																						},
																						"nativeSrc": "536:10:8",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:8",
																						"nodeType": "YulLiteral",
																						"src": "548:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:8"
																				},
																				"nativeSrc": "532:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:8"
																		},
																		"nativeSrc": "517:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:8"
																		},
																		"nativeSrc": "553:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:8"
																},
																"nativeSrc": "514:62:8",
																"nodeType": "YulFunctionCall",
																"src": "514:62:8"
															},
															"nativeSrc": "511:88:8",
															"nodeType": "YulIf",
															"src": "511:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:8",
																		"nodeType": "YulLiteral",
																		"src": "615:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:8"
																},
																"nativeSrc": "608:22:8",
																"nodeType": "YulFunctionCall",
																"src": "608:22:8"
															},
															"nativeSrc": "608:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:8"
																},
																"nativeSrc": "639:22:8",
																"nodeType": "YulFunctionCall",
																"src": "639:22:8"
															},
															"nativeSrc": "639:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:8"
														},
														{
															"body": {
																"nativeSrc": "713:16:8",
																"nodeType": "YulBlock",
																"src": "713:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:8",
																					"nodeType": "YulLiteral",
																					"src": "722:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:8",
																					"nodeType": "YulLiteral",
																					"src": "725:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:8"
																			},
																			"nativeSrc": "715:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:8"
																		},
																		"nativeSrc": "715:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:8"
																				},
																				"nativeSrc": "680:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:8",
																				"nodeType": "YulLiteral",
																				"src": "701:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:8"
																		},
																		"nativeSrc": "676:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:8"
																},
																"nativeSrc": "673:39:8",
																"nodeType": "YulFunctionCall",
																"src": "673:39:8"
															},
															"nativeSrc": "670:59:8",
															"nodeType": "YulIf",
															"src": "670:59:8"
														},
														{
															"nativeSrc": "738:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:8",
																"nodeType": "YulLiteral",
																"src": "747:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:8",
																	"nodeType": "YulTypedName",
																	"src": "742:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:8",
																"nodeType": "YulBlock",
																"src": "809:91:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:8"
																							},
																							"nativeSrc": "834:14:8",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:8",
																							"nodeType": "YulLiteral",
																							"src": "850:4:8",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:8"
																					},
																					"nativeSrc": "830:25:8",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:8"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:8",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:8"
																									},
																									"nativeSrc": "867:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:8",
																									"nodeType": "YulLiteral",
																									"src": "883:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:8"
																							},
																							"nativeSrc": "863:25:8",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:8"
																					},
																					"nativeSrc": "857:32:8",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:8"
																			},
																			"nativeSrc": "823:67:8",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:8"
																		},
																		"nativeSrc": "823:67:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:8"
																},
																"nativeSrc": "765:13:8",
																"nodeType": "YulFunctionCall",
																"src": "765:13:8"
															},
															"nativeSrc": "757:143:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:8",
																"nodeType": "YulBlock",
																"src": "779:21:8",
																"statements": [
																	{
																		"nativeSrc": "781:17:8",
																		"nodeType": "YulAssignment",
																		"src": "781:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:8",
																					"nodeType": "YulLiteral",
																					"src": "793:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:8"
																			},
																			"nativeSrc": "786:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:8",
																"nodeType": "YulBlock",
																"src": "761:3:8",
																"statements": []
															},
															"src": "757:143:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:8"
																				},
																				"nativeSrc": "920:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:8",
																				"nodeType": "YulLiteral",
																				"src": "941:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:8"
																		},
																		"nativeSrc": "916:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "948:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:8"
																},
																"nativeSrc": "909:41:8",
																"nodeType": "YulFunctionCall",
																"src": "909:41:8"
															},
															"nativeSrc": "909:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:8"
														},
														{
															"nativeSrc": "959:15:8",
															"nodeType": "YulAssignment",
															"src": "959:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:8",
																"nodeType": "YulIdentifier",
																"src": "968:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:8",
														"nodeType": "YulTypedName",
														"src": "184:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:8",
														"nodeType": "YulTypedName",
														"src": "192:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:8",
														"nodeType": "YulTypedName",
														"src": "200:5:8",
														"type": ""
													}
												],
												"src": "146:834:8"
											},
											{
												"body": {
													"nativeSrc": "1103:439:8",
													"nodeType": "YulBlock",
													"src": "1103:439:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:8",
																"nodeType": "YulBlock",
																"src": "1149:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:8"
																			},
																			"nativeSrc": "1151:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:8"
																		},
																		"nativeSrc": "1151:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:8"
																		},
																		"nativeSrc": "1120:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:8"
																},
																"nativeSrc": "1116:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:8"
															},
															"nativeSrc": "1113:52:8",
															"nodeType": "YulIf",
															"src": "1113:52:8"
														},
														{
															"nativeSrc": "1174:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:8"
																},
																"nativeSrc": "1188:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:8",
																"nodeType": "YulBlock",
																"src": "1247:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:8"
																			},
																			"nativeSrc": "1249:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:8"
																		},
																		"nativeSrc": "1249:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:8"
																				},
																				"nativeSrc": "1231:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:8"
																		},
																		"nativeSrc": "1227:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:8"
																},
																"nativeSrc": "1216:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:8"
															},
															"nativeSrc": "1213:50:8",
															"nodeType": "YulIf",
															"src": "1213:50:8"
														},
														{
															"nativeSrc": "1272:71:8",
															"nodeType": "YulAssignment",
															"src": "1272:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:8"
																		},
																		"nativeSrc": "1311:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:8"
																},
																"nativeSrc": "1282:61:8",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:8"
																}
															]
														},
														{
															"nativeSrc": "1352:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:8"
																		},
																		"nativeSrc": "1374:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:8"
																},
																"nativeSrc": "1368:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:8",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:8",
																"nodeType": "YulBlock",
																"src": "1438:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:8"
																			},
																			"nativeSrc": "1440:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:8"
																		},
																		"nativeSrc": "1440:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:8"
																				},
																				"nativeSrc": "1422:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:8"
																		},
																		"nativeSrc": "1418:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:8"
																},
																"nativeSrc": "1405:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:8"
															},
															"nativeSrc": "1402:52:8",
															"nodeType": "YulIf",
															"src": "1402:52:8"
														},
														{
															"nativeSrc": "1463:73:8",
															"nodeType": "YulAssignment",
															"src": "1463:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:8"
																		},
																		"nativeSrc": "1502:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:8"
																},
																"nativeSrc": "1473:63:8",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:8",
														"nodeType": "YulTypedName",
														"src": "1061:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:8",
														"nodeType": "YulTypedName",
														"src": "1072:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:8",
														"nodeType": "YulTypedName",
														"src": "1084:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:8",
														"nodeType": "YulTypedName",
														"src": "1092:6:8",
														"type": ""
													}
												],
												"src": "985:557:8"
											},
											{
												"body": {
													"nativeSrc": "1602:325:8",
													"nodeType": "YulBlock",
													"src": "1602:325:8",
													"statements": [
														{
															"nativeSrc": "1612:22:8",
															"nodeType": "YulAssignment",
															"src": "1612:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:8"
																},
																"nativeSrc": "1622:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:8"
																}
															]
														},
														{
															"nativeSrc": "1643:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:8"
																},
																"nativeSrc": "1669:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:8",
																"nodeType": "YulBlock",
																"src": "1720:31:8",
																"statements": [
																	{
																		"nativeSrc": "1722:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:8"
																			},
																			"nativeSrc": "1732:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:8"
																},
																"nativeSrc": "1693:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:8"
															},
															"nativeSrc": "1690:61:8",
															"nodeType": "YulIf",
															"src": "1690:61:8"
														},
														{
															"body": {
																"nativeSrc": "1810:111:8",
																"nodeType": "YulBlock",
																"src": "1810:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:8",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:8",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:8"
																					},
																					"nativeSrc": "1834:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:8"
																			},
																			"nativeSrc": "1824:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:8"
																		},
																		"nativeSrc": "1824:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:8"
																			},
																			"nativeSrc": "1868:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:8"
																		},
																		"nativeSrc": "1868:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:8"
																			},
																			"nativeSrc": "1896:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:8"
																		},
																		"nativeSrc": "1896:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:8"
																		},
																		"nativeSrc": "1786:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:8"
																},
																"nativeSrc": "1763:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:8"
															},
															"nativeSrc": "1760:161:8",
															"nodeType": "YulIf",
															"src": "1760:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:8",
														"nodeType": "YulTypedName",
														"src": "1582:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:8",
														"nodeType": "YulTypedName",
														"src": "1591:6:8",
														"type": ""
													}
												],
												"src": "1547:380:8"
											},
											{
												"body": {
													"nativeSrc": "1988:65:8",
													"nodeType": "YulBlock",
													"src": "1988:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:8"
																},
																"nativeSrc": "1998:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:8"
															},
															"nativeSrc": "1998:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:8"
														},
														{
															"nativeSrc": "2021:26:8",
															"nodeType": "YulAssignment",
															"src": "2021:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:8"
																},
																"nativeSrc": "2029:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:8",
														"nodeType": "YulTypedName",
														"src": "1971:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:8",
														"nodeType": "YulTypedName",
														"src": "1979:4:8",
														"type": ""
													}
												],
												"src": "1932:121:8"
											},
											{
												"body": {
													"nativeSrc": "2139:437:8",
													"nodeType": "YulBlock",
													"src": "2139:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:8",
																"nodeType": "YulBlock",
																"src": "2172:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:8"
																			},
																			"nativeSrc": "2186:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:8"
																		},
																		"nativeSrc": "2186:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:8"
																	},
																	{
																		"nativeSrc": "2215:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:8"
																			},
																			"nativeSrc": "2227:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:8",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:8"
																							},
																							"nativeSrc": "2294:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:8"
																					},
																					"nativeSrc": "2287:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:8"
																			},
																			"nativeSrc": "2277:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:8",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:8",
																			"nodeType": "YulBlock",
																			"src": "2352:23:8",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:8",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:8"
																			},
																			"nativeSrc": "2331:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:8"
																		},
																		"nativeSrc": "2328:47:8",
																		"nodeType": "YulIf",
																		"src": "2328:47:8"
																	},
																	{
																		"nativeSrc": "2388:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:8",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:8"
																							},
																							"nativeSrc": "2415:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:8"
																					},
																					"nativeSrc": "2408:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:8"
																			},
																			"nativeSrc": "2398:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:8",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:8",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:8",
																			"nodeType": "YulBlock",
																			"src": "2540:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:8"
																						},
																						"nativeSrc": "2542:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:8"
																					},
																					"nativeSrc": "2542:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:8"
																			},
																			"nativeSrc": "2487:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:8"
																		},
																		"nativeSrc": "2479:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:8",
																			"nodeType": "YulBlock",
																			"src": "2501:26:8",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:8",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:8"
																						},
																						"nativeSrc": "2512:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:8",
																			"nodeType": "YulBlock",
																			"src": "2483:3:8",
																			"statements": []
																		},
																		"src": "2479:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:8"
																},
																"nativeSrc": "2152:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:8"
															},
															"nativeSrc": "2149:421:8",
															"nodeType": "YulIf",
															"src": "2149:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:8",
														"nodeType": "YulTypedName",
														"src": "2111:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:8",
														"nodeType": "YulTypedName",
														"src": "2118:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:8",
														"nodeType": "YulTypedName",
														"src": "2123:10:8",
														"type": ""
													}
												],
												"src": "2058:518:8"
											},
											{
												"body": {
													"nativeSrc": "2666:81:8",
													"nodeType": "YulBlock",
													"src": "2666:81:8",
													"statements": [
														{
															"nativeSrc": "2676:65:8",
															"nodeType": "YulAssignment",
															"src": "2676:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:8"
																								},
																								"nativeSrc": "2705:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:8"
																								},
																								"nativeSrc": "2718:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:8"
																						},
																						"nativeSrc": "2701:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:8"
																				},
																				"nativeSrc": "2697:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:8"
																		},
																		"nativeSrc": "2687:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:8"
																		},
																		"nativeSrc": "2729:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:8"
																},
																"nativeSrc": "2684:57:8",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:8",
														"nodeType": "YulTypedName",
														"src": "2643:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:8",
														"nodeType": "YulTypedName",
														"src": "2649:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:8",
														"nodeType": "YulTypedName",
														"src": "2657:4:8",
														"type": ""
													}
												],
												"src": "2581:166:8"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:8",
													"nodeType": "YulBlock",
													"src": "2848:1203:8",
													"statements": [
														{
															"nativeSrc": "2858:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:8"
																},
																"nativeSrc": "2872:10:8",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:8",
																"nodeType": "YulBlock",
																"src": "2925:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:8"
																			},
																			"nativeSrc": "2927:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:8"
																		},
																		"nativeSrc": "2927:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:8",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:8"
																				},
																				"nativeSrc": "2909:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:8"
																		},
																		"nativeSrc": "2905:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:8"
																},
																"nativeSrc": "2894:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:8"
															},
															"nativeSrc": "2891:56:8",
															"nodeType": "YulIf",
															"src": "2891:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:8"
																				},
																				"nativeSrc": "3032:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:8"
																		},
																		"nativeSrc": "3006:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:8"
																},
																"nativeSrc": "2956:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:8"
															},
															"nativeSrc": "2956:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:8"
														},
														{
															"nativeSrc": "3062:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:8",
																"nodeType": "YulLiteral",
																"src": "3079:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:8",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:8",
															"nodeType": "YulAssignment",
															"src": "3089:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:8",
																"nodeType": "YulLiteral",
																"src": "3102:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:8",
																		"nodeType": "YulBlock",
																		"src": "3152:642:8",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:8",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:8"
																							},
																							"nativeSrc": "3193:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:8"
																					},
																					"nativeSrc": "3181:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:8",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:8"
																					},
																					"nativeSrc": "3228:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:8",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:8",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:8",
																					"nodeType": "YulBlock",
																					"src": "3356:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:8"
																												},
																												"nativeSrc": "3395:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:8"
																										},
																										"nativeSrc": "3389:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:8"
																								},
																								"nativeSrc": "3374:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:8"
																							},
																							"nativeSrc": "3374:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:8"
																						},
																						{
																							"nativeSrc": "3433:24:8",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:8",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:8"
																								},
																								"nativeSrc": "3443:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:8",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:8"
																								},
																								"nativeSrc": "3487:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:8"
																					},
																					"nativeSrc": "3307:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:8"
																				},
																				"nativeSrc": "3299:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:8",
																					"nodeType": "YulBlock",
																					"src": "3322:21:8",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:8",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:8",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:8"
																								},
																								"nativeSrc": "3329:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:8",
																					"nodeType": "YulBlock",
																					"src": "3303:3:8",
																					"statements": []
																				},
																				"src": "3299:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:8",
																					"nodeType": "YulBlock",
																					"src": "3569:166:8",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:8"
																										},
																										"nativeSrc": "3610:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:8"
																								},
																								"nativeSrc": "3604:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:8",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:8"
																																		},
																																		"nativeSrc": "3689:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:8"
																																},
																																"nativeSrc": "3685:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:8"
																																},
																																"nativeSrc": "3711:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:8"
																														},
																														"nativeSrc": "3681:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:8"
																												},
																												"nativeSrc": "3677:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:8"
																										},
																										"nativeSrc": "3662:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:8"
																								},
																								"nativeSrc": "3647:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:8"
																							},
																							"nativeSrc": "3647:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:8"
																					},
																					"nativeSrc": "3537:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:8"
																				},
																				"nativeSrc": "3534:201:8",
																				"nodeType": "YulIf",
																				"src": "3534:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:8",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:8"
																									},
																									"nativeSrc": "3765:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:8",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:8"
																							},
																							"nativeSrc": "3761:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:8"
																					},
																					"nativeSrc": "3748:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:8"
																				},
																				"nativeSrc": "3748:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:8"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:8",
																	"nodeType": "YulCase",
																	"src": "3145:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:8",
																		"nodeType": "YulBlock",
																		"src": "3811:234:8",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:8",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:8",
																					"nodeType": "YulBlock",
																					"src": "3874:67:8",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:8",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:8"
																										},
																										"nativeSrc": "3907:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:8"
																								},
																								"nativeSrc": "3901:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:8"
																				},
																				"nativeSrc": "3852:89:8",
																				"nodeType": "YulIf",
																				"src": "3852:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:8"
																							},
																							"nativeSrc": "3967:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:8"
																					},
																					"nativeSrc": "3954:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:8"
																				},
																				"nativeSrc": "3954:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:8"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:8",
																	"nodeType": "YulCase",
																	"src": "3803:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:8"
																},
																"nativeSrc": "3122:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:8"
															},
															"nativeSrc": "3115:930:8",
															"nodeType": "YulSwitch",
															"src": "3115:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:8",
														"nodeType": "YulTypedName",
														"src": "2833:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:8",
														"nodeType": "YulTypedName",
														"src": "2839:3:8",
														"type": ""
													}
												],
												"src": "2752:1299:8"
											},
											{
												"body": {
													"nativeSrc": "4157:102:8",
													"nodeType": "YulBlock",
													"src": "4157:102:8",
													"statements": [
														{
															"nativeSrc": "4167:26:8",
															"nodeType": "YulAssignment",
															"src": "4167:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4179:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4179:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4190:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4175:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4175:3:8"
																},
																"nativeSrc": "4175:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4175:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4167:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4167:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4209:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4209:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4224:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4240:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4240:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4245:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4245:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4236:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4236:3:8"
																						},
																						"nativeSrc": "4236:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4236:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4249:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4249:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4232:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4232:3:8"
																				},
																				"nativeSrc": "4232:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4232:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4220:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4220:3:8"
																		},
																		"nativeSrc": "4220:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4220:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4202:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4202:6:8"
																},
																"nativeSrc": "4202:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4202:51:8"
															},
															"nativeSrc": "4202:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4202:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4056:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4126:9:8",
														"nodeType": "YulTypedName",
														"src": "4126:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4137:6:8",
														"nodeType": "YulTypedName",
														"src": "4137:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4148:4:8",
														"nodeType": "YulTypedName",
														"src": "4148:4:8",
														"type": ""
													}
												],
												"src": "4056:203:8"
											},
											{
												"body": {
													"nativeSrc": "4312:174:8",
													"nodeType": "YulBlock",
													"src": "4312:174:8",
													"statements": [
														{
															"nativeSrc": "4322:16:8",
															"nodeType": "YulAssignment",
															"src": "4322:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4333:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4333:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4336:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4336:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4329:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4329:3:8"
																},
																"nativeSrc": "4329:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4329:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4322:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4322:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4369:111:8",
																"nodeType": "YulBlock",
																"src": "4369:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4390:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4390:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4397:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4397:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4402:10:8",
																							"nodeType": "YulLiteral",
																							"src": "4402:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4393:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4393:3:8"
																					},
																					"nativeSrc": "4393:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4393:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4383:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4383:6:8"
																			},
																			"nativeSrc": "4383:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4383:31:8"
																		},
																		"nativeSrc": "4383:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4383:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4434:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4434:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4437:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4437:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4427:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4427:6:8"
																			},
																			"nativeSrc": "4427:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4427:15:8"
																		},
																		"nativeSrc": "4427:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4427:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4462:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4462:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4465:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4465:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4455:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4455:6:8"
																			},
																			"nativeSrc": "4455:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4455:15:8"
																		},
																		"nativeSrc": "4455:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4455:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4353:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4353:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4356:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4350:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4350:2:8"
																},
																"nativeSrc": "4350:10:8",
																"nodeType": "YulFunctionCall",
																"src": "4350:10:8"
															},
															"nativeSrc": "4347:133:8",
															"nodeType": "YulIf",
															"src": "4347:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4264:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4295:1:8",
														"nodeType": "YulTypedName",
														"src": "4295:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4298:1:8",
														"nodeType": "YulTypedName",
														"src": "4298:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4304:3:8",
														"nodeType": "YulTypedName",
														"src": "4304:3:8",
														"type": ""
													}
												],
												"src": "4264:222:8"
											},
											{
												"body": {
													"nativeSrc": "4648:188:8",
													"nodeType": "YulBlock",
													"src": "4648:188:8",
													"statements": [
														{
															"nativeSrc": "4658:26:8",
															"nodeType": "YulAssignment",
															"src": "4658:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4670:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4670:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4681:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4666:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:3:8"
																},
																"nativeSrc": "4666:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4658:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4658:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4700:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4700:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4715:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4715:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4731:3:8",
																								"nodeType": "YulLiteral",
																								"src": "4731:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4736:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4736:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4727:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4727:3:8"
																						},
																						"nativeSrc": "4727:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4727:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4740:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4740:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4723:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4723:3:8"
																				},
																				"nativeSrc": "4723:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4723:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4711:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4711:3:8"
																		},
																		"nativeSrc": "4711:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4711:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4693:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4693:6:8"
																},
																"nativeSrc": "4693:51:8",
																"nodeType": "YulFunctionCall",
																"src": "4693:51:8"
															},
															"nativeSrc": "4693:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "4693:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4775:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4775:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4760:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4760:3:8"
																		},
																		"nativeSrc": "4760:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4760:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4780:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:8"
																},
																"nativeSrc": "4753:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4753:34:8"
															},
															"nativeSrc": "4753:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4753:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4807:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4807:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4818:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4818:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4803:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4803:3:8"
																		},
																		"nativeSrc": "4803:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4803:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4823:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4796:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:8"
																},
																"nativeSrc": "4796:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4796:34:8"
															},
															"nativeSrc": "4796:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "4796:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4491:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4601:9:8",
														"nodeType": "YulTypedName",
														"src": "4601:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4612:6:8",
														"nodeType": "YulTypedName",
														"src": "4612:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4620:6:8",
														"nodeType": "YulTypedName",
														"src": "4620:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4628:6:8",
														"nodeType": "YulTypedName",
														"src": "4628:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4639:4:8",
														"nodeType": "YulTypedName",
														"src": "4639:4:8",
														"type": ""
													}
												],
												"src": "4491:345:8"
											},
											{
												"body": {
													"nativeSrc": "4942:76:8",
													"nodeType": "YulBlock",
													"src": "4942:76:8",
													"statements": [
														{
															"nativeSrc": "4952:26:8",
															"nodeType": "YulAssignment",
															"src": "4952:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4964:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4964:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4975:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4975:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4960:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:8"
																},
																"nativeSrc": "4960:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4960:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4952:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4952:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5005:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4987:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:8"
																},
																"nativeSrc": "4987:25:8",
																"nodeType": "YulFunctionCall",
																"src": "4987:25:8"
															},
															"nativeSrc": "4987:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "4987:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4841:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4911:9:8",
														"nodeType": "YulTypedName",
														"src": "4911:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4922:6:8",
														"nodeType": "YulTypedName",
														"src": "4922:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4933:4:8",
														"nodeType": "YulTypedName",
														"src": "4933:4:8",
														"type": ""
													}
												],
												"src": "4841:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269d3c21bcecceda100000060075534801561001e57600080fd5b5060405161169438038061169483398101604081905261003d91610326565b338282600361004c8382610418565b5060046100598282610418565b5050506001600160a01b03811661008b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610094816100b7565b506005805460ff60a01b191690556007546100b0903390610109565b50506104fd565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166101335760405163ec442f0560e01b815260006004820152602401610082565b61013f60008383610143565b5050565b6001600160a01b03831661016e57806002600082825461016391906104d6565b909155506101e09050565b6001600160a01b038316600090815260208190526040902054818110156101c15760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610082565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166101fc5760028054829003905561021b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161026091815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261029457600080fd5b81516001600160401b038111156102ad576102ad61026d565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102db576102db61026d565b6040528181528382016020018510156102f357600080fd5b60005b82811015610312576020818601810151838301820152016102f6565b506000918101602001919091529392505050565b6000806040838503121561033957600080fd5b82516001600160401b0381111561034f57600080fd5b61035b85828601610283565b602085015190935090506001600160401b0381111561037957600080fd5b61038585828601610283565b9150509250929050565b600181811c908216806103a357607f821691505b6020821081036103c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561041357806000526020600020601f840160051c810160208510156103f05750805b601f840160051c820191505b8181101561041057600081556001016103fc565b50505b505050565b81516001600160401b038111156104315761043161026d565b6104458161043f845461038f565b846103c9565b6020601f82116001811461047957600083156104615750848201515b600019600385901b1c1916600184901b178455610410565b600084815260208120601f198516915b828110156104a95787850151825560209485019460019092019101610489565b50848210156104c75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156104f757634e487b7160e01b600052601160045260246000fd5b92915050565b6111888061050c6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a9059cbb1161007c578063a9059cbb146102b5578063c66e4095146102c8578063dbac26e9146102db578063dd62ed3e146102fe578063f2fde38b14610337578063fe575a871461034a57600080fd5b8063715018a6146102455780638456cb591461024d57806388d695b2146102555780638da5cb5b1461026857806395d89b411461028d5780639bc289f11461029557600080fd5b80632e0d2a00116101155780632e0d2a00146101cd578063313ce567146101e05780633e579307146101ef5780633f4ba83a146102025780635c975abb1461020a57806370a082311461021c57600080fd5b806306fdde0314610152578063095ea7b314610170578063153b0d1e1461019357806318160ddd146101a857806323b872dd146101ba575b600080fd5b61015a610376565b6040516101679190610df8565b60405180910390f35b61018361017e366004610e62565b610408565b6040519015158152602001610167565b6101a66101a1366004610e8c565b610422565b005b6002545b604051908152602001610167565b6101836101c8366004610ec8565b61048a565b6101a66101db366004610f05565b61057b565b60405160128152602001610167565b6101a66101fd366004610e62565b6105cd565b6101a6610665565b600554600160a01b900460ff16610183565b6101ac61022a366004610f05565b6001600160a01b031660009081526020819052604090205490565b6101a6610677565b6101a6610689565b6101a6610263366004610f6c565b610699565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610167565b61015a610811565b6101ac6102a3366004610f05565b60086020526000908152604090205481565b6101836102c3366004610e62565b610820565b600654610275906001600160a01b031681565b6101836102e9366004610f05565b60096020526000908152604090205460ff1681565b6101ac61030c366004610fdd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101a6610345366004610f05565b6108eb565b610183610358366004610f05565b6001600160a01b031660009081526009602052604090205460ff1690565b60606003805461038590611010565b80601f01602080910402602001604051908101604052809291908181526020018280546103b190611010565b80156103fe5780601f106103d3576101008083540402835291602001916103fe565b820191906000526020600020905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b600033610416818585610929565b60019150505b92915050565b61042a61093b565b6001600160a01b038216600081815260096020908152604091829020805460ff191685151590811790915591519182527fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd891015b60405180910390a25050565b6000610494610968565b6001600160a01b03841660009081526009602052604090205460ff16156104d65760405162461bcd60e51b81526004016104cd9061104a565b60405180910390fd5b6001600160a01b03831660009081526009602052604090205460ff161561050f5760405162461bcd60e51b81526004016104cd90611090565b6001600160a01b0384166000908152600860205260409020544210158061054c57506001600160a01b038416600090815260086020526040902054155b6105685760405162461bcd60e51b81526004016104cd906110d9565b6105738484846109b5565b949350505050565b61058361093b565b600680546001600160a01b0319166001600160a01b0383169081179091556040517fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad890600090a250565b6006546001600160a01b031633146106185760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016104cd565b6001600160a01b03821660008181526008602052604090819020839055517f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f9061047e9084815260200190565b61066d61093b565b6106756109d9565b565b61067f61093b565b6106756000610a2e565b61069161093b565b610675610a80565b6106a1610968565b8281146107005760405162461bcd60e51b815260206004820152602760248201527f42617463685472616e73666572206661696c65643a204d69736d6174636865646044820152662061727261797360c81b60648201526084016104cd565b8260005b8181101561080957600960008787848181106107225761072261111b565b90506020020160208101906107379190610f05565b6001600160a01b0316815260208101919091526040016000205460ff16156107b85760405162461bcd60e51b815260206004820152602e60248201527f42617463685472616e73666572206661696c65643a20526563697069656e742060448201526d1a5cc8189b1858dadb1a5cdd195960921b60648201526084016104cd565b610801338787848181106107ce576107ce61111b565b90506020020160208101906107e39190610f05565b8686858181106107f5576107f561111b565b90506020020135610ac3565b600101610704565b505050505050565b60606004805461038590611010565b600061082a610968565b3360009081526009602052604090205460ff161561085a5760405162461bcd60e51b81526004016104cd9061104a565b6001600160a01b03831660009081526009602052604090205460ff16156108935760405162461bcd60e51b81526004016104cd90611090565b33600090815260086020526040902054421015806108be575033600090815260086020526040902054155b6108da5760405162461bcd60e51b81526004016104cd906110d9565b6108e48383610b22565b9392505050565b6108f361093b565b6001600160a01b03811661091d57604051631e4fbdf760e01b8152600060048201526024016104cd565b61092681610a2e565b50565b6109368383836001610b30565b505050565b6005546001600160a01b031633146106755760405163118cdaa760e01b81523360048201526024016104cd565b600554600160a01b900460ff16156106755760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104cd565b6000336109c3858285610c06565b6109ce858585610ac3565b506001949350505050565b6109e1610c7e565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a88610968565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a113390565b6001600160a01b038316610aed57604051634b637e8f60e11b8152600060048201526024016104cd565b6001600160a01b038216610b175760405163ec442f0560e01b8152600060048201526024016104cd565b610936838383610cce565b600033610416818585610ac3565b6001600160a01b038416610b5a5760405163e602df0560e01b8152600060048201526024016104cd565b6001600160a01b038316610b8457604051634a1406b160e11b8152600060048201526024016104cd565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610c0057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bf791815260200190565b60405180910390a35b50505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c005781811015610c6f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104cd565b610c0084848484036000610b30565b600554600160a01b900460ff166106755760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104cd565b6001600160a01b038316610cf9578060026000828254610cee9190611131565b90915550610d6b9050565b6001600160a01b03831660009081526020819052604090205481811015610d4c5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104cd565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610d8757600280548290039055610da6565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610deb91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b81811015610e265760208186018101516040868401015201610e09565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610e5d57600080fd5b919050565b60008060408385031215610e7557600080fd5b610e7e83610e46565b946020939093013593505050565b60008060408385031215610e9f57600080fd5b610ea883610e46565b915060208301358015158114610ebd57600080fd5b809150509250929050565b600080600060608486031215610edd57600080fd5b610ee684610e46565b9250610ef460208501610e46565b929592945050506040919091013590565b600060208284031215610f1757600080fd5b6108e482610e46565b60008083601f840112610f3257600080fd5b50813567ffffffffffffffff811115610f4a57600080fd5b6020830191508360208260051b8501011115610f6557600080fd5b9250929050565b60008060008060408587031215610f8257600080fd5b843567ffffffffffffffff811115610f9957600080fd5b610fa587828801610f20565b909550935050602085013567ffffffffffffffff811115610fc557600080fd5b610fd187828801610f20565b95989497509550505050565b60008060408385031215610ff057600080fd5b610ff983610e46565b915061100760208401610e46565b90509250929050565b600181811c9082168061102457607f821691505b60208210810361104457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526026908201527f5472616e73666572206661696c65643a2053656e64657220697320626c61636b6040820152651b1a5cdd195960d21b606082015260800190565b60208082526029908201527f5472616e73666572206661696c65643a20526563697069656e7420697320626c6040820152681858dadb1a5cdd195960ba1b606082015260800190565b60208082526022908201527f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b604082015261195960f21b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b8082018082111561041c57634e487b7160e01b600052601160045260246000fdfea264697066735822122001e9bab1fe0f0f85bafdc7f831deecb1b7fd44ad383d29d145823f95136a8be964736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1694 CODESIZE SUB DUP1 PUSH2 0x1694 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x326 JUMP JUMPDEST CALLER DUP3 DUP3 PUSH1 0x3 PUSH2 0x4C DUP4 DUP3 PUSH2 0x418 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x59 DUP3 DUP3 PUSH2 0x418 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94 DUP2 PUSH2 0xB7 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH2 0xB0 SWAP1 CALLER SWAP1 PUSH2 0x109 JUMP JUMPDEST POP POP PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x82 JUMP JUMPDEST PUSH2 0x13F PUSH1 0x0 DUP4 DUP4 PUSH2 0x143 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1E0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x21B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2AD JUMPI PUSH2 0x2AD PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2DB JUMPI PUSH2 0x2DB PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2F6 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35B DUP6 DUP3 DUP7 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x385 DUP6 DUP3 DUP7 ADD PUSH2 0x283 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x413 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3F0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3FC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x431 JUMPI PUSH2 0x431 PUSH2 0x26D JUMP JUMPDEST PUSH2 0x445 DUP2 PUSH2 0x43F DUP5 SLOAD PUSH2 0x38F JUMP JUMPDEST DUP5 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x461 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x410 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x489 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x4C7 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4F7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1188 DUP1 PUSH2 0x50C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E0D2A00 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x677 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x811 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x275 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x183 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x1010 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x1010 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x416 DUP2 DUP6 DUP6 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42A PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x54C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x573 DUP5 DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x583 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F SWAP1 PUSH2 0x47E SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x66D PUSH2 0x93B JUMP JUMPDEST PUSH2 0x675 PUSH2 0x9D9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x67F PUSH2 0x93B JUMP JUMPDEST PUSH2 0x675 PUSH1 0x0 PUSH2 0xA2E JUMP JUMPDEST PUSH2 0x691 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x675 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x968 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20617272617973 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4CD JUMP JUMPDEST DUP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x809 JUMPI PUSH1 0x9 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0x111B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1A5CC8189B1858DADB1A5CDD1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x801 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x7CE JUMPI PUSH2 0x7CE PUSH2 0x111B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x7F5 JUMPI PUSH2 0x7F5 PUSH2 0x111B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x704 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82A PUSH2 0x968 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x1090 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x8BE JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x8E4 DUP4 DUP4 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0xA2E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x936 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x9C3 DUP6 DUP3 DUP6 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x9CE DUP6 DUP6 DUP6 PUSH2 0xAC3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x9E1 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA88 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xA11 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x936 DUP4 DUP4 DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x416 DUP2 DUP6 DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC00 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC00 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0xC00 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCF9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD6B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD87 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xE09 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7E DUP4 PUSH2 0xE46 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA8 DUP4 PUSH2 0xE46 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE6 DUP5 PUSH2 0xE46 JUMP JUMPDEST SWAP3 POP PUSH2 0xEF4 PUSH1 0x20 DUP6 ADD PUSH2 0xE46 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E4 DUP3 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA5 DUP8 DUP3 DUP9 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD1 DUP8 DUP3 DUP9 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF9 DUP4 PUSH2 0xE46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1007 PUSH1 0x20 DUP5 ADD PUSH2 0xE46 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1024 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1044 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1B1A5CDD1959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1858DADB1A5CDD1959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xE9 0xBA 0xB1 INVALID 0xF 0xF DUP6 0xBA REVERT 0xC7 0xF8 BALANCE 0xDE 0xEC 0xB1 0xB7 REVERT DIFFICULTY 0xAD CODESIZE RETURNDATASIZE 0x29 0xD1 GASLIMIT DUP3 EXTCODEHASH SWAP6 SGT PUSH11 0x8BE964736F6C634300081C STOP CALLER ",
							"sourceMap": "225:3078:7:-:0;;;343:18;312:49;;749:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;831:10;809:4;815:6;1667:5:3;:13;809:4:7;1667:5:3;:13;:::i;:::-;-1:-1:-1;1690:7:3;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4202:51:8;4175:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;996:7:2;:15;;-1:-1:-1;;;;996:15:2;;;871:12:7::2;::::0;853:31:::2;::::0;859:10:::2;::::0;853:5:::2;:31::i;:::-;749:143:::0;;225:3078;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:3:-;-1:-1:-1;;;;;7528:21:3;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:3;;7601:1;7572:32;;;4202:51:8;4175:18;;7572:32:3;4056:203:8;7524:91:3;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:3;;-1:-1:-1;;;;;4711:32:8;;6386:50:3;;;4693:51:8;4760:18;;;4753:34;;;4803:18;;;4796:34;;;4666:18;;6386:50:3;4491:345:8;6336:115:3;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;4987::8;;4975:2;4960:18;;4841:177;7083:25:3;;;;;;;;6008:1107;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:8;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:8;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:8;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:8;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:8;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:8:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:8;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:8;-1:-1:-1;;;;;;1405:32:8;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:8;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:8;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:8;;;3901:26;3852:89;-1:-1:-1;;2709:1:8;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:8;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:8;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:8;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:8:o;4264:222::-;4329:9;;;4350:10;;;4347:133;;;4402:10;4397:3;4393:20;4390:1;4383:31;4437:4;4434:1;4427:15;4465:4;4462:1;4455:15;4347:133;4264:222;;;;:::o;4841:177::-;225:3078:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_798": {
									"entryPoint": 2345,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_858": {
									"entryPoint": 2864,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2363,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 2688,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 2408,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 3198,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_906": {
									"entryPoint": 3078,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2606,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_637": {
									"entryPoint": 2755,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 2521,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 3278,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_558": {
									"entryPoint": 1032,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchTransfer_1389": {
									"entryPoint": 1689,
									"id": 1389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@blacklisted_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1152": {
									"entryPoint": null,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@icoContract_1054": {
									"entryPoint": null,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_1206": {
									"entryPoint": null,
									"id": 1206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockedUntil_1065": {
									"entryPoint": null,
									"id": 1065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_453": {
									"entryPoint": 886,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1134": {
									"entryPoint": 1673,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1655,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlacklist_1194": {
									"entryPoint": 1058,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setICOContract_1330": {
									"entryPoint": 1403,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockup_1173": {
									"entryPoint": 1485,
									"id": 1173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_462": {
									"entryPoint": 2065,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1314": {
									"entryPoint": 1162,
									"id": 1314,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_590": {
									"entryPoint": 2485,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2283,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1260": {
									"entryPoint": 2080,
									"id": 1260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_517": {
									"entryPoint": 2850,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1143": {
									"entryPoint": 1637,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8303:8",
										"nodeType": "YulBlock",
										"src": "0:8303:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:406:8",
													"nodeType": "YulBlock",
													"src": "135:406:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"nativeSrc": "254:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "254:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "263:1:8",
																"nodeType": "YulLiteral",
																"src": "263:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "258:1:8",
																	"nodeType": "YulTypedName",
																	"src": "258:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "323:90:8",
																"nodeType": "YulBlock",
																"src": "323:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "352:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "352:9:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "363:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "363:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "348:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "348:3:8"
																							},
																							"nativeSrc": "348:17:8",
																							"nodeType": "YulFunctionCall",
																							"src": "348:17:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "367:2:8",
																							"nodeType": "YulLiteral",
																							"src": "367:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "344:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "344:3:8"
																					},
																					"nativeSrc": "344:26:8",
																					"nodeType": "YulFunctionCall",
																					"src": "344:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "386:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "386:6:8"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "394:1:8",
																											"nodeType": "YulIdentifier",
																											"src": "394:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "382:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "382:3:8"
																									},
																									"nativeSrc": "382:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "382:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "398:2:8",
																									"nodeType": "YulLiteral",
																									"src": "398:2:8",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "378:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "378:3:8"
																							},
																							"nativeSrc": "378:23:8",
																							"nodeType": "YulFunctionCall",
																							"src": "378:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "372:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "372:5:8"
																					},
																					"nativeSrc": "372:30:8",
																					"nodeType": "YulFunctionCall",
																					"src": "372:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "337:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "337:6:8"
																			},
																			"nativeSrc": "337:66:8",
																			"nodeType": "YulFunctionCall",
																			"src": "337:66:8"
																		},
																		"nativeSrc": "337:66:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "337:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "284:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "284:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "287:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "281:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "281:2:8"
																},
																"nativeSrc": "281:13:8",
																"nodeType": "YulFunctionCall",
																"src": "281:13:8"
															},
															"nativeSrc": "273:140:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "295:19:8",
																"nodeType": "YulBlock",
																"src": "295:19:8",
																"statements": [
																	{
																		"nativeSrc": "297:15:8",
																		"nodeType": "YulAssignment",
																		"src": "297:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "306:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "306:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "309:2:8",
																					"nodeType": "YulLiteral",
																					"src": "309:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "302:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:8"
																			},
																			"nativeSrc": "302:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "302:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "297:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "297:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "277:3:8",
																"nodeType": "YulBlock",
																"src": "277:3:8",
																"statements": []
															},
															"src": "273:140:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "437:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "437:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "448:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "448:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "433:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "433:3:8"
																				},
																				"nativeSrc": "433:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "433:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:8",
																				"nodeType": "YulLiteral",
																				"src": "457:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:8"
																		},
																		"nativeSrc": "429:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "429:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:1:8",
																		"nodeType": "YulLiteral",
																		"src": "462:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:8"
																},
																"nativeSrc": "422:42:8",
																"nodeType": "YulFunctionCall",
																"src": "422:42:8"
															},
															"nativeSrc": "422:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "422:42:8"
														},
														{
															"nativeSrc": "473:62:8",
															"nodeType": "YulAssignment",
															"src": "473:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "489:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "489:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "508:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "508:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "516:2:8",
																								"nodeType": "YulLiteral",
																								"src": "516:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "504:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "504:3:8"
																						},
																						"nativeSrc": "504:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "504:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "525:2:8",
																								"nodeType": "YulLiteral",
																								"src": "525:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "521:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "521:3:8"
																						},
																						"nativeSrc": "521:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "521:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "500:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "500:3:8"
																				},
																				"nativeSrc": "500:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "500:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "485:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "485:3:8"
																		},
																		"nativeSrc": "485:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "485:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "532:2:8",
																		"nodeType": "YulLiteral",
																		"src": "532:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:8"
																},
																"nativeSrc": "481:54:8",
																"nodeType": "YulFunctionCall",
																"src": "481:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:527:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:527:8"
											},
											{
												"body": {
													"nativeSrc": "595:124:8",
													"nodeType": "YulBlock",
													"src": "595:124:8",
													"statements": [
														{
															"nativeSrc": "605:29:8",
															"nodeType": "YulAssignment",
															"src": "605:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "627:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "614:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "614:12:8"
																},
																"nativeSrc": "614:20:8",
																"nodeType": "YulFunctionCall",
																"src": "614:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "605:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "697:16:8",
																"nodeType": "YulBlock",
																"src": "697:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "706:1:8",
																					"nodeType": "YulLiteral",
																					"src": "706:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "709:1:8",
																					"nodeType": "YulLiteral",
																					"src": "709:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "699:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:8"
																			},
																			"nativeSrc": "699:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "699:12:8"
																		},
																		"nativeSrc": "699:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "699:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "667:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "667:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "682:3:8",
																										"nodeType": "YulLiteral",
																										"src": "682:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "687:1:8",
																										"nodeType": "YulLiteral",
																										"src": "687:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "678:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "678:3:8"
																								},
																								"nativeSrc": "678:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "678:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "691:1:8",
																								"nodeType": "YulLiteral",
																								"src": "691:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "674:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:8"
																						},
																						"nativeSrc": "674:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "674:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "663:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:8"
																				},
																				"nativeSrc": "663:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "663:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "653:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "653:2:8"
																		},
																		"nativeSrc": "653:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "653:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:8"
																},
																"nativeSrc": "646:50:8",
																"nodeType": "YulFunctionCall",
																"src": "646:50:8"
															},
															"nativeSrc": "643:70:8",
															"nodeType": "YulIf",
															"src": "643:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "546:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "574:6:8",
														"nodeType": "YulTypedName",
														"src": "574:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "585:5:8",
														"nodeType": "YulTypedName",
														"src": "585:5:8",
														"type": ""
													}
												],
												"src": "546:173:8"
											},
											{
												"body": {
													"nativeSrc": "811:213:8",
													"nodeType": "YulBlock",
													"src": "811:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "857:16:8",
																"nodeType": "YulBlock",
																"src": "857:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "866:1:8",
																					"nodeType": "YulLiteral",
																					"src": "866:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "869:1:8",
																					"nodeType": "YulLiteral",
																					"src": "869:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "859:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:8"
																			},
																			"nativeSrc": "859:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:8"
																		},
																		"nativeSrc": "859:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "832:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "841:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "828:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:8"
																		},
																		"nativeSrc": "828:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:2:8",
																		"nodeType": "YulLiteral",
																		"src": "853:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "824:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:8"
																},
																"nativeSrc": "824:32:8",
																"nodeType": "YulFunctionCall",
																"src": "824:32:8"
															},
															"nativeSrc": "821:52:8",
															"nodeType": "YulIf",
															"src": "821:52:8"
														},
														{
															"nativeSrc": "882:39:8",
															"nodeType": "YulAssignment",
															"src": "882:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "911:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "892:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "892:18:8"
																},
																"nativeSrc": "892:29:8",
																"nodeType": "YulFunctionCall",
																"src": "892:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "882:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "882:6:8"
																}
															]
														},
														{
															"nativeSrc": "930:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "930:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "943:1:8",
																"nodeType": "YulLiteral",
																"src": "943:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "934:5:8",
																	"nodeType": "YulTypedName",
																	"src": "934:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "953:41:8",
															"nodeType": "YulAssignment",
															"src": "953:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "990:2:8",
																				"nodeType": "YulLiteral",
																				"src": "990:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:8"
																		},
																		"nativeSrc": "975:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "975:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "962:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "962:12:8"
																},
																"nativeSrc": "962:32:8",
																"nodeType": "YulFunctionCall",
																"src": "962:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "953:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "953:5:8"
																}
															]
														},
														{
															"nativeSrc": "1003:15:8",
															"nodeType": "YulAssignment",
															"src": "1003:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1013:5:8",
																"nodeType": "YulIdentifier",
																"src": "1013:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1003:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "724:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "769:9:8",
														"nodeType": "YulTypedName",
														"src": "769:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "780:7:8",
														"nodeType": "YulTypedName",
														"src": "780:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "792:6:8",
														"nodeType": "YulTypedName",
														"src": "792:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "800:6:8",
														"nodeType": "YulTypedName",
														"src": "800:6:8",
														"type": ""
													}
												],
												"src": "724:300:8"
											},
											{
												"body": {
													"nativeSrc": "1124:92:8",
													"nodeType": "YulBlock",
													"src": "1124:92:8",
													"statements": [
														{
															"nativeSrc": "1134:26:8",
															"nodeType": "YulAssignment",
															"src": "1134:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1146:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1146:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1157:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1157:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1142:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:8"
																},
																"nativeSrc": "1142:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1142:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1134:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1134:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1176:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1201:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1201:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1194:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1194:6:8"
																				},
																				"nativeSrc": "1194:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1194:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1187:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1187:6:8"
																		},
																		"nativeSrc": "1187:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1187:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1169:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1169:6:8"
																},
																"nativeSrc": "1169:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1169:41:8"
															},
															"nativeSrc": "1169:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1169:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1029:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1093:9:8",
														"nodeType": "YulTypedName",
														"src": "1093:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1104:6:8",
														"nodeType": "YulTypedName",
														"src": "1104:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1115:4:8",
														"nodeType": "YulTypedName",
														"src": "1115:4:8",
														"type": ""
													}
												],
												"src": "1029:187:8"
											},
											{
												"body": {
													"nativeSrc": "1305:263:8",
													"nodeType": "YulBlock",
													"src": "1305:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1351:16:8",
																"nodeType": "YulBlock",
																"src": "1351:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1360:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1360:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1363:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1363:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1353:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:8"
																			},
																			"nativeSrc": "1353:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1353:12:8"
																		},
																		"nativeSrc": "1353:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1353:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1326:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1326:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1335:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1335:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1322:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:8"
																		},
																		"nativeSrc": "1322:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1347:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1347:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1318:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1318:3:8"
																},
																"nativeSrc": "1318:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1318:32:8"
															},
															"nativeSrc": "1315:52:8",
															"nodeType": "YulIf",
															"src": "1315:52:8"
														},
														{
															"nativeSrc": "1376:39:8",
															"nodeType": "YulAssignment",
															"src": "1376:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1405:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1405:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1386:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1386:18:8"
																},
																"nativeSrc": "1386:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1386:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1376:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:8"
																}
															]
														},
														{
															"nativeSrc": "1424:45:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1424:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1454:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1465:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1465:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1450:3:8"
																		},
																		"nativeSrc": "1450:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1450:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1437:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:12:8"
																},
																"nativeSrc": "1437:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1428:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1428:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1522:16:8",
																"nodeType": "YulBlock",
																"src": "1522:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1531:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1531:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1534:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1534:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1524:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:8"
																			},
																			"nativeSrc": "1524:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1524:12:8"
																		},
																		"nativeSrc": "1524:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1524:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1491:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1491:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1512:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1512:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1505:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1505:6:8"
																						},
																						"nativeSrc": "1505:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1505:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1498:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1498:6:8"
																				},
																				"nativeSrc": "1498:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1498:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1488:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1488:2:8"
																		},
																		"nativeSrc": "1488:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1488:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1481:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:8"
																},
																"nativeSrc": "1481:40:8",
																"nodeType": "YulFunctionCall",
																"src": "1481:40:8"
															},
															"nativeSrc": "1478:60:8",
															"nodeType": "YulIf",
															"src": "1478:60:8"
														},
														{
															"nativeSrc": "1547:15:8",
															"nodeType": "YulAssignment",
															"src": "1547:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1557:5:8",
																"nodeType": "YulIdentifier",
																"src": "1557:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1547:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "1221:347:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1263:9:8",
														"nodeType": "YulTypedName",
														"src": "1263:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1274:7:8",
														"nodeType": "YulTypedName",
														"src": "1274:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1286:6:8",
														"nodeType": "YulTypedName",
														"src": "1286:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1294:6:8",
														"nodeType": "YulTypedName",
														"src": "1294:6:8",
														"type": ""
													}
												],
												"src": "1221:347:8"
											},
											{
												"body": {
													"nativeSrc": "1674:76:8",
													"nodeType": "YulBlock",
													"src": "1674:76:8",
													"statements": [
														{
															"nativeSrc": "1684:26:8",
															"nodeType": "YulAssignment",
															"src": "1684:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1696:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1696:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1707:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1707:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1692:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1692:3:8"
																},
																"nativeSrc": "1692:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1692:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1684:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1684:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1726:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1726:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1737:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1737:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1719:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:8"
																},
																"nativeSrc": "1719:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1719:25:8"
															},
															"nativeSrc": "1719:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1719:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1573:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1643:9:8",
														"nodeType": "YulTypedName",
														"src": "1643:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1654:6:8",
														"nodeType": "YulTypedName",
														"src": "1654:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1665:4:8",
														"nodeType": "YulTypedName",
														"src": "1665:4:8",
														"type": ""
													}
												],
												"src": "1573:177:8"
											},
											{
												"body": {
													"nativeSrc": "1859:270:8",
													"nodeType": "YulBlock",
													"src": "1859:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1905:16:8",
																"nodeType": "YulBlock",
																"src": "1905:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1914:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1917:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1907:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:8"
																			},
																			"nativeSrc": "1907:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:8"
																		},
																		"nativeSrc": "1907:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1880:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1880:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1889:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1889:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1876:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:8"
																		},
																		"nativeSrc": "1876:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1876:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1901:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1901:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:8"
																},
																"nativeSrc": "1872:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1872:32:8"
															},
															"nativeSrc": "1869:52:8",
															"nodeType": "YulIf",
															"src": "1869:52:8"
														},
														{
															"nativeSrc": "1930:39:8",
															"nodeType": "YulAssignment",
															"src": "1930:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1959:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1959:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1940:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1940:18:8"
																},
																"nativeSrc": "1940:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1940:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1930:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1930:6:8"
																}
															]
														},
														{
															"nativeSrc": "1978:48:8",
															"nodeType": "YulAssignment",
															"src": "1978:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2022:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:8"
																		},
																		"nativeSrc": "2007:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1988:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1988:18:8"
																},
																"nativeSrc": "1988:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1988:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1978:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:8"
																}
															]
														},
														{
															"nativeSrc": "2035:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2035:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2048:1:8",
																"nodeType": "YulLiteral",
																"src": "2048:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2039:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2039:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2058:41:8",
															"nodeType": "YulAssignment",
															"src": "2058:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2084:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2084:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2095:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2095:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2080:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2080:3:8"
																		},
																		"nativeSrc": "2080:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2080:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2067:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2067:12:8"
																},
																"nativeSrc": "2067:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2067:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2058:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2058:5:8"
																}
															]
														},
														{
															"nativeSrc": "2108:15:8",
															"nodeType": "YulAssignment",
															"src": "2108:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2118:5:8",
																"nodeType": "YulIdentifier",
																"src": "2118:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2108:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1755:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1809:9:8",
														"nodeType": "YulTypedName",
														"src": "1809:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1820:7:8",
														"nodeType": "YulTypedName",
														"src": "1820:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1832:6:8",
														"nodeType": "YulTypedName",
														"src": "1832:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1840:6:8",
														"nodeType": "YulTypedName",
														"src": "1840:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1848:6:8",
														"nodeType": "YulTypedName",
														"src": "1848:6:8",
														"type": ""
													}
												],
												"src": "1755:374:8"
											},
											{
												"body": {
													"nativeSrc": "2204:116:8",
													"nodeType": "YulBlock",
													"src": "2204:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2250:16:8",
																"nodeType": "YulBlock",
																"src": "2250:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2259:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2262:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2262:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2252:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2252:6:8"
																			},
																			"nativeSrc": "2252:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2252:12:8"
																		},
																		"nativeSrc": "2252:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2252:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2225:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2234:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2221:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:8"
																		},
																		"nativeSrc": "2221:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2221:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2217:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:8"
																},
																"nativeSrc": "2217:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2217:32:8"
															},
															"nativeSrc": "2214:52:8",
															"nodeType": "YulIf",
															"src": "2214:52:8"
														},
														{
															"nativeSrc": "2275:39:8",
															"nodeType": "YulAssignment",
															"src": "2275:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2304:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2304:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2285:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2285:18:8"
																},
																"nativeSrc": "2285:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2285:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2275:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2134:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2170:9:8",
														"nodeType": "YulTypedName",
														"src": "2170:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2181:7:8",
														"nodeType": "YulTypedName",
														"src": "2181:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2193:6:8",
														"nodeType": "YulTypedName",
														"src": "2193:6:8",
														"type": ""
													}
												],
												"src": "2134:186:8"
											},
											{
												"body": {
													"nativeSrc": "2422:87:8",
													"nodeType": "YulBlock",
													"src": "2422:87:8",
													"statements": [
														{
															"nativeSrc": "2432:26:8",
															"nodeType": "YulAssignment",
															"src": "2432:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2444:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2444:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2455:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2440:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:8"
																},
																"nativeSrc": "2440:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2440:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2432:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2432:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2474:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2474:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2489:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2489:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2497:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2485:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2485:3:8"
																		},
																		"nativeSrc": "2485:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2467:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:8"
																},
																"nativeSrc": "2467:36:8",
																"nodeType": "YulFunctionCall",
																"src": "2467:36:8"
															},
															"nativeSrc": "2467:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "2467:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2325:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2391:9:8",
														"nodeType": "YulTypedName",
														"src": "2391:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2402:6:8",
														"nodeType": "YulTypedName",
														"src": "2402:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2413:4:8",
														"nodeType": "YulTypedName",
														"src": "2413:4:8",
														"type": ""
													}
												],
												"src": "2325:184:8"
											},
											{
												"body": {
													"nativeSrc": "2598:283:8",
													"nodeType": "YulBlock",
													"src": "2598:283:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2647:16:8",
																"nodeType": "YulBlock",
																"src": "2647:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2656:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2656:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2659:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2659:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2649:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2649:6:8"
																			},
																			"nativeSrc": "2649:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2649:12:8"
																		},
																		"nativeSrc": "2649:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2649:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2626:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2626:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2634:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2634:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2622:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2622:3:8"
																				},
																				"nativeSrc": "2622:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2622:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2641:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2641:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2618:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:8"
																		},
																		"nativeSrc": "2618:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2611:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:8"
																},
																"nativeSrc": "2611:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2611:35:8"
															},
															"nativeSrc": "2608:55:8",
															"nodeType": "YulIf",
															"src": "2608:55:8"
														},
														{
															"nativeSrc": "2672:30:8",
															"nodeType": "YulAssignment",
															"src": "2672:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2695:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2695:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2682:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2682:12:8"
																},
																"nativeSrc": "2682:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2682:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2745:16:8",
																"nodeType": "YulBlock",
																"src": "2745:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2754:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2754:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2757:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2747:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2747:6:8"
																			},
																			"nativeSrc": "2747:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2747:12:8"
																		},
																		"nativeSrc": "2747:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2747:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2717:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2717:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2725:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2725:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2714:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2714:2:8"
																},
																"nativeSrc": "2714:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2714:30:8"
															},
															"nativeSrc": "2711:50:8",
															"nodeType": "YulIf",
															"src": "2711:50:8"
														},
														{
															"nativeSrc": "2770:29:8",
															"nodeType": "YulAssignment",
															"src": "2770:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2786:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2794:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2794:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2782:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2782:3:8"
																},
																"nativeSrc": "2782:17:8",
																"nodeType": "YulFunctionCall",
																"src": "2782:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2770:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2770:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2859:16:8",
																"nodeType": "YulBlock",
																"src": "2859:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2868:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2868:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2871:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2871:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2861:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2861:6:8"
																			},
																			"nativeSrc": "2861:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2861:12:8"
																		},
																		"nativeSrc": "2861:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2861:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2822:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2822:6:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2834:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2834:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2837:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "2837:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2830:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2830:3:8"
																						},
																						"nativeSrc": "2830:14:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2830:14:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2818:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2818:3:8"
																				},
																				"nativeSrc": "2818:27:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2818:27:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2847:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2847:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2814:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:8"
																		},
																		"nativeSrc": "2814:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2814:38:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2854:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2854:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2811:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2811:2:8"
																},
																"nativeSrc": "2811:47:8",
																"nodeType": "YulFunctionCall",
																"src": "2811:47:8"
															},
															"nativeSrc": "2808:67:8",
															"nodeType": "YulIf",
															"src": "2808:67:8"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "2514:367:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2561:6:8",
														"nodeType": "YulTypedName",
														"src": "2561:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2569:3:8",
														"nodeType": "YulTypedName",
														"src": "2569:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2577:8:8",
														"nodeType": "YulTypedName",
														"src": "2577:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2587:6:8",
														"nodeType": "YulTypedName",
														"src": "2587:6:8",
														"type": ""
													}
												],
												"src": "2514:367:8"
											},
											{
												"body": {
													"nativeSrc": "3043:611:8",
													"nodeType": "YulBlock",
													"src": "3043:611:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3089:16:8",
																"nodeType": "YulBlock",
																"src": "3089:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3098:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3101:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3091:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3091:6:8"
																			},
																			"nativeSrc": "3091:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3091:12:8"
																		},
																		"nativeSrc": "3091:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3091:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3064:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3064:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3073:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3060:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3060:3:8"
																		},
																		"nativeSrc": "3060:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3085:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3085:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3056:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3056:3:8"
																},
																"nativeSrc": "3056:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3056:32:8"
															},
															"nativeSrc": "3053:52:8",
															"nodeType": "YulIf",
															"src": "3053:52:8"
														},
														{
															"nativeSrc": "3114:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3114:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3141:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3141:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3128:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:8"
																},
																"nativeSrc": "3128:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3128:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3118:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3118:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3194:16:8",
																"nodeType": "YulBlock",
																"src": "3194:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:8"
																			},
																			"nativeSrc": "3196:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:8"
																		},
																		"nativeSrc": "3196:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3166:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3166:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3174:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3174:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3163:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3163:2:8"
																},
																"nativeSrc": "3163:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3163:30:8"
															},
															"nativeSrc": "3160:50:8",
															"nodeType": "YulIf",
															"src": "3160:50:8"
														},
														{
															"nativeSrc": "3219:96:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3219:96:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3287:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3287:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3298:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3298:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3283:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:8"
																		},
																		"nativeSrc": "3283:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3283:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3307:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3307:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "3245:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3245:37:8"
																},
																"nativeSrc": "3245:70:8",
																"nodeType": "YulFunctionCall",
																"src": "3245:70:8"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "3223:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3223:8:8",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "3233:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3233:8:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3324:18:8",
															"nodeType": "YulAssignment",
															"src": "3324:18:8",
															"value": {
																"name": "value0_1",
																"nativeSrc": "3334:8:8",
																"nodeType": "YulIdentifier",
																"src": "3334:8:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:8"
																}
															]
														},
														{
															"nativeSrc": "3351:18:8",
															"nodeType": "YulAssignment",
															"src": "3351:18:8",
															"value": {
																"name": "value1_1",
																"nativeSrc": "3361:8:8",
																"nodeType": "YulIdentifier",
																"src": "3361:8:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3351:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3351:6:8"
																}
															]
														},
														{
															"nativeSrc": "3378:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3378:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3411:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3411:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3422:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3422:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3407:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:8"
																		},
																		"nativeSrc": "3407:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3394:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3394:12:8"
																},
																"nativeSrc": "3394:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3394:32:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3382:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3382:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3471:16:8",
																"nodeType": "YulBlock",
																"src": "3471:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3480:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3480:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3483:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3473:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3473:6:8"
																			},
																			"nativeSrc": "3473:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3473:12:8"
																		},
																		"nativeSrc": "3473:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3473:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3441:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3441:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3451:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3451:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3438:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3438:2:8"
																},
																"nativeSrc": "3438:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3438:32:8"
															},
															"nativeSrc": "3435:52:8",
															"nodeType": "YulIf",
															"src": "3435:52:8"
														},
														{
															"nativeSrc": "3496:98:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3496:98:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3564:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3564:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3575:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3575:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3560:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:8"
																		},
																		"nativeSrc": "3560:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3560:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3586:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3586:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "3522:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3522:37:8"
																},
																"nativeSrc": "3522:72:8",
																"nodeType": "YulFunctionCall",
																"src": "3522:72:8"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "3500:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3500:8:8",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "3510:8:8",
																	"nodeType": "YulTypedName",
																	"src": "3510:8:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3603:18:8",
															"nodeType": "YulAssignment",
															"src": "3603:18:8",
															"value": {
																"name": "value2_1",
																"nativeSrc": "3613:8:8",
																"nodeType": "YulIdentifier",
																"src": "3613:8:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3603:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3603:6:8"
																}
															]
														},
														{
															"nativeSrc": "3630:18:8",
															"nodeType": "YulAssignment",
															"src": "3630:18:8",
															"value": {
																"name": "value3_1",
																"nativeSrc": "3640:8:8",
																"nodeType": "YulIdentifier",
																"src": "3640:8:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3630:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "2886:768:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2985:9:8",
														"nodeType": "YulTypedName",
														"src": "2985:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2996:7:8",
														"nodeType": "YulTypedName",
														"src": "2996:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3008:6:8",
														"nodeType": "YulTypedName",
														"src": "3008:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3016:6:8",
														"nodeType": "YulTypedName",
														"src": "3016:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3024:6:8",
														"nodeType": "YulTypedName",
														"src": "3024:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3032:6:8",
														"nodeType": "YulTypedName",
														"src": "3032:6:8",
														"type": ""
													}
												],
												"src": "2886:768:8"
											},
											{
												"body": {
													"nativeSrc": "3760:102:8",
													"nodeType": "YulBlock",
													"src": "3760:102:8",
													"statements": [
														{
															"nativeSrc": "3770:26:8",
															"nodeType": "YulAssignment",
															"src": "3770:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3782:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3782:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3793:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3778:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:8"
																},
																"nativeSrc": "3778:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3778:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3770:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3770:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3812:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3812:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3827:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3827:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3843:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3843:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3848:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3848:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3839:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3839:3:8"
																						},
																						"nativeSrc": "3839:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3839:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3852:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3852:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3835:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3835:3:8"
																				},
																				"nativeSrc": "3835:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3835:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3823:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:8"
																		},
																		"nativeSrc": "3823:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3805:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3805:6:8"
																},
																"nativeSrc": "3805:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3805:51:8"
															},
															"nativeSrc": "3805:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3805:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3659:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3729:9:8",
														"nodeType": "YulTypedName",
														"src": "3729:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3740:6:8",
														"nodeType": "YulTypedName",
														"src": "3740:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3751:4:8",
														"nodeType": "YulTypedName",
														"src": "3751:4:8",
														"type": ""
													}
												],
												"src": "3659:203:8"
											},
											{
												"body": {
													"nativeSrc": "3954:173:8",
													"nodeType": "YulBlock",
													"src": "3954:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4000:16:8",
																"nodeType": "YulBlock",
																"src": "4000:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4009:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4009:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4012:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4012:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4002:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4002:6:8"
																			},
																			"nativeSrc": "4002:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4002:12:8"
																		},
																		"nativeSrc": "4002:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4002:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3975:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3975:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3984:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3984:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3971:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3971:3:8"
																		},
																		"nativeSrc": "3971:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3971:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3996:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3996:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3967:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:8"
																},
																"nativeSrc": "3967:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3967:32:8"
															},
															"nativeSrc": "3964:52:8",
															"nodeType": "YulIf",
															"src": "3964:52:8"
														},
														{
															"nativeSrc": "4025:39:8",
															"nodeType": "YulAssignment",
															"src": "4025:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4054:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4054:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4035:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4035:18:8"
																},
																"nativeSrc": "4035:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4035:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4025:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4025:6:8"
																}
															]
														},
														{
															"nativeSrc": "4073:48:8",
															"nodeType": "YulAssignment",
															"src": "4073:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4106:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4117:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4117:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:8"
																		},
																		"nativeSrc": "4102:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4083:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4083:18:8"
																},
																"nativeSrc": "4083:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4083:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4073:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3867:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3912:9:8",
														"nodeType": "YulTypedName",
														"src": "3912:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3923:7:8",
														"nodeType": "YulTypedName",
														"src": "3923:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3935:6:8",
														"nodeType": "YulTypedName",
														"src": "3935:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3943:6:8",
														"nodeType": "YulTypedName",
														"src": "3943:6:8",
														"type": ""
													}
												],
												"src": "3867:260:8"
											},
											{
												"body": {
													"nativeSrc": "4187:325:8",
													"nodeType": "YulBlock",
													"src": "4187:325:8",
													"statements": [
														{
															"nativeSrc": "4197:22:8",
															"nodeType": "YulAssignment",
															"src": "4197:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4211:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4211:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4214:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4214:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4207:3:8"
																},
																"nativeSrc": "4207:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4207:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4197:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4197:6:8"
																}
															]
														},
														{
															"nativeSrc": "4228:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4228:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4258:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4258:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4264:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4264:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4254:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:8"
																},
																"nativeSrc": "4254:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4254:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4232:18:8",
																	"nodeType": "YulTypedName",
																	"src": "4232:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4305:31:8",
																"nodeType": "YulBlock",
																"src": "4305:31:8",
																"statements": [
																	{
																		"nativeSrc": "4307:27:8",
																		"nodeType": "YulAssignment",
																		"src": "4307:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4321:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4321:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4329:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4329:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4317:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4317:3:8"
																			},
																			"nativeSrc": "4317:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4317:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4307:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4307:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4285:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4285:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4278:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:8"
																},
																"nativeSrc": "4278:26:8",
																"nodeType": "YulFunctionCall",
																"src": "4278:26:8"
															},
															"nativeSrc": "4275:61:8",
															"nodeType": "YulIf",
															"src": "4275:61:8"
														},
														{
															"body": {
																"nativeSrc": "4395:111:8",
																"nodeType": "YulBlock",
																"src": "4395:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4416:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4416:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4423:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4423:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4428:10:8",
																							"nodeType": "YulLiteral",
																							"src": "4428:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4419:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4419:3:8"
																					},
																					"nativeSrc": "4419:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4419:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4409:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4409:6:8"
																			},
																			"nativeSrc": "4409:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4409:31:8"
																		},
																		"nativeSrc": "4409:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4409:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4460:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4460:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4463:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4463:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4453:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4453:6:8"
																			},
																			"nativeSrc": "4453:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4453:15:8"
																		},
																		"nativeSrc": "4453:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4453:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4488:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4488:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4491:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4491:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4481:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4481:6:8"
																			},
																			"nativeSrc": "4481:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:15:8"
																		},
																		"nativeSrc": "4481:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4481:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4351:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4351:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4374:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4374:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4382:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4382:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4371:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4371:2:8"
																		},
																		"nativeSrc": "4371:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4371:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4348:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4348:2:8"
																},
																"nativeSrc": "4348:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4348:38:8"
															},
															"nativeSrc": "4345:161:8",
															"nodeType": "YulIf",
															"src": "4345:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4132:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4167:4:8",
														"nodeType": "YulTypedName",
														"src": "4167:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4176:6:8",
														"nodeType": "YulTypedName",
														"src": "4176:6:8",
														"type": ""
													}
												],
												"src": "4132:380:8"
											},
											{
												"body": {
													"nativeSrc": "4691:228:8",
													"nodeType": "YulBlock",
													"src": "4691:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4708:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4708:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4719:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4719:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4701:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4701:6:8"
																},
																"nativeSrc": "4701:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4701:21:8"
															},
															"nativeSrc": "4701:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4701:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4742:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4742:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4753:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4753:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4738:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4738:3:8"
																		},
																		"nativeSrc": "4738:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4738:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4758:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4758:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4731:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4731:6:8"
																},
																"nativeSrc": "4731:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4731:30:8"
															},
															"nativeSrc": "4731:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4731:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4781:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4781:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4792:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4792:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4777:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4777:3:8"
																		},
																		"nativeSrc": "4777:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4777:18:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b",
																		"kind": "string",
																		"nativeSrc": "4797:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4797:34:8",
																		"type": "",
																		"value": "Transfer failed: Sender is black"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4770:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:8"
																},
																"nativeSrc": "4770:62:8",
																"nodeType": "YulFunctionCall",
																"src": "4770:62:8"
															},
															"nativeSrc": "4770:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "4770:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4852:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4852:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4863:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4863:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4848:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4848:3:8"
																		},
																		"nativeSrc": "4848:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:18:8"
																	},
																	{
																		"hexValue": "6c6973746564",
																		"kind": "string",
																		"nativeSrc": "4868:8:8",
																		"nodeType": "YulLiteral",
																		"src": "4868:8:8",
																		"type": "",
																		"value": "listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4841:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:8"
																},
																"nativeSrc": "4841:36:8",
																"nodeType": "YulFunctionCall",
																"src": "4841:36:8"
															},
															"nativeSrc": "4841:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "4841:36:8"
														},
														{
															"nativeSrc": "4886:27:8",
															"nodeType": "YulAssignment",
															"src": "4886:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4898:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4898:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4909:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4909:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4894:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4894:3:8"
																},
																"nativeSrc": "4894:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4894:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4886:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4886:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4517:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4668:9:8",
														"nodeType": "YulTypedName",
														"src": "4668:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4682:4:8",
														"nodeType": "YulTypedName",
														"src": "4682:4:8",
														"type": ""
													}
												],
												"src": "4517:402:8"
											},
											{
												"body": {
													"nativeSrc": "5098:231:8",
													"nodeType": "YulBlock",
													"src": "5098:231:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5115:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5115:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5126:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5108:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:8"
																},
																"nativeSrc": "5108:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5108:21:8"
															},
															"nativeSrc": "5108:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5108:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5149:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5149:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5160:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5160:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5145:3:8"
																		},
																		"nativeSrc": "5145:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5145:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5165:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5165:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5138:6:8"
																},
																"nativeSrc": "5138:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5138:30:8"
															},
															"nativeSrc": "5138:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5138:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5188:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5188:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5199:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5199:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5184:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5184:3:8"
																		},
																		"nativeSrc": "5184:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:18:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c",
																		"kind": "string",
																		"nativeSrc": "5204:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5204:34:8",
																		"type": "",
																		"value": "Transfer failed: Recipient is bl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5177:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:8"
																},
																"nativeSrc": "5177:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5177:62:8"
															},
															"nativeSrc": "5177:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5177:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5259:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5259:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5270:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5270:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5255:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5255:3:8"
																		},
																		"nativeSrc": "5255:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5255:18:8"
																	},
																	{
																		"hexValue": "61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "5275:11:8",
																		"nodeType": "YulLiteral",
																		"src": "5275:11:8",
																		"type": "",
																		"value": "acklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5248:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5248:6:8"
																},
																"nativeSrc": "5248:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5248:39:8"
															},
															"nativeSrc": "5248:39:8",
															"nodeType": "YulExpressionStatement",
															"src": "5248:39:8"
														},
														{
															"nativeSrc": "5296:27:8",
															"nodeType": "YulAssignment",
															"src": "5296:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5308:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5308:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5319:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5319:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5304:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5304:3:8"
																},
																"nativeSrc": "5304:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5304:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5296:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5296:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4924:405:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5075:9:8",
														"nodeType": "YulTypedName",
														"src": "5075:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5089:4:8",
														"nodeType": "YulTypedName",
														"src": "5089:4:8",
														"type": ""
													}
												],
												"src": "4924:405:8"
											},
											{
												"body": {
													"nativeSrc": "5508:224:8",
													"nodeType": "YulBlock",
													"src": "5508:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5525:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5525:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5536:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5536:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5518:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5518:6:8"
																},
																"nativeSrc": "5518:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5518:21:8"
															},
															"nativeSrc": "5518:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5518:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5559:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5559:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5570:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5570:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5555:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5555:3:8"
																		},
																		"nativeSrc": "5555:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5575:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5575:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5548:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5548:6:8"
																},
																"nativeSrc": "5548:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5548:30:8"
															},
															"nativeSrc": "5548:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5548:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5598:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5598:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5609:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5609:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5594:3:8"
																		},
																		"nativeSrc": "5594:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:18:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b",
																		"kind": "string",
																		"nativeSrc": "5614:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5614:34:8",
																		"type": "",
																		"value": "Transfer failed: Tokens are lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5587:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5587:6:8"
																},
																"nativeSrc": "5587:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5587:62:8"
															},
															"nativeSrc": "5587:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5587:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5669:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5680:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5680:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5665:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:8"
																		},
																		"nativeSrc": "5665:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5665:18:8"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "5685:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5685:4:8",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:8"
																},
																"nativeSrc": "5658:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5658:32:8"
															},
															"nativeSrc": "5658:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "5658:32:8"
														},
														{
															"nativeSrc": "5699:27:8",
															"nodeType": "YulAssignment",
															"src": "5699:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5711:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5711:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5722:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5707:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5707:3:8"
																},
																"nativeSrc": "5707:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5707:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5699:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5699:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5334:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5485:9:8",
														"nodeType": "YulTypedName",
														"src": "5485:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5499:4:8",
														"nodeType": "YulTypedName",
														"src": "5499:4:8",
														"type": ""
													}
												],
												"src": "5334:398:8"
											},
											{
												"body": {
													"nativeSrc": "5911:164:8",
													"nodeType": "YulBlock",
													"src": "5911:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5928:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5928:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5939:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5921:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:8"
																},
																"nativeSrc": "5921:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5921:21:8"
															},
															"nativeSrc": "5921:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5921:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5962:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5973:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5973:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5958:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:8"
																		},
																		"nativeSrc": "5958:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5978:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:8"
																},
																"nativeSrc": "5951:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5951:30:8"
															},
															"nativeSrc": "5951:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5951:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6001:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6001:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6012:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6012:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5997:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5997:3:8"
																		},
																		"nativeSrc": "5997:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5997:18:8"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "6017:16:8",
																		"nodeType": "YulLiteral",
																		"src": "6017:16:8",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5990:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:8"
																},
																"nativeSrc": "5990:44:8",
																"nodeType": "YulFunctionCall",
																"src": "5990:44:8"
															},
															"nativeSrc": "5990:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "5990:44:8"
														},
														{
															"nativeSrc": "6043:26:8",
															"nodeType": "YulAssignment",
															"src": "6043:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6055:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6055:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6066:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6066:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6051:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6051:3:8"
																},
																"nativeSrc": "6051:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6051:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6043:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6043:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5737:338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5888:9:8",
														"nodeType": "YulTypedName",
														"src": "5888:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5902:4:8",
														"nodeType": "YulTypedName",
														"src": "5902:4:8",
														"type": ""
													}
												],
												"src": "5737:338:8"
											},
											{
												"body": {
													"nativeSrc": "6254:229:8",
													"nodeType": "YulBlock",
													"src": "6254:229:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6271:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6271:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6282:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6282:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:8"
																},
																"nativeSrc": "6264:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6264:21:8"
															},
															"nativeSrc": "6264:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6264:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6305:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6305:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6316:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6316:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6301:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:8"
																		},
																		"nativeSrc": "6301:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6301:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6321:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6294:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:8"
																},
																"nativeSrc": "6294:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6294:30:8"
															},
															"nativeSrc": "6294:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6294:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6344:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6344:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6355:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6355:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6340:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6340:3:8"
																		},
																		"nativeSrc": "6340:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6340:18:8"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a204d69736d617463686564",
																		"kind": "string",
																		"nativeSrc": "6360:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6360:34:8",
																		"type": "",
																		"value": "BatchTransfer failed: Mismatched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6333:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:8"
																},
																"nativeSrc": "6333:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6333:62:8"
															},
															"nativeSrc": "6333:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6333:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6426:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6426:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6411:3:8"
																		},
																		"nativeSrc": "6411:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6411:18:8"
																	},
																	{
																		"hexValue": "20617272617973",
																		"kind": "string",
																		"nativeSrc": "6431:9:8",
																		"nodeType": "YulLiteral",
																		"src": "6431:9:8",
																		"type": "",
																		"value": " arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6404:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6404:6:8"
																},
																"nativeSrc": "6404:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6404:37:8"
															},
															"nativeSrc": "6404:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6404:37:8"
														},
														{
															"nativeSrc": "6450:27:8",
															"nodeType": "YulAssignment",
															"src": "6450:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6462:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6462:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6473:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6458:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:8"
																},
																"nativeSrc": "6458:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6458:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6450:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6450:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6080:403:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6231:9:8",
														"nodeType": "YulTypedName",
														"src": "6231:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6245:4:8",
														"nodeType": "YulTypedName",
														"src": "6245:4:8",
														"type": ""
													}
												],
												"src": "6080:403:8"
											},
											{
												"body": {
													"nativeSrc": "6520:95:8",
													"nodeType": "YulBlock",
													"src": "6520:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6537:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6537:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6544:3:8",
																				"nodeType": "YulLiteral",
																				"src": "6544:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6549:10:8",
																				"nodeType": "YulLiteral",
																				"src": "6549:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6540:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:8"
																		},
																		"nativeSrc": "6540:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6540:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6530:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:8"
																},
																"nativeSrc": "6530:31:8",
																"nodeType": "YulFunctionCall",
																"src": "6530:31:8"
															},
															"nativeSrc": "6530:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "6530:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6577:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6577:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6580:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6580:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6570:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6570:6:8"
																},
																"nativeSrc": "6570:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6570:15:8"
															},
															"nativeSrc": "6570:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6570:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6601:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6601:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6604:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6604:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6594:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6594:6:8"
																},
																"nativeSrc": "6594:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6594:15:8"
															},
															"nativeSrc": "6594:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6594:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6488:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6488:127:8"
											},
											{
												"body": {
													"nativeSrc": "6794:236:8",
													"nodeType": "YulBlock",
													"src": "6794:236:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6811:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6822:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6804:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:8"
																},
																"nativeSrc": "6804:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6804:21:8"
															},
															"nativeSrc": "6804:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6804:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6845:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6856:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6841:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:8"
																		},
																		"nativeSrc": "6841:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6861:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6861:2:8",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6834:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6834:6:8"
																},
																"nativeSrc": "6834:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6834:30:8"
															},
															"nativeSrc": "6834:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6834:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6884:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6895:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6895:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6880:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:8"
																		},
																		"nativeSrc": "6880:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6880:18:8"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420",
																		"kind": "string",
																		"nativeSrc": "6900:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6900:34:8",
																		"type": "",
																		"value": "BatchTransfer failed: Recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6873:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:8"
																},
																"nativeSrc": "6873:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6873:62:8"
															},
															"nativeSrc": "6873:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6873:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6955:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6955:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6966:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6966:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6951:3:8"
																		},
																		"nativeSrc": "6951:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6951:18:8"
																	},
																	{
																		"hexValue": "697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "6971:16:8",
																		"nodeType": "YulLiteral",
																		"src": "6971:16:8",
																		"type": "",
																		"value": "is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:8"
																},
																"nativeSrc": "6944:44:8",
																"nodeType": "YulFunctionCall",
																"src": "6944:44:8"
															},
															"nativeSrc": "6944:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "6944:44:8"
														},
														{
															"nativeSrc": "6997:27:8",
															"nodeType": "YulAssignment",
															"src": "6997:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7009:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7009:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7020:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7020:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7005:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:8"
																},
																"nativeSrc": "7005:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7005:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6997:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6997:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6620:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6771:9:8",
														"nodeType": "YulTypedName",
														"src": "6771:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6785:4:8",
														"nodeType": "YulTypedName",
														"src": "6785:4:8",
														"type": ""
													}
												],
												"src": "6620:410:8"
											},
											{
												"body": {
													"nativeSrc": "7209:166:8",
													"nodeType": "YulBlock",
													"src": "7209:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7226:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7226:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7237:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7237:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7219:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7219:6:8"
																},
																"nativeSrc": "7219:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7219:21:8"
															},
															"nativeSrc": "7219:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7219:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7260:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7260:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7271:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7271:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7256:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7256:3:8"
																		},
																		"nativeSrc": "7256:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7256:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7276:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7276:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7249:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:8"
																},
																"nativeSrc": "7249:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7249:30:8"
															},
															"nativeSrc": "7249:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7249:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7299:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7299:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7310:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7310:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7295:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7295:3:8"
																		},
																		"nativeSrc": "7295:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7295:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "7315:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7315:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7288:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7288:6:8"
																},
																"nativeSrc": "7288:46:8",
																"nodeType": "YulFunctionCall",
																"src": "7288:46:8"
															},
															"nativeSrc": "7288:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "7288:46:8"
														},
														{
															"nativeSrc": "7343:26:8",
															"nodeType": "YulAssignment",
															"src": "7343:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7355:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7355:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7366:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7366:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7351:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7351:3:8"
																},
																"nativeSrc": "7351:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7351:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7343:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7343:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7035:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7186:9:8",
														"nodeType": "YulTypedName",
														"src": "7186:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7200:4:8",
														"nodeType": "YulTypedName",
														"src": "7200:4:8",
														"type": ""
													}
												],
												"src": "7035:340:8"
											},
											{
												"body": {
													"nativeSrc": "7537:188:8",
													"nodeType": "YulBlock",
													"src": "7537:188:8",
													"statements": [
														{
															"nativeSrc": "7547:26:8",
															"nodeType": "YulAssignment",
															"src": "7547:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7559:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7559:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7570:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7570:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7555:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7555:3:8"
																},
																"nativeSrc": "7555:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7555:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7547:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7547:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7589:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7589:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7604:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7604:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7620:3:8",
																								"nodeType": "YulLiteral",
																								"src": "7620:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7625:1:8",
																								"nodeType": "YulLiteral",
																								"src": "7625:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7616:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7616:3:8"
																						},
																						"nativeSrc": "7616:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7616:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7629:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7629:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7612:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7612:3:8"
																				},
																				"nativeSrc": "7612:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7612:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7600:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7600:3:8"
																		},
																		"nativeSrc": "7600:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7600:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7582:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7582:6:8"
																},
																"nativeSrc": "7582:51:8",
																"nodeType": "YulFunctionCall",
																"src": "7582:51:8"
															},
															"nativeSrc": "7582:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "7582:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7653:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7653:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7664:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7664:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7649:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:8"
																		},
																		"nativeSrc": "7649:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7649:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7669:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7669:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7642:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7642:6:8"
																},
																"nativeSrc": "7642:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7642:34:8"
															},
															"nativeSrc": "7642:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7642:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7696:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7707:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7692:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:8"
																		},
																		"nativeSrc": "7692:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7712:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7712:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7685:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7685:6:8"
																},
																"nativeSrc": "7685:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7685:34:8"
															},
															"nativeSrc": "7685:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7685:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7380:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7490:9:8",
														"nodeType": "YulTypedName",
														"src": "7490:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7501:6:8",
														"nodeType": "YulTypedName",
														"src": "7501:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7509:6:8",
														"nodeType": "YulTypedName",
														"src": "7509:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7517:6:8",
														"nodeType": "YulTypedName",
														"src": "7517:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7528:4:8",
														"nodeType": "YulTypedName",
														"src": "7528:4:8",
														"type": ""
													}
												],
												"src": "7380:345:8"
											},
											{
												"body": {
													"nativeSrc": "7904:170:8",
													"nodeType": "YulBlock",
													"src": "7904:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7921:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7921:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7914:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:8"
																},
																"nativeSrc": "7914:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7914:21:8"
															},
															"nativeSrc": "7914:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7914:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7955:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7966:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7966:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7971:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7971:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:8"
																},
																"nativeSrc": "7944:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:8"
															},
															"nativeSrc": "7944:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7944:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7994:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8005:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7990:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:8"
																		},
																		"nativeSrc": "7990:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "8010:22:8",
																		"nodeType": "YulLiteral",
																		"src": "8010:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7983:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:8"
																},
																"nativeSrc": "7983:50:8",
																"nodeType": "YulFunctionCall",
																"src": "7983:50:8"
															},
															"nativeSrc": "7983:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "7983:50:8"
														},
														{
															"nativeSrc": "8042:26:8",
															"nodeType": "YulAssignment",
															"src": "8042:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8054:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8054:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8065:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8065:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8050:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:8"
																},
																"nativeSrc": "8050:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8050:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8042:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7730:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7881:9:8",
														"nodeType": "YulTypedName",
														"src": "7881:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7895:4:8",
														"nodeType": "YulTypedName",
														"src": "7895:4:8",
														"type": ""
													}
												],
												"src": "7730:344:8"
											},
											{
												"body": {
													"nativeSrc": "8127:174:8",
													"nodeType": "YulBlock",
													"src": "8127:174:8",
													"statements": [
														{
															"nativeSrc": "8137:16:8",
															"nodeType": "YulAssignment",
															"src": "8137:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8148:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8148:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8151:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8151:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8144:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8144:3:8"
																},
																"nativeSrc": "8144:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8144:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8137:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8184:111:8",
																"nodeType": "YulBlock",
																"src": "8184:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8205:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8205:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8212:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8212:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8217:10:8",
																							"nodeType": "YulLiteral",
																							"src": "8217:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8208:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8208:3:8"
																					},
																					"nativeSrc": "8208:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8208:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8198:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8198:6:8"
																			},
																			"nativeSrc": "8198:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8198:31:8"
																		},
																		"nativeSrc": "8198:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8198:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8249:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8249:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8252:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8252:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8242:6:8"
																			},
																			"nativeSrc": "8242:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8242:15:8"
																		},
																		"nativeSrc": "8242:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8242:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8277:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8277:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8280:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8280:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8270:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8270:6:8"
																			},
																			"nativeSrc": "8270:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8270:15:8"
																		},
																		"nativeSrc": "8270:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8270:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8168:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8168:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8171:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8165:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8165:2:8"
																},
																"nativeSrc": "8165:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8165:10:8"
															},
															"nativeSrc": "8162:133:8",
															"nodeType": "YulIf",
															"src": "8162:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8079:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8110:1:8",
														"nodeType": "YulTypedName",
														"src": "8110:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8113:1:8",
														"nodeType": "YulTypedName",
														"src": "8113:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8119:3:8",
														"nodeType": "YulTypedName",
														"src": "8119:3:8",
														"type": ""
													}
												],
												"src": "8079:222:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Transfer failed: Sender is black\")\n        mstore(add(headStart, 96), \"listed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer failed: Recipient is bl\")\n        mstore(add(headStart, 96), \"acklisted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Transfer failed: Tokens are lock\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"BatchTransfer failed: Mismatched\")\n        mstore(add(headStart, 96), \" arrays\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"BatchTransfer failed: Recipient \")\n        mstore(add(headStart, 96), \"is blacklisted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E0D2A00 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC8 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x1FD CALLDATASIZE PUSH1 0x4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x665 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x183 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x677 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x811 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE62 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x275 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x183 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x1010 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B1 SWAP1 PUSH2 0x1010 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x416 DUP2 DUP6 DUP6 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42A PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x494 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x50F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x54C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x573 DUP5 DUP5 DUP5 PUSH2 0x9B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x583 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE MLOAD PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F SWAP1 PUSH2 0x47E SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x66D PUSH2 0x93B JUMP JUMPDEST PUSH2 0x675 PUSH2 0x9D9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x67F PUSH2 0x93B JUMP JUMPDEST PUSH2 0x675 PUSH1 0x0 PUSH2 0xA2E JUMP JUMPDEST PUSH2 0x691 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x675 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x968 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20617272617973 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4CD JUMP JUMPDEST DUP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x809 JUMPI PUSH1 0x9 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0x111B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1A5CC8189B1858DADB1A5CDD1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x801 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x7CE JUMPI PUSH2 0x7CE PUSH2 0x111B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x7F5 JUMPI PUSH2 0x7F5 PUSH2 0x111B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x704 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x385 SWAP1 PUSH2 0x1010 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82A PUSH2 0x968 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x1090 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x8BE JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH2 0x8E4 DUP4 DUP4 PUSH2 0xB22 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0xA2E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x936 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB30 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x9C3 DUP6 DUP3 DUP6 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x9CE DUP6 DUP6 DUP6 PUSH2 0xAC3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x9E1 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA88 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xA11 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAED JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0x936 DUP4 DUP4 DUP4 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x416 DUP2 DUP6 DUP6 PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xC00 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBF7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC00 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH2 0xC00 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCF9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x1131 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD6B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD4C JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x4CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD87 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDEB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE26 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xE09 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7E DUP4 PUSH2 0xE46 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA8 DUP4 PUSH2 0xE46 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE6 DUP5 PUSH2 0xE46 JUMP JUMPDEST SWAP3 POP PUSH2 0xEF4 PUSH1 0x20 DUP6 ADD PUSH2 0xE46 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E4 DUP3 PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xF65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA5 DUP8 DUP3 DUP9 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD1 DUP8 DUP3 DUP9 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF9 DUP4 PUSH2 0xE46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1007 PUSH1 0x20 DUP5 ADD PUSH2 0xE46 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1024 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1044 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1B1A5CDD1959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1858DADB1A5CDD1959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xE9 0xBA 0xB1 INVALID 0xF 0xF DUP6 0xBA REVERT 0xC7 0xF8 BALANCE 0xDE 0xEC 0xB1 0xB7 REVERT DIFFICULTY 0xAD CODESIZE RETURNDATASIZE 0x29 0xD1 GASLIMIT DUP3 EXTCODEHASH SWAP6 SGT PUSH11 0x8BE964736F6C634300081C STOP CALLER ",
							"sourceMap": "225:3078:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1194:14:8;;1187:22;1169:41;;1157:2;1142:18;3998:186:3;1029:187:8;1422:160:7;;;;;;:::i;:::-;;:::i;:::-;;2849:97:3;2927:12;;2849:97;;;1719:25:8;;;1707:2;1692:18;2849:97:3;1573:177:8;2169:478:7;;;;;;:::i;:::-;;:::i;2653:151::-;;;;;;:::i;:::-;;:::i;1149:83::-;;;1223:2;2467:36:8;;2455:2;2440:18;1149:83:7;2325:184:8;1238:173:7;;;;;;:::i;:::-;;:::i;1078:65::-;;;:::i;1615:84:2:-;1685:7;;-1:-1:-1;;;1685:7:2;;;;1615:84;;3004:116:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:3;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;1011:61:7:-;;;:::i;2810:490::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;3823:32:8;;;3805:51;;3793:2;3778:18;1638:85:0;3659:203:8;1981:93:3;;;:::i;369:46:7:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1705:458;;;;;;:::i;:::-;;:::i;280:26::-;;;;;-1:-1:-1;;;;;280:26:7;;;422:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3551:140:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:3;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:0;;;;;;:::i;:::-;;:::i;1588:111:7:-;;;;;;:::i;:::-;-1:-1:-1;;;;;1672:20:7;1649:4;1672:20;;;:11;:20;;;;;;;;;1588:111;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:6;4125:31:3;735:10:6;4141:7:3;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;1422:160:7:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1503:20:7;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;;:29;;-1:-1:-1;;1503:29:7::1;::::0;::::1;;::::0;;::::1;::::0;;;1547:28;;1169:41:8;;;1547:28:7::1;::::0;1142:18:8;1547:28:7::1;;;;;;;;1422:160:::0;;:::o;2169:478::-;2281:4;1239:19:2;:17;:19::i;:::-;-1:-1:-1;;;;;2306:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;;::::1;;2305:20;2297:71;;;;-1:-1:-1::0;;;2297:71:7::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;2387:22:7;::::1;;::::0;;;:11:::1;:22;::::0;;;;;::::1;;2386:23;2378:77;;;;-1:-1:-1::0;;;2378:77:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2492:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;;2473:15:::1;:38;;::::0;:66:::1;;-1:-1:-1::0;;;;;;2515:19:7;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:24;2473:66:::1;2465:113;;;;-1:-1:-1::0;;;2465:113:7::1;;;;;;;:::i;:::-;2595:45;2614:6;2622:9;2633:6;2595:18;:45::i;:::-;2588:52:::0;2169:478;-1:-1:-1;;;;2169:478:7:o;2653:151::-;1531:13:0;:11;:13::i;:::-;2728:11:7::1;:26:::0;;-1:-1:-1;;;;;;2728:26:7::1;-1:-1:-1::0;;;;;2728:26:7;::::1;::::0;;::::1;::::0;;;2769:28:::1;::::0;::::1;::::0;-1:-1:-1;;2769:28:7::1;2653:151:::0;:::o;1238:173::-;957:11;;-1:-1:-1;;;;;957:11:7;943:10;:25;935:52;;;;-1:-1:-1;;;935:52:7;;5939:2:8;935:52:7;;;5921:21:8;5978:2;5958:18;;;5951:30;-1:-1:-1;;;5997:18:8;;;5990:44;6051:18;;935:52:7;5737:338:8;935:52:7;-1:-1:-1;;;;;1328:20:7;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;:32;;;1375:29;::::1;::::0;::::1;::::0;1351:9;1719:25:8;;1707:2;1692:18;;1573:177;1078:65:7;1531:13:0;:11;:13::i;:::-;1126:10:7::1;:8;:10::i;:::-;1078:65::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1011:61:7:-:0;1531:13:0;:11;:13::i;:::-;1057:8:7::1;:6;:8::i;2810:490::-:0;1239:19:2;:17;:19::i;:::-;2933:35:7;;::::1;2925:87;;;::::0;-1:-1:-1;;;2925:87:7;;6282:2:8;2925:87:7::1;::::0;::::1;6264:21:8::0;6321:2;6301:18;;;6294:30;6360:34;6340:18;;;6333:62;-1:-1:-1;;;6411:18:8;;;6404:37;6458:19;;2925:87:7::1;6080:403:8::0;2925:87:7::1;3048:10:::0;3022:23:::1;3075:219;3099:15;3095:1;:19;3075:219;;;3144:11;:26;3156:10;;3167:1;3156:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3144:26:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3144:26:7;;::::1;;3143:27;3135:86;;;::::0;-1:-1:-1;;;3135:86:7;;6822:2:8;3135:86:7::1;::::0;::::1;6804:21:8::0;6861:2;6841:18;;;6834:30;6900:34;6880:18;;;6873:62;-1:-1:-1;;;6951:18:8;;;6944:44;7005:19;;3135:86:7::1;6620:410:8::0;3135:86:7::1;3235:48;3245:10;3257;;3268:1;3257:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3272:7;;3280:1;3272:10;;;;;;;:::i;:::-;;;;;;;3235:9;:48::i;:::-;3116:3;;3075:219;;;;2915:385;2810:490:::0;;;;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;1705:458:7:-;1797:4;1239:19:2;:17;:19::i;:::-;1834:10:7::1;1822:23;::::0;;;:11:::1;:23;::::0;;;;;::::1;;1821:24;1813:75;;;;-1:-1:-1::0;;;1813:75:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1907:22:7;::::1;;::::0;;;:11:::1;:22;::::0;;;;;::::1;;1906:23;1898:77;;;;-1:-1:-1::0;;;1898:77:7::1;;;;;;;:::i;:::-;2024:10;2012:23;::::0;;;:11:::1;:23;::::0;;;;;1993:15:::1;:42;;::::0;:74:::1;;-1:-1:-1::0;2051:10:7::1;2039:23;::::0;;;:11:::1;:23;::::0;;;;;:28;1993:74:::1;1985:121;;;;-1:-1:-1::0;;;1985:121:7::1;;;;;;;:::i;:::-;2123:33;2138:9;2149:6;2123:14;:33::i;:::-;2116:40:::0;1705:458;-1:-1:-1;;;1705:458:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3805:51:8::0;3778:18;;2672:31:0::1;3659:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;3805:51:8;3778:18;;1901:40:0;3659:203:8;1767:106:2;1685:7;;-1:-1:-1;;;1685:7:2;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;7237:2:8;1828:38:2;;;7219:21:8;7276:2;7256:18;;;7249:30;-1:-1:-1;;;7295:18:8;;;7288:46;7351:18;;1828:38:2;7035:340:8;4776:244:3;4863:4;735:10:6;4919:37:3;4935:4;735:10:6;4950:5:3;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:3;;4776:244;-1:-1:-1;;;;4776:244:3:o;2433:117:2:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;;;2491:15:2::1;::::0;;2521:22:::1;735:10:6::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;3823:32:8;;;3805:51;;3793:2;3778:18;2521:22:2::1;;;;;;;2433:117::o:0;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;;;2245:14:2::1;-1:-1:-1::0;;;2245:14:2::1;::::0;;2274:20:::1;2281:12;735:10:6::0;;656:96;5393:300:3;-1:-1:-1;;;;;5476:18:3;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:3;;5544:1;5517:30;;;3805:51:8;3778:18;;5517:30:3;3659:203:8;5472:86:3;-1:-1:-1;;;;;5571:16:3;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:3;;5639:1;5610:32;;;3805:51:8;3778:18;;5610:32:3;3659:203:8;5567:86:3;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;3315:178::-;3384:4;735:10:6;3438:27:3;735:10:6;3455:2:3;3459:5;3438:9;:27::i;9701:432::-;-1:-1:-1;;;;;9813:19:3;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:3;;9884:1;9855:32;;;3805:51:8;3778:18;;9855:32:3;3659:203:8;9809:89:3;-1:-1:-1;;;;;9911:21:3;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:3;;9983:1;9955:31;;;3805:51:8;3778:18;;9955:31:3;3659:203:8;9907:90:3;-1:-1:-1;;;;;10006:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:3;10094:5;-1:-1:-1;;;;;10085:31:3;;10110:5;10085:31;;;;1719:25:8;;1707:2;1692:18;;1573:177;10085:31:3;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;-1:-1:-1;;;;;3657:18:3;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:3;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:3;;-1:-1:-1;;;;;7600:32:8;;10688:60:3;;;7582:51:8;7649:18;;;7642:34;;;7692:18;;;7685:34;;;7555:18;;10688:60:3;7380:345:8;10633:130:3;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;1945:106:2:-;1685:7;;-1:-1:-1;;;1685:7:2;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;7932:2:8;2003:41:2;;;7914:21:8;7971:2;7951:18;;;7944:30;-1:-1:-1;;;7990:18:8;;;7983:50;8050:18;;2003:41:2;7730:344:8;6008:1107:3;-1:-1:-1;;;;;6097:18:3;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:3;;-1:-1:-1;6093:540:3;;-1:-1:-1;;;;;6307:15:3;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:3;;-1:-1:-1;;;;;7600:32:8;;6386:50:3;;;7582:51:8;7649:18;;;7642:34;;;7692:18;;;7685:34;;;7555:18;;6386:50:3;7380:345:8;6336:115:3;-1:-1:-1;;;;;6571:15:3;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:3;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:3;7092:4;-1:-1:-1;;;;;7083:25:3;;7102:5;7083:25;;;;1719::8;;1707:2;1692:18;;1573:177;7083:25:3;;;;;;;;6008:1107;;;:::o;14:527:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;263:1;273:140;287:6;284:1;281:13;273:140;;;398:2;382:14;;;378:23;;372:30;367:2;348:17;;;344:26;337:66;302:10;273:140;;;277:3;462:1;457:2;448:6;437:9;433:22;429:31;422:42;532:2;525;521:7;516:2;508:6;504:15;500:29;489:9;485:45;481:54;473:62;;;14:527;;;;:::o;546:173::-;614:20;;-1:-1:-1;;;;;663:31:8;;653:42;;643:70;;709:1;706;699:12;643:70;546:173;;;:::o;724:300::-;792:6;800;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;892:29;911:9;892:29;:::i;:::-;882:39;990:2;975:18;;;;962:32;;-1:-1:-1;;;724:300:8:o;1221:347::-;1286:6;1294;1347:2;1335:9;1326:7;1322:23;1318:32;1315:52;;;1363:1;1360;1353:12;1315:52;1386:29;1405:9;1386:29;:::i;:::-;1376:39;;1465:2;1454:9;1450:18;1437:32;1512:5;1505:13;1498:21;1491:5;1488:32;1478:60;;1534:1;1531;1524:12;1478:60;1557:5;1547:15;;;1221:347;;;;;:::o;1755:374::-;1832:6;1840;1848;1901:2;1889:9;1880:7;1876:23;1872:32;1869:52;;;1917:1;1914;1907:12;1869:52;1940:29;1959:9;1940:29;:::i;:::-;1930:39;;1988:38;2022:2;2011:9;2007:18;1988:38;:::i;:::-;1755:374;;1978:48;;-1:-1:-1;;;2095:2:8;2080:18;;;;2067:32;;1755:374::o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;2514:367::-;2577:8;2587:6;2641:3;2634:4;2626:6;2622:17;2618:27;2608:55;;2659:1;2656;2649:12;2608:55;-1:-1:-1;2682:20:8;;2725:18;2714:30;;2711:50;;;2757:1;2754;2747:12;2711:50;2794:4;2786:6;2782:17;2770:29;;2854:3;2847:4;2837:6;2834:1;2830:14;2822:6;2818:27;2814:38;2811:47;2808:67;;;2871:1;2868;2861:12;2808:67;2514:367;;;;;:::o;2886:768::-;3008:6;3016;3024;3032;3085:2;3073:9;3064:7;3060:23;3056:32;3053:52;;;3101:1;3098;3091:12;3053:52;3141:9;3128:23;3174:18;3166:6;3163:30;3160:50;;;3206:1;3203;3196:12;3160:50;3245:70;3307:7;3298:6;3287:9;3283:22;3245:70;:::i;:::-;3334:8;;-1:-1:-1;3219:96:8;-1:-1:-1;;3422:2:8;3407:18;;3394:32;3451:18;3438:32;;3435:52;;;3483:1;3480;3473:12;3435:52;3522:72;3586:7;3575:8;3564:9;3560:24;3522:72;:::i;:::-;2886:768;;;;-1:-1:-1;3613:8:8;-1:-1:-1;;;;2886:768:8:o;3867:260::-;3935:6;3943;3996:2;3984:9;3975:7;3971:23;3967:32;3964:52;;;4012:1;4009;4002:12;3964:52;4035:29;4054:9;4035:29;:::i;:::-;4025:39;;4083:38;4117:2;4106:9;4102:18;4083:38;:::i;:::-;4073:48;;3867:260;;;;;:::o;4132:380::-;4211:1;4207:12;;;;4254;;;4275:61;;4329:4;4321:6;4317:17;4307:27;;4275:61;4382:2;4374:6;4371:14;4351:18;4348:38;4345:161;;4428:10;4423:3;4419:20;4416:1;4409:31;4463:4;4460:1;4453:15;4491:4;4488:1;4481:15;4345:161;;4132:380;;;:::o;4517:402::-;4719:2;4701:21;;;4758:2;4738:18;;;4731:30;4797:34;4792:2;4777:18;;4770:62;-1:-1:-1;;;4863:2:8;4848:18;;4841:36;4909:3;4894:19;;4517:402::o;4924:405::-;5126:2;5108:21;;;5165:2;5145:18;;;5138:30;5204:34;5199:2;5184:18;;5177:62;-1:-1:-1;;;5270:2:8;5255:18;;5248:39;5319:3;5304:19;;4924:405::o;5334:398::-;5536:2;5518:21;;;5575:2;5555:18;;;5548:30;5614:34;5609:2;5594:18;;5587:62;-1:-1:-1;;;5680:2:8;5665:18;;5658:32;5722:3;5707:19;;5334:398::o;6488:127::-;6549:10;6544:3;6540:20;6537:1;6530:31;6580:4;6577:1;6570:15;6604:4;6601:1;6594:15;8079:222;8144:9;;;8165:10;;;8162:133;;;8217:10;8212:3;8208:20;8205:1;8198:31;8252:4;8249:1;8242:15;8280:4;8277:1;8270:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "897600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24763",
								"balanceOf(address)": "2673",
								"batchTransfer(address[],uint256[])": "infinite",
								"blacklisted(address)": "2597",
								"decimals()": "222",
								"icoContract()": "2381",
								"isBlacklisted(address)": "2681",
								"lockedUntil(address)": "2652",
								"name()": "infinite",
								"owner()": "2409",
								"pause()": "infinite",
								"paused()": "2432",
								"renounceOwnership()": "infinite",
								"setBlacklist(address,bool)": "28366",
								"setICOContract(address)": "27897",
								"setLockup(address,uint256)": "26183",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "62249",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 343,
									"end": 361,
									"name": "PUSH",
									"source": 7,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 312,
									"end": 361,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 312,
									"end": 361,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 749,
									"end": 892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 831,
									"end": 841,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 809,
									"end": 813,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 809,
									"end": 813,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4202,
									"end": 4253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4175,
									"end": 4193,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4175,
									"end": 4193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 871,
									"end": 883,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 871,
									"end": 883,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 884,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 859,
									"end": 869,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 859,
									"end": 869,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 853,
									"end": 858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 853,
									"end": 884,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4202,
									"end": 4253,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4175,
									"end": 4193,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4175,
									"end": 4193,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 4056,
									"end": 4259,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4711,
									"end": 4743,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4711,
									"end": 4743,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4693,
									"end": 4744,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4778,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4760,
									"end": 4778,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4760,
									"end": 4778,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4753,
									"end": 4787,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4753,
									"end": 4787,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4753,
									"end": 4787,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4821,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4803,
									"end": 4821,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4821,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4796,
									"end": 4830,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4796,
									"end": 4830,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4796,
									"end": 4830,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4666,
									"end": 4684,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 4666,
									"end": 4684,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 4491,
									"end": 4836,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4987,
									"end": 5012,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5012,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4975,
									"end": 4977,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4960,
									"end": 4978,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4960,
									"end": 4978,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 5018,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4264,
									"end": 4486,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 4264,
									"end": 4486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4329,
									"end": 4338,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4329,
									"end": 4338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4329,
									"end": 4338,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4350,
									"end": 4360,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4350,
									"end": 4360,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4350,
									"end": 4360,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4347,
									"end": 4480,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4347,
									"end": 4480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4347,
									"end": 4480,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4402,
									"end": 4412,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 4397,
									"end": 4400,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 4393,
									"end": 4413,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4390,
									"end": 4391,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4383,
									"end": 4414,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4437,
									"end": 4441,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 4434,
									"end": 4435,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4427,
									"end": 4442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4462,
									"end": 4463,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4455,
									"end": 4470,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4347,
									"end": 4480,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 4347,
									"end": 4480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4264,
									"end": 4486,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4264,
									"end": 4486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4264,
									"end": 4486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4264,
									"end": 4486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4264,
									"end": 4486,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4841,
									"end": 5018,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4841,
									"end": 5018,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001e9bab1fe0f0f85bafdc7f831deecb1b7fd44ad383d29d145823f95136a8be964736f6c634300081c0033",
									".code": [
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "C66E4095"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "DBAC26E9"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "FE575A87"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "88D695B2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "9BC289F1"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "2E0D2A00"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "2E0D2A00"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "3E579307"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "153B0D1E"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1208,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1187,
											"end": 1209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1159,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1029,
											"end": 1216,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1422,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1422,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1573,
											"end": 1750,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2653,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2653,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2467,
											"end": 2503,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2503,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2457,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2325,
											"end": 2509,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1238,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1238,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1078,
											"end": 1143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2810,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2810,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 369,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 280,
											"end": 306,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 422,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1588,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1683,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1210,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 1547,
											"end": 1575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1142,
											"end": 1160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2325,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2297,
											"end": 2368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2378,
											"end": 2455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2511,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2511,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2539,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2465,
											"end": 2578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2614,
											"end": 2620,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2639,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2595,
											"end": 2640,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2640,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2595,
											"end": 2640,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2640,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2797,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8"
										},
										{
											"begin": 2769,
											"end": 2797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 968,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 957,
											"end": 968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 943,
											"end": 953,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 943,
											"end": 968,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 935,
											"end": 987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5951,
											"end": 5981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6034,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 5737,
											"end": 6075,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 935,
											"end": 987,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F"
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1750,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1126,
											"end": 1134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1126,
											"end": 1136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1126,
											"end": 1136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1057,
											"end": 1063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1057,
											"end": 1065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2968,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3012,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6264,
											"end": 6285,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6360,
											"end": 6394,
											"name": "PUSH",
											"source": 8,
											"value": "42617463685472616E73666572206661696C65643A204D69736D617463686564"
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6333,
											"end": 6395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20617272617973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6404,
											"end": 6441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6458,
											"end": 6477,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6458,
											"end": 6477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6080,
											"end": 6483,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3114,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3168,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3156,
											"end": 3169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3156,
											"end": 3169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3170,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3221,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3135,
											"end": 3221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6825,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6861,
											"end": 6863,
											"name": "PUSH",
											"source": 8,
											"value": "2E"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6934,
											"name": "PUSH",
											"source": 8,
											"value": "42617463685472616E73666572206661696C65643A20526563697069656E7420"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6880,
											"end": 6898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6873,
											"end": 6935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5CC8189B1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 6988,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6620,
											"end": 7030,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3245,
											"end": 3255,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3267,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3267,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3257,
											"end": 3270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3257,
											"end": 3270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3281,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3272,
											"end": 3282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3235,
											"end": 3283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3235,
											"end": 3283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 1844,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1845,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1813,
											"end": 1888,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1898,
											"end": 1975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2034,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2008,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2035,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2035,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2035,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2061,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2067,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1985,
											"end": 2106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2138,
											"end": 2147,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2155,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2123,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2123,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2156,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7240,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7334,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7351,
											"end": 7369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7035,
											"end": 7375,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3805,
											"end": 3856,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3659,
											"end": 3862,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1750,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7600,
											"end": 7632,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7380,
											"end": 7725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 7973,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7944,
											"end": 7974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7983,
											"end": 8033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8050,
											"end": 8068,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8050,
											"end": 8068,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7730,
											"end": 8074,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7600,
											"end": 7632,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7600,
											"end": 7632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7685,
											"end": 7719,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7380,
											"end": 7725,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1709,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1750,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 541,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 281,
											"end": 294,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 273,
											"end": 413,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 396,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 382,
											"end": 396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 378,
											"end": 401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 378,
											"end": 401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 402,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 348,
											"end": 365,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 348,
											"end": 365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 344,
											"end": 370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 337,
											"end": 403,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 302,
											"end": 312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 273,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 273,
											"end": 413,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 273,
											"end": 413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 277,
											"end": 280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 462,
											"end": 463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 437,
											"end": 446,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 433,
											"end": 455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 429,
											"end": 460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 422,
											"end": 464,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 521,
											"end": 528,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 529,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 489,
											"end": 498,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 485,
											"end": 530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 481,
											"end": 535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 473,
											"end": 535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 473,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 719,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 546,
											"end": 719,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 614,
											"end": 634,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 663,
											"end": 694,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 653,
											"end": 695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 653,
											"end": 695,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 643,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 699,
											"end": 711,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 643,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 643,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 546,
											"end": 719,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 719,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 724,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 832,
											"end": 839,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 828,
											"end": 851,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 824,
											"end": 856,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 821,
											"end": 873,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 821,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 869,
											"end": 870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 859,
											"end": 871,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 821,
											"end": 873,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 821,
											"end": 873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 892,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 892,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 921,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 892,
											"end": 921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 882,
											"end": 921,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 990,
											"end": 992,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 975,
											"end": 993,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 975,
											"end": 993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 962,
											"end": 994,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 962,
											"end": 994,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 724,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1344,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1333,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1345,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1367,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1315,
											"end": 1367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1367,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1315,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1386,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 1386,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1469,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1518,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1519,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1491,
											"end": 1496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1520,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1478,
											"end": 1538,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1536,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1538,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1478,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1557,
											"end": 1562,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1547,
											"end": 1562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 2129,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1755,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1903,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1889,
											"end": 1898,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1887,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1904,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1921,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1869,
											"end": 1921,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1921,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1869,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1940,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1969,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 1940,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1969,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1930,
											"end": 1969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1988,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2026,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1988,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 2129,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 2129,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2026,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 2026,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2099,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2320,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 2134,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2193,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2252,
											"end": 2264,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2214,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2304,
											"end": 2313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 2285,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2626,
											"end": 2632,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2622,
											"end": 2639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2645,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2608,
											"end": 2663,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2660,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2661,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2663,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2608,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2682,
											"end": 2702,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2702,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2744,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2761,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2711,
											"end": 2761,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2747,
											"end": 2759,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2711,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2770,
											"end": 2799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2857,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2837,
											"end": 2843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2818,
											"end": 2845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2858,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2873,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2514,
											"end": 2881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 3654,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 2886,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3083,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3088,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3053,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3141,
											"end": 3150,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3151,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3192,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3160,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3307,
											"end": 3314,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3245,
											"end": 3315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3315,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3245,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3342,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3315,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3425,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3407,
											"end": 3425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3426,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3469,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3470,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3473,
											"end": 3485,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3435,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3564,
											"end": 3573,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3560,
											"end": 3584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3522,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3594,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 3522,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 3654,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 3654,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 3654,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 3654,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3621,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3996,
											"end": 3998,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3984,
											"end": 3993,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 3994,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3999,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4016,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3964,
											"end": 4016,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4012,
											"end": 4013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4014,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 4016,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3964,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4035,
											"end": 4064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4064,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 4035,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4117,
											"end": 4119,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4083,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4121,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4083,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4073,
											"end": 4121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3867,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4512,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4132,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4211,
											"end": 4212,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4266,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4275,
											"end": 4336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4333,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4334,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4336,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4275,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4385,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4348,
											"end": 4386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4345,
											"end": 4506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4438,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4419,
											"end": 4439,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4440,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4495,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4506,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4345,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4512,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4919,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 4517,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4719,
											"end": 4721,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 4722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4701,
											"end": 4722,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4701,
											"end": 4722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4731,
											"end": 4761,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4797,
											"end": 4831,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65643A2053656E64657220697320626C61636B"
										},
										{
											"begin": 4792,
											"end": 4794,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4777,
											"end": 4795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4770,
											"end": 4832,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4863,
											"end": 4865,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4841,
											"end": 4877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4909,
											"end": 4912,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 5329,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4924,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5108,
											"end": 5129,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5145,
											"end": 5163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5145,
											"end": 5163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5145,
											"end": 5163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5138,
											"end": 5168,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5238,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65643A20526563697069656E7420697320626C"
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5239,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5270,
											"end": 5272,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5255,
											"end": 5273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5322,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 5329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5732,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 5334,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5518,
											"end": 5539,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5518,
											"end": 5539,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5578,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5614,
											"end": 5648,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B"
										},
										{
											"begin": 5609,
											"end": 5611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5594,
											"end": 5612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5612,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5587,
											"end": 5649,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5680,
											"end": 5682,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5722,
											"end": 5725,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5707,
											"end": 5726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 5726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6488,
											"end": 6615,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6488,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6559,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6540,
											"end": 6560,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6604,
											"end": 6608,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6601,
											"end": 6602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6609,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8079,
											"end": 8301,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 8079,
											"end": 8301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8162,
											"end": 8295,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8162,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 8162,
											"end": 8295,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8217,
											"end": 8227,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8212,
											"end": 8215,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8208,
											"end": 8228,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8205,
											"end": 8206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8252,
											"end": 8256,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8242,
											"end": 8257,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8284,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8270,
											"end": 8285,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"RVA/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"blacklisted(address)": "dbac26e9",
							"decimals()": "313ce567",
							"icoContract()": "c66e4095",
							"isBlacklisted(address)": "fe575a87",
							"lockedUntil(address)": "9bc289f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setBlacklist(address,bool)": "153b0d1e",
							"setICOContract(address)": "2e0d2a00",
							"setLockup(address,uint256)": "3e579307",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyTokenRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"icoContract\",\"type\":\"address\"}],\"name\":\"ICOContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint256\"}],\"name\":\"LockupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"setLockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RVA/Token.sol\":\"erc20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"RVA/Token.sol\":{\"keccak256\":\"0x5ac4290968c9020a9ccd3c68dce3795ea8e6858fe46aee1d5604fd69e3209841\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec51e1d389f7eaf02d7c064ae7a514fe33bf479c56b64ff068184b2127d6bf8c\",\"dweb:/ipfs/QmcD9GujL4PZLLuCtDKNMsMAzB2mqfKSKPbY6NARdSWwLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 302,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1054,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "icoContract",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1061,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1065,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "lockedUntil",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1069,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "blacklisted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1042,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1041
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1042,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1041
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1012,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1011,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1042,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 404,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1133:7:3"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1142:6:3"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1150:14:3"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 419,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 907,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 907,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 907,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 907,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 907,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 907,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 503,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 502,
												"id": 515,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 907,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 527,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"id": 530,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 532,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 907,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 544,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 798,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 543,
												"id": 556,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 907,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 572,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 588,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 907,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 907,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 684,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 663,
															"initialValue": {
																"baseExpression": {
																	"id": 660,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"id": 661,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 668,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 669,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 670,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 667,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 683,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 675,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 677,
																			"indexExpression": {
																				"id": 676,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 678,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 679,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 682,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 653,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 704,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 698,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 700,
																			"indexExpression": {
																				"id": 699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 696,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 907,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 907,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 907,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 858,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 907,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 840,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 845,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 848,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 849,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 907,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 876,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 892,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 887,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 885,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 890,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 895,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 893,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				798,
																				858
																			],
																			"referencedDeclaration": 858,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 907,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1106:9788:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 985,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 985,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 985,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 985,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 985,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 985,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 986,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 991,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "306:6:5"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								985
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1011,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1011,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1011,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1012,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1041,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1041,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1041,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"RVA/Token.sol": {
				"ast": {
					"absolutePath": "RVA/Token.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"erc20Token": [
							1390
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 148,
							"src": "58:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 908,
							"src": "111:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 393,
							"src": "167:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "ERC20",
										"nameLocations": [
											"248:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "248:5:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "248:5:7"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"255:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "255:7:7"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:7"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "Pausable",
										"nameLocations": [
											"264:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "264:8:7"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "264:8:7"
								}
							],
							"canonicalName": "erc20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								392,
								147,
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "erc20Token",
							"nameLocation": "234:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c66e4095",
									"id": 1054,
									"mutability": "mutable",
									"name": "icoContract",
									"nameLocation": "295:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "280:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1053,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1061,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "328:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "312:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1060,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 1056,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "343:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1059,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1057,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "353:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1058,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "359:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "353:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "343:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9bc289f1",
									"id": 1065,
									"mutability": "mutable",
									"name": "lockedUntil",
									"nameLocation": "404:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "369:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1064,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1062,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "377:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "369:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1063,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "388:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 1069,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "454:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "422:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1068,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1066,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "430:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "422:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1067,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "441:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8",
									"id": 1073,
									"name": "ICOContractSet",
									"nameLocation": "481:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "icoContract",
												"nameLocation": "512:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "496:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:29:7"
									},
									"src": "475:50:7"
								},
								{
									"anonymous": false,
									"eventSelector": "611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f",
									"id": 1079,
									"name": "LockupSet",
									"nameLocation": "536:9:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "546:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedUntilTimestamp",
												"nameLocation": "579:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "571:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:55:7"
									},
									"src": "530:71:7"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 1085,
									"name": "Blacklisted",
									"nameLocation": "612:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "640:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "624:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "654:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "649:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "649:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:45:7"
									},
									"src": "606:63:7"
								},
								{
									"anonymous": false,
									"eventSelector": "96352ad7a9be4c45ad1b71ff4390921022216946b3b7348fd652f133a6ee5453",
									"id": 1091,
									"name": "EmergencyTokenRecovered",
									"nameLocation": "680:23:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "720:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "704:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:39:7"
									},
									"src": "674:69:7"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "843:49:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "859:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "863:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "859:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "871:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1106,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "853:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "853:31:7"
											}
										]
									},
									"id": 1113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1098,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1093,
													"src": "809:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1099,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "815:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1100,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1097,
												"name": "ERC20",
												"nameLocations": [
													"803:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "803:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "803:19:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1102,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "831:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "835:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "831:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1104,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1101,
												"name": "Ownable",
												"nameLocations": [
													"823:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "823:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "823:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "775:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "761:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1092,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "761:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "795:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "781:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "781:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:42:7"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:0:7"
									},
									"scope": 1390,
									"src": "749:143:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "925:80:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1116,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "943:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "947:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "943:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1118,
																"name": "icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "957:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "943:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "970:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "935:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "935:52:7"
											},
											{
												"id": 1123,
												"nodeType": "PlaceholderStatement",
												"src": "997:1:7"
											}
										]
									},
									"id": 1125,
									"name": "onlyICOContract",
									"nameLocation": "907:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:7"
									},
									"src": "898:107:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1047:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1130,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1057:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "1057:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"1037:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1037:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1037:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "1020:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:7"
									},
									"scope": 1390,
									"src": "1011:61:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1116:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1139,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "1126:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "1126:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1136,
												"name": "onlyOwner",
												"nameLocations": [
													"1106:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1106:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1106:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "1087:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1094:2:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:7"
									},
									"scope": 1390,
									"src": "1078:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										471
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "1206:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1223:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1148,
												"id": 1150,
												"nodeType": "Return",
												"src": "1216:9:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1158:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1181:8:7"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:2:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1199:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1146,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:7:7"
									},
									"scope": 1390,
									"src": "1149:83:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "1318:93:7",
										"statements": [
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1161,
															"name": "lockedUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "1328:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"id": 1162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1340:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1328:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "1351:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1328:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1328:32:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1385:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1394:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "LockupSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "1375:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "EmitStatement",
												"src": "1370:34:7"
											}
										]
									},
									"functionSelector": "3e579307",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1158,
												"name": "onlyICOContract",
												"nameLocations": [
													"1302:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1125,
												"src": "1302:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1302:15:7"
										}
									],
									"name": "setLockup",
									"nameLocation": "1247:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1265:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1257:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1282:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1274:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:36:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:7"
									},
									"scope": 1390,
									"src": "1238:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "1493:89:7",
										"statements": [
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1182,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1503:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"id": 1183,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1515:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1503:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1185,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "1526:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1503:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1503:29:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1559:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "1568:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1188,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1547:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1547:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "EmitStatement",
												"src": "1542:33:7"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1179,
												"name": "onlyOwner",
												"nameLocations": [
													"1483:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1483:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1483:9:7"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "1431:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1452:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1444:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1461:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1461:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:30:7"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:0:7"
									},
									"scope": 1390,
									"src": "1422:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "1655:44:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1201,
														"name": "blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1672:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1203,
													"indexExpression": {
														"id": 1202,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "1684:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1672:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1204,
												"nodeType": "Return",
												"src": "1665:27:7"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "1597:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1619:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1611:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:17:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1649:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1649:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:6:7"
									},
									"scope": 1390,
									"src": "1588:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										517
									],
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "1803:360:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1821:24:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1219,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "1822:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1222,
																"indexExpression": {
																	"expression": {
																		"id": 1220,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1834:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1838:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1834:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1822:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1813:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1813:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1906:23:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1228,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "1907:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1230,
																"indexExpression": {
																	"id": 1229,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "1919:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1907:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1931:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1898:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "1898:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1236,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1993:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1999:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1993:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1238,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2012:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1241,
																	"indexExpression": {
																		"expression": {
																			"id": 1239,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2024:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2028:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2024:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2012:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1993:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1243,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2039:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1246,
																	"indexExpression": {
																		"expression": {
																			"id": 1244,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2051:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2055:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2051:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2039:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2066:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2039:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1993:74:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2069:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1985:121:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2138:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "2149:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1253,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2123:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_erc20Token_$1390_$",
																"typeString": "type(contract super erc20Token)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 517,
														"src": "2123:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1258,
												"nodeType": "Return",
												"src": "2116:40:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1213,
												"name": "whenNotPaused",
												"nameLocations": [
													"1774:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1774:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1774:13:7"
										}
									],
									"name": "transfer",
									"nameLocation": "1714:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1765:8:7"
									},
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1731:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1723:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1750:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1742:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:35:7"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1797:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1797:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1796:6:7"
									},
									"scope": 1390,
									"src": "1705:458:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2287:360:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2305:20:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2306:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1277,
																"indexExpression": {
																	"id": 1276,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "2318:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2306:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2327:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2297:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2297:71:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2386:23:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1283,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2387:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1285,
																"indexExpression": {
																	"id": 1284,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "2399:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2387:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2411:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "2378:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1291,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2473:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2479:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2473:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1293,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2492:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1295,
																	"indexExpression": {
																		"id": 1294,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "2504:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2492:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2473:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1297,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2515:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1299,
																	"indexExpression": {
																		"id": 1298,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "2527:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2515:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2538:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2515:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2473:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2541:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2465:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2465:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "2614:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "2622:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "2633:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1306,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2595:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_erc20Token_$1390_$",
																"typeString": "type(contract super erc20Token)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2601:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "2595:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1312,
												"nodeType": "Return",
												"src": "2588:52:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1269,
												"name": "whenNotPaused",
												"nameLocations": [
													"2258:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2258:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2258:13:7"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2178:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2249:8:7"
									},
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2199:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2191:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2215:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2207:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2234:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2226:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:51:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2281:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2281:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:6:7"
									},
									"scope": 1390,
									"src": "2169:478:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "2718:86:7",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2728:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1322,
														"name": "_icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "2742:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2728:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "2728:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1326,
															"name": "_icoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2784:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1325,
														"name": "ICOContractSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "2769:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2769:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "EmitStatement",
												"src": "2764:33:7"
											}
										]
									},
									"functionSelector": "2e0d2a00",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyOwner",
												"nameLocations": [
													"2708:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2708:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2708:9:7"
										}
									],
									"name": "setICOContract",
									"nameLocation": "2662:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_icoContract",
												"nameLocation": "2685:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2677:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:22:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:7"
									},
									"scope": 1390,
									"src": "2653:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "2915:385:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1342,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "2933:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2944:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2933:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1344,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "2954:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2962:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2954:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2933:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463685472616e73666572206661696c65643a204d69736d61746368656420617272617973",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2970:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															},
															"value": "BatchTransfer failed: Mismatched arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2925:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2925:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2925:87:7"
											},
											{
												"assignments": [
													1351
												],
												"declarations": [
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "3030:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1388,
														"src": "3022:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1350,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3022:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"expression": {
														"id": 1352,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "3048:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3059:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3048:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3022:43:7"
											},
											{
												"body": {
													"id": 1386,
													"nodeType": "Block",
													"src": "3121:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3143:27:7",
																		"subExpression": {
																			"baseExpression": {
																				"id": 1366,
																				"name": "blacklisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "3144:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1370,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1367,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "3156:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 1369,
																				"indexExpression": {
																					"id": 1368,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "3167:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3156:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3144:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3172:48:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																			"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																		},
																		"value": "BatchTransfer failed: Recipient is blacklisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																			"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																		}
																	],
																	"id": 1365,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3135:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3135:86:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "3135:86:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1376,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3245:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3249:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3245:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1378,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "3257:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1380,
																		"indexExpression": {
																			"id": 1379,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "3268:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3257:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1381,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1336,
																			"src": "3272:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1383,
																		"indexExpression": {
																			"id": 1382,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "3280:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3272:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1375,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "3235:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3235:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1385,
															"nodeType": "ExpressionStatement",
															"src": "3235:48:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1359,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "3095:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1360,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "3099:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3095:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"initializationExpression": {
													"assignments": [
														1356
													],
													"declarations": [
														{
															"constant": false,
															"id": 1356,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3088:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1387,
															"src": "3080:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1355,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3080:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1358,
													"initialValue": {
														"hexValue": "30",
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3092:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3080:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3116:3:7",
														"subExpression": {
															"id": 1362,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "3116:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ExpressionStatement",
													"src": "3116:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3075:219:7"
											}
										]
									},
									"functionSelector": "88d695b2",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1338,
												"name": "whenNotPaused",
												"nameLocations": [
													"2901:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2901:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2901:13:7"
										}
									],
									"name": "batchTransfer",
									"nameLocation": "2819:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "2852:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2833:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1331,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2833:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1332,
													"nodeType": "ArrayTypeName",
													"src": "2833:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2883:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2864:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1334,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2864:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1335,
													"nodeType": "ArrayTypeName",
													"src": "2864:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:59:7"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:0:7"
									},
									"scope": 1390,
									"src": "2810:490:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "225:3078:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								919,
								928,
								1073,
								1079,
								1085,
								1091
							]
						}
					],
					"src": "32:3271:7"
				},
				"id": 7
			}
		}
	}
}