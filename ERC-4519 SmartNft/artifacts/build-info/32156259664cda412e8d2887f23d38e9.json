{
	"id": "32156259664cda412e8d2887f23d38e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC-3519 SmartNft/smartNFT_interface.sol": {
				"content": "//SPDX-License-Identifier: CC0-1.0\n\npragma solidity ^0.8.0;\n\n/// @title smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based\ninterface smartNFT{\n    /// @dev This emits when an user of a NFT changes\n    ///  This event emits when the user of a token is assigned\n    ///  (`_addressUser` == 0) when a user is unassigned\n    event UserAssigned(uint256 indexed tokenID, address indexed _addressUser);\n    \n    /// @dev This emits when an user of a NFT verifies a device\n    ///  This event emits when the user of a device finishes the assignment process\n    event UserEngaged(uint256 indexed tokenID);\n    \n    /// @dev This emits when an owner of a NFT verifies a device\n    ///  This event emits when the owner of a device finishes the transfer process\n    event OwnerEngaged(uint256 indexed tokenID);\n    \n    //TODO: Describe new functions and events\n    event TimeoutAlarm(uint256 indexed tokenID);\n\n    /// @notice This function defines how the smart device is bound to a new token\n    /// @dev Only the manufacturer of the smart device account can create a token and will be the first owner of the token\n    ///  The initial state of the token is \"waitingForOwner\" until verified by the new owner\n    /// @param _addressSD An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\n    /// @return The tokenID of the token bound to the smart device\n    function createToken(address _addressSD, address _addressOwner) external returns (uint256);\n\n    /// @notice This function defines the transference of use of a smart device\n    /// @dev Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".\n    ///  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\n    /// @param _tokenId The tokenID of the smart device\n    /// @param _addressUser The address of the new user\n    function setUser(uint256 _tokenId, address _addressUser) external; \n\n    //TODO: Describe new functions and events\n\n    function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngage, uint256 _hashK_O) external;\n    function ownerEngagement(uint256 _hashK_D) external; \n    function startUserEngagement(uint256 _tokenId, uint256 _dataEngage, uint256 _hashK_U) external;\n    function userEngagement(uint256 _hashK_D) external; \n    function checkTimeout(uint256 _tokenId) external returns (bool);\n    function setTimeout(uint256 _tokenId, uint256 _timeout) external; \n    function updateTimestamp() external; \n    \n    /// @notice This function let us obtain the tokenID from an address of smart device \n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressSD The address to obtain its token ID\n    /// @return The token ID of the token bound to _addressSD\n    function tokenFromBCA(address _addressSD) external view returns (uint256);\n    \n    /// @notice This function let us know who is the owner of the token from the address of the smart device\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressSD The address to obtain its owner\n    /// @return The owner of the token bound to _addressSD\n    function ownerOfFromBCA(address _addressSD) external view returns (address);\n    \n    /// @notice This function let us know who is the user of the token from the tokenId\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _tokenId of the token to obtain its user\n    /// @return The user of the token with _tokenId\n    function userOf(uint256 _tokenId) external view returns (address);\n    \n    /// @notice This function let us know who is the user of the token from the address of the smart device\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressSD The address to obtain its user.\n    /// @return The user of the token bound to _addressSD.\n    function userOfFromBCA(address _addressSD) external view returns (address);\n    \n    /// @notice This function let us know how many tokens an user has\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressUser The address of the user to know the number of tokens\n    /// @return The number of tokens of the user\n    function userBalanceOf(address _addressUser) external view returns (uint256);\n    \n    /// @notice This function let us know how many tokens of an owner an user has\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressUser The address of the user to know the number of tokens\n    /// @param _addressOwner The address of the owner of the tokens\n    /// @return The number of tokens of an owner that an user can use\n    function userBalanceOfAnOwner(address _addressUser, address _addressOwner) external view returns (uint256);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"ERC-3519 SmartNft/smartNFT_interface.sol": {
				"smartNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "OwnerEngaged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "TimeoutAlarm",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "UserAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "UserEngaged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "checkTimeout",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressOwner",
									"type": "address"
								}
							],
							"name": "createToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_hashK_D",
									"type": "uint256"
								}
							],
							"name": "ownerEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "ownerOfFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timeout",
									"type": "uint256"
								}
							],
							"name": "setTimeout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "setUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dataEngage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hashK_O",
									"type": "uint256"
								}
							],
							"name": "startOwnerEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dataEngage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hashK_U",
									"type": "uint256"
								}
							],
							"name": "startUserEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "tokenFromBCA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "userBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressOwner",
									"type": "address"
								}
							],
							"name": "userBalanceOfAnOwner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_hashK_D",
									"type": "uint256"
								}
							],
							"name": "userEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "userOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "userOfFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"OwnerEngaged(uint256)": {
								"details": "This emits when an owner of a NFT verifies a device  This event emits when the owner of a device finishes the transfer process"
							},
							"UserAssigned(uint256,address)": {
								"details": "This emits when an user of a NFT changes  This event emits when the user of a token is assigned  (`_addressUser` == 0) when a user is unassigned"
							},
							"UserEngaged(uint256)": {
								"details": "This emits when an user of a NFT verifies a device  This event emits when the user of a device finishes the assignment process"
							}
						},
						"kind": "dev",
						"methods": {
							"createToken(address,address)": {
								"details": "Only the manufacturer of the smart device account can create a token and will be the first owner of the token  The initial state of the token is \"waitingForOwner\" until verified by the new owner",
								"params": {
									"_addressSD": "An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device"
								},
								"returns": {
									"_0": "The tokenID of the token bound to the smart device"
								}
							},
							"ownerOfFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its owner"
								},
								"returns": {
									"_0": "The owner of the token bound to _addressSD"
								}
							},
							"setUser(uint256,address)": {
								"details": "Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser",
								"params": {
									"_addressUser": "The address of the new user",
									"_tokenId": "The tokenID of the smart device"
								}
							},
							"tokenFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its token ID"
								},
								"returns": {
									"_0": "The token ID of the token bound to _addressSD"
								}
							},
							"userBalanceOf(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressUser": "The address of the user to know the number of tokens"
								},
								"returns": {
									"_0": "The number of tokens of the user"
								}
							},
							"userBalanceOfAnOwner(address,address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressOwner": "The address of the owner of the tokens",
									"_addressUser": "The address of the user to know the number of tokens"
								},
								"returns": {
									"_0": "The number of tokens of an owner that an user can use"
								}
							},
							"userOf(uint256)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_tokenId": "of the token to obtain its user"
								},
								"returns": {
									"_0": "The user of the token with _tokenId"
								}
							},
							"userOfFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its user."
								},
								"returns": {
									"_0": "The user of the token bound to _addressSD."
								}
							}
						},
						"title": "smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkTimeout(uint256)": "5329c681",
							"createToken(address,address)": "6ed776b2",
							"ownerEngagement(uint256)": "ad2661fc",
							"ownerOfFromBCA(address)": "f7b44a0f",
							"setTimeout(uint256,uint256)": "0b6df367",
							"setUser(uint256,address)": "db4d295b",
							"startOwnerEngagement(uint256,uint256,uint256)": "128da698",
							"startUserEngagement(uint256,uint256,uint256)": "adadaf40",
							"tokenFromBCA(address)": "e61e3a76",
							"updateTimestamp()": "1c5be3d7",
							"userBalanceOf(address)": "0cb22289",
							"userBalanceOfAnOwner(address,address)": "5a9f8682",
							"userEngagement(uint256)": "531f2bcd",
							"userOf(uint256)": "c2f1f14a",
							"userOfFromBCA(address)": "d1553258"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"OwnerEngaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"TimeoutAlarm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"UserAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"UserEngaged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"checkTimeout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressOwner\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hashK_D\",\"type\":\"uint256\"}],\"name\":\"ownerEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"ownerOfFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeout\",\"type\":\"uint256\"}],\"name\":\"setTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataEngage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hashK_O\",\"type\":\"uint256\"}],\"name\":\"startOwnerEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataEngage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hashK_U\",\"type\":\"uint256\"}],\"name\":\"startUserEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"tokenFromBCA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"userBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressOwner\",\"type\":\"address\"}],\"name\":\"userBalanceOfAnOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hashK_D\",\"type\":\"uint256\"}],\"name\":\"userEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"userOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"userOfFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnerEngaged(uint256)\":{\"details\":\"This emits when an owner of a NFT verifies a device  This event emits when the owner of a device finishes the transfer process\"},\"UserAssigned(uint256,address)\":{\"details\":\"This emits when an user of a NFT changes  This event emits when the user of a token is assigned  (`_addressUser` == 0) when a user is unassigned\"},\"UserEngaged(uint256)\":{\"details\":\"This emits when an user of a NFT verifies a device  This event emits when the user of a device finishes the assignment process\"}},\"kind\":\"dev\",\"methods\":{\"createToken(address,address)\":{\"details\":\"Only the manufacturer of the smart device account can create a token and will be the first owner of the token  The initial state of the token is \\\"waitingForOwner\\\" until verified by the new owner\",\"params\":{\"_addressSD\":\"An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\"},\"returns\":{\"_0\":\"The tokenID of the token bound to the smart device\"}},\"ownerOfFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its owner\"},\"returns\":{\"_0\":\"The owner of the token bound to _addressSD\"}},\"setUser(uint256,address)\":{\"details\":\"Only the owner of the token account can transfer a token provided that the state of the token is \\\"engagedWithOwner\\\",\\\"waitingForUser\\\" or \\\"engagedWithUser\\\".  The state of the token must change to \\\"waitingForUser\\\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\",\"params\":{\"_addressUser\":\"The address of the new user\",\"_tokenId\":\"The tokenID of the smart device\"}},\"tokenFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its token ID\"},\"returns\":{\"_0\":\"The token ID of the token bound to _addressSD\"}},\"userBalanceOf(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressUser\":\"The address of the user to know the number of tokens\"},\"returns\":{\"_0\":\"The number of tokens of the user\"}},\"userBalanceOfAnOwner(address,address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressOwner\":\"The address of the owner of the tokens\",\"_addressUser\":\"The address of the user to know the number of tokens\"},\"returns\":{\"_0\":\"The number of tokens of an owner that an user can use\"}},\"userOf(uint256)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_tokenId\":\"of the token to obtain its user\"},\"returns\":{\"_0\":\"The user of the token with _tokenId\"}},\"userOfFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its user.\"},\"returns\":{\"_0\":\"The user of the token bound to _addressSD.\"}}},\"title\":\"smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createToken(address,address)\":{\"notice\":\"This function defines how the smart device is bound to a new token\"},\"ownerOfFromBCA(address)\":{\"notice\":\"This function let us know who is the owner of the token from the address of the smart device\"},\"setUser(uint256,address)\":{\"notice\":\"This function defines the transference of use of a smart device\"},\"tokenFromBCA(address)\":{\"notice\":\"This function let us obtain the tokenID from an address of smart device \"},\"userBalanceOf(address)\":{\"notice\":\"This function let us know how many tokens an user has\"},\"userBalanceOfAnOwner(address,address)\":{\"notice\":\"This function let us know how many tokens of an owner an user has\"},\"userOf(uint256)\":{\"notice\":\"This function let us know who is the user of the token from the tokenId\"},\"userOfFromBCA(address)\":{\"notice\":\"This function let us know who is the user of the token from the address of the smart device\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC-3519 SmartNft/smartNFT_interface.sol\":\"smartNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC-3519 SmartNft/smartNFT_interface.sol\":{\"keccak256\":\"0x32f5e82bc8f948bb7aee3f1406c1c875d6b50cb834f78cdc9914284fbe595970\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://60d3f49c2584734b34b9517b10e2e73787d0fefa46b9983f99f376a9431c4c3c\",\"dweb:/ipfs/QmYHvNVu6c9SLJDzAQWu52xLSkcbR2w7HhfXiiSQ9ocUUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createToken(address,address)": {
								"notice": "This function defines how the smart device is bound to a new token"
							},
							"ownerOfFromBCA(address)": {
								"notice": "This function let us know who is the owner of the token from the address of the smart device"
							},
							"setUser(uint256,address)": {
								"notice": "This function defines the transference of use of a smart device"
							},
							"tokenFromBCA(address)": {
								"notice": "This function let us obtain the tokenID from an address of smart device "
							},
							"userBalanceOf(address)": {
								"notice": "This function let us know how many tokens an user has"
							},
							"userBalanceOfAnOwner(address,address)": {
								"notice": "This function let us know how many tokens of an owner an user has"
							},
							"userOf(uint256)": {
								"notice": "This function let us know who is the user of the token from the tokenId"
							},
							"userOfFromBCA(address)": {
								"notice": "This function let us know who is the user of the token from the address of the smart device"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC-3519 SmartNft/smartNFT_interface.sol": {
				"ast": {
					"absolutePath": "ERC-3519 SmartNft/smartNFT_interface.sol",
					"exportedSymbols": {
						"smartNFT": [
							137
						]
					},
					"id": 138,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "smartNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:75:0",
								"text": "@title smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based"
							},
							"fullyImplemented": false,
							"id": 137,
							"linearizedBaseContracts": [
								137
							],
							"name": "smartNFT",
							"nameLocation": "146:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "160:169:0",
										"text": "@dev This emits when an user of a NFT changes\n  This event emits when the user of a token is assigned\n  (`_addressUser` == 0) when a user is unassigned"
									},
									"eventSelector": "a366111dc7688b9ffb71476107b8b733fd141e7b370cff8480c03f4ec4409cd7",
									"id": 9,
									"name": "UserAssigned",
									"nameLocation": "340:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "353:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "394:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "378:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:55:0"
									},
									"src": "334:74:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "418:143:0",
										"text": "@dev This emits when an user of a NFT verifies a device\n  This event emits when the user of a device finishes the assignment process"
									},
									"eventSelector": "0a74f4ab94fad84ffc38a74f59789bf53235489daa6ae3b0010116780c1588a4",
									"id": 14,
									"name": "UserEngaged",
									"nameLocation": "572:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "600:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "584:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:25:0"
									},
									"src": "566:43:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "619:143:0",
										"text": "@dev This emits when an owner of a NFT verifies a device\n  This event emits when the owner of a device finishes the transfer process"
									},
									"eventSelector": "d0582651f57ffea78c4fa2df3eaf04bf2ff083277a6c1145411c72b9c1dc474c",
									"id": 19,
									"name": "OwnerEngaged",
									"nameLocation": "773:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "802:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "786:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:25:0"
									},
									"src": "767:44:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7e1636e7e3d95ceaa354ed9d47ea056b46cbcc0c448b26c6efaac0af33100305",
									"id": 23,
									"name": "TimeoutAlarm",
									"nameLocation": "873:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "886:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:25:0"
									},
									"src": "867:44:0"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "917:530:0",
										"text": "@notice This function defines how the smart device is bound to a new token\n @dev Only the manufacturer of the smart device account can create a token and will be the first owner of the token\n  The initial state of the token is \"waitingForOwner\" until verified by the new owner\n @param _addressSD An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\n @return The tokenID of the token bound to the smart device"
									},
									"functionSelector": "6ed776b2",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createToken",
									"nameLocation": "1461:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "1481:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1473:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_addressOwner",
												"nameLocation": "1501:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1493:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:43:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1534:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:9:0"
									},
									"scope": 137,
									"src": "1452:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1549:510:0",
										"text": "@notice This function defines the transference of use of a smart device\n @dev Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".\n  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\n @param _tokenId The tokenID of the smart device\n @param _addressUser The address of the new user"
									},
									"functionSelector": "db4d295b",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUser",
									"nameLocation": "2073:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2081:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "2107:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2099:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:40:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2129:0:0"
									},
									"scope": 137,
									"src": "2064:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "128da698",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startOwnerEngagement",
									"nameLocation": "2193:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2222:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2214:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_dataEngage",
												"nameLocation": "2240:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2232:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_hashK_O",
												"nameLocation": "2261:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2253:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:57:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:0:0"
									},
									"scope": 137,
									"src": "2184:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad2661fc",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerEngagement",
									"nameLocation": "2294:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_hashK_D",
												"nameLocation": "2318:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2310:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:18:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:0:0"
									},
									"scope": 137,
									"src": "2285:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "adadaf40",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startUserEngagement",
									"nameLocation": "2352:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2380:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_dataEngage",
												"nameLocation": "2398:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2390:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_hashK_U",
												"nameLocation": "2419:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2411:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:57:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:0"
									},
									"scope": 137,
									"src": "2343:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "531f2bcd",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userEngagement",
									"nameLocation": "2452:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_hashK_D",
												"nameLocation": "2475:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2467:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:18:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:0"
									},
									"scope": 137,
									"src": "2443:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5329c681",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkTimeout",
									"nameLocation": "2509:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2530:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2522:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2558:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:6:0"
									},
									"scope": 137,
									"src": "2500:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0b6df367",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTimeout",
									"nameLocation": "2578:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2597:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2589:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "_timeout",
												"nameLocation": "2615:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "2607:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:36:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:0"
									},
									"scope": 137,
									"src": "2569:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c5be3d7",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTimestamp",
									"nameLocation": "2649:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2664:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:0:0"
									},
									"scope": 137,
									"src": "2640:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2687:309:0",
										"text": "@notice This function let us obtain the tokenID from an address of smart device \n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressSD The address to obtain its token ID\n @return The token ID of the token bound to _addressSD"
									},
									"functionSelector": "e61e3a76",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromBCA",
									"nameLocation": "3010:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "3031:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3023:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:20:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3066:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3065:9:0"
									},
									"scope": 137,
									"src": "3001:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3085:323:0",
										"text": "@notice This function let us know who is the owner of the token from the address of the smart device\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressSD The address to obtain its owner\n @return The owner of the token bound to _addressSD"
									},
									"functionSelector": "f7b44a0f",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOfFromBCA",
									"nameLocation": "3422:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "3445:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3437:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:20:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:0"
									},
									"scope": 137,
									"src": "3413:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3499:293:0",
										"text": "@notice This function let us know who is the user of the token from the tokenId\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _tokenId of the token to obtain its user\n @return The user of the token with _tokenId"
									},
									"functionSelector": "c2f1f14a",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userOf",
									"nameLocation": "3806:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:18:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3854:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:9:0"
									},
									"scope": 137,
									"src": "3797:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3873:322:0",
										"text": "@notice This function let us know who is the user of the token from the address of the smart device\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressSD The address to obtain its user.\n @return The user of the token bound to _addressSD."
									},
									"functionSelector": "d1553258",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userOfFromBCA",
									"nameLocation": "4209:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "4231:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4223:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:20:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "4266:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:9:0"
									},
									"scope": 137,
									"src": "4200:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "4285:297:0",
										"text": "@notice This function let us know how many tokens an user has\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressUser The address of the user to know the number of tokens\n @return The number of tokens of the user"
									},
									"functionSelector": "0cb22289",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userBalanceOf",
									"nameLocation": "4596:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "4618:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4610:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4609:22:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "4655:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4654:9:0"
									},
									"scope": 137,
									"src": "4587:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "4674:398:0",
										"text": "@notice This function let us know how many tokens of an owner an user has\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressUser The address of the user to know the number of tokens\n @param _addressOwner The address of the owner of the tokens\n @return The number of tokens of an owner that an user can use"
									},
									"functionSelector": "5a9f8682",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userBalanceOfAnOwner",
									"nameLocation": "5086:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "5115:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5107:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_addressOwner",
												"nameLocation": "5137:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5129:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5106:45:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "5175:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5174:9:0"
									},
									"scope": 137,
									"src": "5077:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 138,
							"src": "136:5050:0",
							"usedErrors": []
						}
					],
					"src": "36:5150:0"
				},
				"id": 0
			}
		}
	}
}