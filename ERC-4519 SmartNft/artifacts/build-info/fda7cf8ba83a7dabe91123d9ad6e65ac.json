{
	"id": "fda7cf8ba83a7dabe91123d9ad6e65ac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC-3519 SmartNft/SmartNFT.sol": {
				"content": "///SPDX-License-Identifier: CC0-1.0\n\npragma solidity ^0.8.0;\n\nimport \"./smartNFT_interface.sol\";\nimport \"./ERC721_interface.sol\";\n\ncontract smartNFT_SC is ERC721,smartNFT{\n     enum States { waitingForOwner, engagedWithOwner, waitingForUser, engagedWithUser }\n    \n    address manufacturer;                                   //Address of manufacturer and owner of Smart Contract\n    uint256 tokenCounter;                                   //To give a genuine tokenID based on the number of tokens created\n    mapping(uint256 => address) ownerOfSD;                  //To khow who is the owner of a specific owner\n    mapping(address => uint256) tokenIDOfBCA;               //To khow which is the tokenID associated to a secure device from the address\n    mapping(address => uint256) ownerBalance;               //To know how many tokens an owner has\n    mapping(address => uint256) userBalance;                //To know how many tokens a user can use\n    \n    struct Token_Struct{\n        address approved;                                   //Indicate who can transfer this token, 0 if no one\n        address SD;                                         //Indicate the address of the secure device associated to this token\n        address user;                                       //Indicate who can use this secure device\n        States state;                                       //If blocked (false) then token should be verified by a new user or a new owner\n        uint256 hashK_OD;                                   //Hash of the Key shared between owner and device\n        uint256 hashK_UD;                                   //Hash of the Key shared between user and device\n        uint256 dataEngagement;                             //Public Key to create K_OD or K_UD depending on token state\n        uint256 timestamp;                                  //Last time that device updated its proof of live\n        uint256 timeout;                                    //timeout to verify a device error\n    }\n    \n    Token_Struct[] Secure_Token;\n    \n    constructor() {\n        manufacturer = msg.sender;\n        tokenCounter = 1;\n        Secure_Token.push(Token_Struct(address(0), address(0), address(0), States.waitingForOwner,0,0,0,0,0));\n\n    }\n    \n    function createToken(address _addressSD, address _addressOwner) public virtual override returns (uint256){\n        //Check if the sender of message is the manufacturer\n        require(manufacturer == msg.sender);\n        //Check if the Blockchain Account of the secure device is in the SmartContract\n        if(tokenFromBCA(_addressSD)==0){\n            //Create a new token\n            Secure_Token.push(Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400));\n            //Assigning a new tokenId\n            uint256 _tokenId = tokenCounter ++;\n            tokenIDOfBCA[_addressSD] = _tokenId;\n            //Assigning the owner\n            ownerOfSD[_tokenId] = _addressOwner;\n            ownerBalance[_addressOwner]++;\n            //Return tokenId obtained\n            return(_tokenId);\n        }else{\n            //If the BCA already exists then return the _tokenId\n            return(tokenFromBCA(_addressSD));\n        }\n    }\n\n    function setUser(uint256 _tokenId, address _addressUser) public virtual override{\n        //Check the sender and the token state\n        require((ownerOfSD[_tokenId] == msg.sender) && (Secure_Token[_tokenId].state >= States.engagedWithOwner));\n        if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){\n            //Only to avoid overflow, for example, in address 0.\n            if(userBalance[Secure_Token[_tokenId].user]>0){\n                //Update the balance of tokens assigned to the old user\n                userBalance[Secure_Token[_tokenId].user]--;\n            }\n            //Update the balance of tokens assigned to the new user\n            userBalance[_addressUser]++;\n            //Assign the new user to the token\n            Secure_Token[_tokenId].user = _addressUser;            \n            //Update the state of the token\n            Secure_Token[_tokenId].state = States.waitingForUser;\n            //Erase old key exchange data between device with old user assigned\n            Secure_Token[_tokenId].dataEngagement =0;\n            Secure_Token[_tokenId].hashK_UD = 0;\n            emit UserAssigned(_tokenId,_addressUser);\n        }else{\n            Secure_Token[_tokenId].user = address(0);\n            emit TimeoutAlarm(_tokenId);\n        }\n    }\n    \n    function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{\n        //Check if sender is the Owner of token and the State of token\n        require(ownerOfSD[_tokenId] == msg.sender);\n        if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){\n            Secure_Token[_tokenId].dataEngagement = _dataEngagement;\n            Secure_Token[_tokenId].hashK_OD = _hashK_O;\n        }else{\n            Secure_Token[_tokenId].user = address(0);\n            emit TimeoutAlarm(_tokenId);\n        }\n    }\n    \n    function ownerEngagement(uint256 _hashK_D) public virtual override{\n        uint256 _tokenId = tokenFromBCA(msg.sender);\n        //Check if public key owner-device exists from tokenID of BCA sender\n        require(Secure_Token[_tokenId].dataEngagement != 0);\n        require (Secure_Token[_tokenId].hashK_OD == _hashK_D);\n        require (Secure_Token[_tokenId].state == States.waitingForOwner);\n        //Erase PK_Owner-Device and update timestamp\n        Secure_Token[_tokenId].dataEngagement = 0;\n        Secure_Token[_tokenId].timestamp = block.timestamp;\n        //Update the state of token\n        Secure_Token[_tokenId].state = States.engagedWithOwner;\n        //Send a notification to owner and device\n        emit OwnerEngaged(_tokenId);\n    }\n    \n    function startUserEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_U) public virtual override{\n        //Check the sender and the state of token\n        require(Secure_Token[_tokenId].user == msg.sender);    \n        if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){\n            Secure_Token[_tokenId].dataEngagement = _dataEngagement;\n            Secure_Token[_tokenId].hashK_UD = _hashK_U;\n        }else{\n            Secure_Token[_tokenId].user = address(0);\n            emit TimeoutAlarm(_tokenId);\n        }\n    }\n    \n    function userEngagement(uint256 _hashK_D) public virtual override{\n        uint256 _tokenId = tokenFromBCA(msg.sender);\n        //Check if public key user-device exists from tokenID of BCA sender\n        require(Secure_Token[_tokenId].dataEngagement != 0);\n        require (Secure_Token[_tokenId].hashK_UD == _hashK_D);\n        require (Secure_Token[_tokenId].state == States.waitingForUser);\n        //Erase PK_User-Device and update timestamp\n        Secure_Token[_tokenId].dataEngagement = 0;\n        Secure_Token[_tokenId].timestamp = block.timestamp;\n        //Update the state of token\n        Secure_Token[_tokenId].state = States.engagedWithUser;\n        //Send a notification to user and device\n        emit UserEngaged(_tokenId);\n    }\n    \n    \n    function tokenFromBCA(address _addressSD) public virtual view override returns (uint256){\n        return(tokenIDOfBCA[_addressSD]);\n    }\n    \n    function ownerOfFromBCA(address _addressSD) public virtual view override returns (address){\n        return(ownerOfSD[tokenIDOfBCA[_addressSD]]);\n    }\n    \n    function userOf(uint256 _tokenId) public virtual view override returns (address){\n         return(Secure_Token[_tokenId].user);\n    }\n    \n    function userOfFromBCA(address _addressSD) public virtual override view returns (address){\n        return(Secure_Token[tokenIDOfBCA[_addressSD]].user);\n    }   \n    \n    function userBalanceOf(address _addressUser) public virtual override view returns (uint256){\n        return(userBalance[_addressUser]);\n    }\n    \n    function userBalanceOfAnOwner(address _addressUser, address _addressOwner) public virtual override view returns (uint256){\n        //TODO\n    }\n    \n    function getInfoToken(uint256 _tokenId) public view returns ( address _BCA_OWNER,\n                                                                    address _BCA_USER,\n                                                                    address _BCA_SD,\n                                                                    uint8   _state){\n        _BCA_OWNER = ownerOfSD[_tokenId];\n        _BCA_USER = Secure_Token[_tokenId].user;\n        _BCA_SD = Secure_Token[_tokenId].SD;\n        if(Secure_Token[_tokenId].state == States.waitingForOwner){\n            _state = 0;\n        }else if(Secure_Token[_tokenId].state == States.engagedWithOwner){\n            _state = 1;\n        }else if(Secure_Token[_tokenId].state == States.waitingForUser){\n            _state = 2;\n        }else {\n            _state = 3;\n        }\n    }\n    \n    function getInfoTokenFromBCA(address _addressSD) public view returns ( address _BCA_OWNER,\n                                                                    address _BCA_USER,\n                                                                    uint256 _tokenId,\n                                                                    uint8   _state){\n        _tokenId = tokenIDOfBCA[_addressSD];\n        _BCA_OWNER = ownerOfSD[_tokenId];\n        _BCA_USER = Secure_Token[_tokenId].user;\n        if(Secure_Token[_tokenId].state == States.waitingForOwner){\n            _state = 0;\n        }else if(Secure_Token[_tokenId].state == States.engagedWithOwner){\n            _state = 1;\n        }else if(Secure_Token[_tokenId].state == States.waitingForUser){\n            _state = 2;\n        }else {\n            _state = 3;\n        }\n    }\n    \n    function balanceOf(address _owner) public virtual override view returns (uint256){\n        return(ownerBalance[_owner]);\n    }\n    \n    function ownerOf(uint256 _tokenId) public virtual override view returns (address){\n        return(ownerOfSD[_tokenId]);\n    }\n\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory data) public virtual override payable{\n        \n    }\n\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{\n        transferFrom(_from, _to, _tokenId);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{\n        require((ownerOfSD[_tokenId] == msg.sender)||(Secure_Token[_tokenId].approved == msg.sender));\n        require(ownerOfSD[_tokenId] == _from);\n        if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){\n            ownerOfSD[_tokenId] = _to;\n            ownerBalance[_from]--;\n            ownerBalance[_to]++;\n            //Secure_Token[_tokenId].approved = address(0);\n            Secure_Token[_tokenId].user = address(0);\n            Secure_Token[_tokenId].state = States.waitingForOwner;\n            //Erase old key exchange data between device with old Owner\n            Secure_Token[_tokenId].dataEngagement = 0;\n            Secure_Token[_tokenId].hashK_UD = 0;\n            Secure_Token[_tokenId].hashK_OD = 0;\n            emit Transfer(_from,_to,_tokenId);\n        }else{\n            Secure_Token[_tokenId].user = address(0);\n            emit TimeoutAlarm(_tokenId);\n        }\n    }\n\n    function approve(address _approved, uint256 _tokenId) public virtual override payable{\n        \n    }\n\n    function setApprovalForAll(address _operator, bool _approved) public virtual override{\n        \n    }\n\n    function getApproved(uint256 _tokenId) public virtual override view returns (address){\n        \n    }\n\n    function isApprovedForAll(address _owner, address _operator) public virtual override view returns (bool){\n        \n    }\n    \n    function checkTimeout(uint256 _tokenId) public virtual override returns (bool){\n        require(ownerOfSD[_tokenId] == msg.sender);\n        if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){\n            return true;\n        }else{\n            Secure_Token[_tokenId].user = address(0);\n            emit TimeoutAlarm(_tokenId);\n            return false;\n        }\n    }\n    \n    function updateTimestamp() public virtual override{\n        Secure_Token[tokenFromBCA(msg.sender)].timestamp = block.timestamp;\n    }\n    \n    function setTimeout(uint256 _tokenId, uint256 _timeout) public virtual override{\n        require(ownerOfSD[_tokenId] == msg.sender);\n        Secure_Token[_tokenId].timeout = _timeout;\n    }\n}"
			},
			"ERC-3519 SmartNft/ERC721_interface.sol": {
				"content": "///SPDX-License-Identifier: CC0-1.0\n\npragma solidity ^0.8.0;\n/// @title ERC-721 Non-Fungible Token Standard\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n///  Note: the ERC-165 identifier for this interface is 0x80ac58cd\ninterface ERC721 /* is ERC165 */ {\n    /// @dev This emits when ownership of any NFT changes by any mechanism.\n    ///  This event emits when NFTs are created (`from` == 0) and destroyed\n    ///  (`to` == 0). Exception: during contract creation, any number of NFTs\n    ///  may be created and assigned without emitting Transfer. At the time of\n    ///  any transfer, the approved address for that NFT (if any) is reset to none.\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n\n    /// @dev This emits when the approved address for an NFT is changed or\n    ///  reaffirmed. The zero address indicates there is no approved address.\n    ///  When a Transfer event emits, this also indicates that the approved\n    ///  address for that NFT (if any) is reset to none.\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n\n   /// @dev This emits when an operator is enabled or disabled for an owner.\n    ///  The operator can manage all NFTs of the owner.\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /// @notice Count all NFTs assigned to an owner\n    /// @dev NFTs assigned to the zero address are considered invalid, and this\n    ///  function throws for queries about the zero address.\n    /// @param _owner An address for whom to query the balance\n    /// @return The number of NFTs owned by `_owner`, possibly zero\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /// @notice Find the owner of an NFT\n    /// @dev NFTs assigned to zero address are considered invalid, and queries\n    ///  about them do throw.\n    /// @param _tokenId The identifier for an NFT\n    /// @return The address of the owner of the NFT\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /// @notice Transfers the ownership of an NFT from one address to another address\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\n    ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\n    ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\n    ///  `onERC721Received` on `_to` and throws if the return value is not\n    ///  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n    /// @param _from The current owner of the NFT\n    /// @param _to The new owner\n    /// @param _tokenId The NFT to transfer\n    /// @param data Additional data with no specified format, sent in call to `_to`\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory data) external payable;\n\n    /// @notice Transfers the ownership of an NFT from one address to another address\n    /// @dev This works identically to the other function with an extra data parameter,\n    ///  except this function just sets data to \"\"\n    /// @param _from The current owner of the NFT\n    /// @param _to The new owner\n    /// @param _tokenId The NFT to transfer\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n    ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n    ///  THEY MAY BE PERMANENTLY LOST\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\n    ///  `_tokenId` is not a valid NFT.\n    /// @param _from The current owner of the NFT\n    /// @param _to The new owner\n    /// @param _tokenId The NFT to transfer\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n   /// @notice Set or reaffirm the approved address for an NFT\n    /// @dev The zero address indicates there is no approved address.\n    /// @dev Throws unless `msg.sender` is the current NFT owner, or an authorized\n    ///  operator of the current owner.\n    /// @param _approved The new approved NFT controller\n    /// @param _tokenId The NFT to approve\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /// @notice Enable or disable approval for a third party (\"operator\") to manage\n    ///  all of `msg.sender`'s assets.\n    /// @dev Emits the ApprovalForAll event. The contract MUST allow\n    ///  multiple operators per owner.\n    /// @param _operator Address to add to the set of authorized operators.\n    /// @param _approved True if the operator is approved, false to revoke approval\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    /// @notice Get the approved address for a single NFT\n    /// @dev Throws if `_tokenId` is not a valid NFT\n    /// @param _tokenId The NFT to find the approved address for\n    /// @return The approved address for this NFT, or the zero address if there is none\n    function getApproved(uint256 _tokenId) external view returns (address);\n\n\n    /// @notice Query if an address is an authorized operator for another address\n    /// @param _owner The address that owns the NFTs\n    /// @param _operator The address that acts on behalf of the owner\n    /// @return True if `_operator` is an approved operator for `_owner`, false otherwise\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n\ninterface ERC165 {\n    /// @notice Query if a contract implements an interface\n    /// @param interfaceID The interface identifier, as specified in ERC-165\n    /// @dev Interface identification is specified in ERC-165. This function\n    ///  uses less than 30,000 gas.\n    /// @return `true` if the contract implements `interfaceID` and\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\n}\n\ninterface ERC721TokenReceiver {\n    /// @notice Handle the receipt of an NFT\n    /// @dev The ERC721 smart contract calls this function on the\n    /// recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n    /// of other than the magic value MUST result in the transaction being reverted.\n    /// @notice The contract address is always the message sender.\n    /// @param _operator The address which called `safeTransferFrom` function\n    /// @param _from The address which previously owned the token\n    /// @param _tokenId The NFT identifier which is being transferred\n    /// @param _data Additional data with no specified format\n    /// @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    /// unless throwing\n    function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes memory _data) external returns(bytes4);\n}"
			},
			"ERC-3519 SmartNft/smartNFT_interface.sol": {
				"content": "//SPDX-License-Identifier: CC0-1.0\n\npragma solidity ^0.8.0;\n\n/// @title smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based\ninterface smartNFT{\n    /// @dev This emits when an user of a NFT changes\n    ///  This event emits when the user of a token is assigned\n    ///  (`_addressUser` == 0) when a user is unassigned\n    event UserAssigned(uint256 indexed tokenID, address indexed _addressUser);\n    \n    /// @dev This emits when an user of a NFT verifies a device\n    ///  This event emits when the user of a device finishes the assignment process\n    event UserEngaged(uint256 indexed tokenID);\n    \n    /// @dev This emits when an owner of a NFT verifies a device\n    ///  This event emits when the owner of a device finishes the transfer process\n    event OwnerEngaged(uint256 indexed tokenID);\n    \n    //TODO: Describe new functions and events\n    event TimeoutAlarm(uint256 indexed tokenID);\n\n    /// @notice This function defines how the smart device is bound to a new token\n    /// @dev Only the manufacturer of the smart device account can create a token and will be the first owner of the token\n    ///  The initial state of the token is \"waitingForOwner\" until verified by the new owner\n    /// @param _addressSD An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\n    /// @return The tokenID of the token bound to the smart device\n    function createToken(address _addressSD, address _addressOwner) external returns (uint256);\n\n    /// @notice This function defines the transference of use of a smart device\n    /// @dev Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".\n    ///  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\n    /// @param _tokenId The tokenID of the smart device\n    /// @param _addressUser The address of the new user\n    function setUser(uint256 _tokenId, address _addressUser) external; \n\n    //TODO: Describe new functions and events\n\n    function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngage, uint256 _hashK_O) external;\n    function ownerEngagement(uint256 _hashK_D) external; \n    function startUserEngagement(uint256 _tokenId, uint256 _dataEngage, uint256 _hashK_U) external;\n    function userEngagement(uint256 _hashK_D) external; \n    function checkTimeout(uint256 _tokenId) external returns (bool);\n    function setTimeout(uint256 _tokenId, uint256 _timeout) external; \n    function updateTimestamp() external; \n    \n    /// @notice This function let us obtain the tokenID from an address of smart device \n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressSD The address to obtain its token ID\n    /// @return The token ID of the token bound to _addressSD\n    function tokenFromBCA(address _addressSD) external view returns (uint256);\n    \n    /// @notice This function let us know who is the owner of the token from the address of the smart device\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressSD The address to obtain its owner\n    /// @return The owner of the token bound to _addressSD\n    function ownerOfFromBCA(address _addressSD) external view returns (address);\n    \n    /// @notice This function let us know who is the user of the token from the tokenId\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _tokenId of the token to obtain its user\n    /// @return The user of the token with _tokenId\n    function userOf(uint256 _tokenId) external view returns (address);\n    \n    /// @notice This function let us know who is the user of the token from the address of the smart device\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressSD The address to obtain its user.\n    /// @return The user of the token bound to _addressSD.\n    function userOfFromBCA(address _addressSD) external view returns (address);\n    \n    /// @notice This function let us know how many tokens an user has\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressUser The address of the user to know the number of tokens\n    /// @return The number of tokens of the user\n    function userBalanceOf(address _addressUser) external view returns (uint256);\n    \n    /// @notice This function let us know how many tokens of an owner an user has\n    /// @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n    /// @param _addressUser The address of the user to know the number of tokens\n    /// @param _addressOwner The address of the owner of the tokens\n    /// @return The number of tokens of an owner that an user can use\n    function userBalanceOfAnOwner(address _addressUser, address _addressOwner) external view returns (uint256);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"ERC-3519 SmartNft/ERC721_interface.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
								"params": {
									"interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":{\"keccak256\":\"0x4904c99c81d0f0919f6288aa55a1e4cc17d4128611ec58383a9a6e7fddc1ff6c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://3611cb816af28152767e2920c578cac3c0b48c1d8186f105025cb2d37609f355\",\"dweb:/ipfs/QmZU4AnQxgRXwPyuqQ7VoVpAH8xtMnHn7VxsLyCXMobT8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md  Note: the ERC-165 identifier for this interface is 0x80ac58cd",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner."
							},
							"Transfer(address,address,uint256)": {
								"details": "This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\"",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md  Note: the ERC-165 identifier for this interface is 0x80ac58cd\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or  reaffirmed. The zero address indicates there is no approved address.  When a Transfer event emits, this also indicates that the approved  address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner.  The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism.  This event emits when NFTs are created (`from` == 0) and destroyed  (`to` == 0). Exception: during contract creation, any number of NFTs  may be created and assigned without emitting Transfer. At the time of  any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\"\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Set or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":{\"keccak256\":\"0x4904c99c81d0f0919f6288aa55a1e4cc17d4128611ec58383a9a6e7fddc1ff6c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://3611cb816af28152767e2920c578cac3c0b48c1d8186f105025cb2d37609f355\",\"dweb:/ipfs/QmZU4AnQxgRXwPyuqQ7VoVpAH8xtMnHn7VxsLyCXMobT8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Set or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets."
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							}
						},
						"version": 1
					}
				},
				"ERC721TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted.",
								"params": {
									"_data": "Additional data with no specified format",
									"_from": "The address which previously owned the token",
									"_operator": "The address which called `safeTransferFrom` function",
									"_tokenId": "The NFT identifier which is being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))` unless throwing"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"The ERC721 smart contract calls this function on the recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return of other than the magic value MUST result in the transaction being reverted.\",\"params\":{\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_operator\":\"The address which called `safeTransferFrom` function\",\"_tokenId\":\"The NFT identifier which is being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))` unless throwing\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFTThe contract address is always the message sender.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":\"ERC721TokenReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":{\"keccak256\":\"0x4904c99c81d0f0919f6288aa55a1e4cc17d4128611ec58383a9a6e7fddc1ff6c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://3611cb816af28152767e2920c578cac3c0b48c1d8186f105025cb2d37609f355\",\"dweb:/ipfs/QmZU4AnQxgRXwPyuqQ7VoVpAH8xtMnHn7VxsLyCXMobT8e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of an NFTThe contract address is always the message sender."
							}
						},
						"version": 1
					}
				}
			},
			"ERC-3519 SmartNft/SmartNFT.sol": {
				"smartNFT_SC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "OwnerEngaged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "TimeoutAlarm",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "UserAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "UserEngaged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_approved",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "checkTimeout",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressOwner",
									"type": "address"
								}
							],
							"name": "createToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getInfoToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "_BCA_OWNER",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_BCA_USER",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_BCA_SD",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "_state",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "getInfoTokenFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "_BCA_OWNER",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_BCA_USER",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "_state",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_hashK_D",
									"type": "uint256"
								}
							],
							"name": "ownerEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "ownerOfFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timeout",
									"type": "uint256"
								}
							],
							"name": "setTimeout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "setUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dataEngagement",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hashK_O",
									"type": "uint256"
								}
							],
							"name": "startOwnerEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dataEngagement",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hashK_U",
									"type": "uint256"
								}
							],
							"name": "startUserEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "tokenFromBCA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "userBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressOwner",
									"type": "address"
								}
							],
							"name": "userBalanceOfAnOwner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_hashK_D",
									"type": "uint256"
								}
							],
							"name": "userEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "userOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "userOfFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "The zero address indicates there is no approved address.Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.",
								"params": {
									"_approved": "The new approved NFT controller",
									"_tokenId": "The NFT to approve"
								}
							},
							"balanceOf(address)": {
								"details": "NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
								"params": {
									"_owner": "An address for whom to query the balance"
								},
								"returns": {
									"_0": "The number of NFTs owned by `_owner`, possibly zero"
								}
							},
							"createToken(address,address)": {
								"details": "Only the manufacturer of the smart device account can create a token and will be the first owner of the token  The initial state of the token is \"waitingForOwner\" until verified by the new owner",
								"params": {
									"_addressSD": "An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device"
								},
								"returns": {
									"_0": "The tokenID of the token bound to the smart device"
								}
							},
							"getApproved(uint256)": {
								"details": "Throws if `_tokenId` is not a valid NFT",
								"params": {
									"_tokenId": "The NFT to find the approved address for"
								},
								"returns": {
									"_0": "The approved address for this NFT, or the zero address if there is none"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "The address that acts on behalf of the owner",
									"_owner": "The address that owns the NFTs"
								},
								"returns": {
									"_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
								}
							},
							"ownerOf(uint256)": {
								"details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
								"params": {
									"_tokenId": "The identifier for an NFT"
								},
								"returns": {
									"_0": "The address of the owner of the NFT"
								}
							},
							"ownerOfFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its owner"
								},
								"returns": {
									"_0": "The owner of the token bound to _addressSD"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "This works identically to the other function with an extra data parameter,  except this function just sets data to \"\"",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer",
									"data": "Additional data with no specified format, sent in call to `_to`"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators."
								}
							},
							"setUser(uint256,address)": {
								"details": "Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser",
								"params": {
									"_addressUser": "The address of the new user",
									"_tokenId": "The tokenID of the smart device"
								}
							},
							"tokenFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its token ID"
								},
								"returns": {
									"_0": "The token ID of the token bound to _addressSD"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.",
								"params": {
									"_from": "The current owner of the NFT",
									"_to": "The new owner",
									"_tokenId": "The NFT to transfer"
								}
							},
							"userBalanceOf(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressUser": "The address of the user to know the number of tokens"
								},
								"returns": {
									"_0": "The number of tokens of the user"
								}
							},
							"userBalanceOfAnOwner(address,address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressOwner": "The address of the owner of the tokens",
									"_addressUser": "The address of the user to know the number of tokens"
								},
								"returns": {
									"_0": "The number of tokens of an owner that an user can use"
								}
							},
							"userOf(uint256)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_tokenId": "of the token to obtain its user"
								},
								"returns": {
									"_0": "The user of the token with _tokenId"
								}
							},
							"userOfFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its user."
								},
								"returns": {
									"_0": "The user of the token bound to _addressSD."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC-3519 SmartNft/SmartNFT.sol\":131:12680  contract smartNFT_SC is ERC721,smartNFT{... */\n  mstore(0x40, 0x80)\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2061:2255  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2085:2097  manufacturer */\n  0x00\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2085:2110  manufacturer = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2100:2110  msg.sender */\n  caller\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2085:2110  manufacturer = msg.sender */\n  or\n  dup3\n  sstore\n  0x01\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2120:2136  tokenCounter = 1 */\n  dup1\n  dup1\n  sstore\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2164:2246  Token_Struct(address(0), address(0), address(0), States.waitingForOwner,0,0,0,0,0) */\n  0x40\n  dup1\n  mload\n  0x0120\n  dup2\n  add\n  dup3\n  mstore\n  dup5\n  dup2\n  mstore\n  0x20\n  dup2\n  add\n  dup6\n  dup2\n  mstore\n  swap2\n  dup2\n  add\n  dup6\n  dup2\n  mstore\n  0x60\n  dup3\n  add\n  dup7\n  dup2\n  mstore\n  0x80\n  dup4\n  add\n  dup8\n  swap1\n  mstore\n  0xa0\n  dup4\n  add\n  dup8\n  swap1\n  mstore\n  0xc0\n  dup4\n  add\n  dup8\n  swap1\n  mstore\n  0xe0\n  dup4\n  add\n  dup8\n  swap1\n  mstore\n  0x0100\n  dup4\n  add\n  dup8\n  swap1\n  mstore\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2146:2158  Secure_Token */\n  0x06\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2146:2247  Secure_Token.push(Token_Struct(address(0), address(0), address(0), States.waitingForOwner,0,0,0,0,0)) */\n  dup1\n  sload\n  swap6\n  dup7\n  add\n  dup2\n  sstore\n  swap1\n  swap7\n  mstore\n  dup2\n  mload\n  0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n  0x08\n  swap1\n  swap6\n  mul\n  swap5\n  dup6\n  add\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  swap1\n  dup9\n  and\n  or\n  dup2\n  sstore\n  swap4\n  mload\n  0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40\n  dup7\n  add\n  dup1\n  sload\n  swap2\n  dup4\n  and\n  swap2\n  dup9\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  swap1\n  mload\n  0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41\n  swap1\n  swap5\n  add\n  dup1\n  sload\n  swap5\n  swap1\n  swap2\n  and\n  swap5\n  dup5\n  and\n  dup6\n  or\n  dup2\n  sstore\n  swap5\n  mload\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2164:2246  Token_Struct(address(0), address(0), address(0), States.waitingForOwner,0,0,0,0,0) */\n  swap1\n  swap5\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":2146:2247  Secure_Token.push(Token_Struct(address(0), address(0), address(0), States.waitingForOwner,0,0,0,0,0)) */\n  swap2\n  swap4\n  swap1\n  swap3\n  not(sub(shl(0xa8, 0x01), 0x01))\n  and\n  or\n  shl(0xa0, 0x01)\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_9\n  tag_6\n  jump\t// in\ntag_9:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  sstore\n  0xe0\n  dup3\n  add\n  mload\n  dup2\n  0x06\n  add\n  sstore\n  0x0100\n  dup3\n  add\n  mload\n  dup2\n  0x07\n  add\n  sstore\n  pop\n  pop\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":131:12680  contract smartNFT_SC is ERC721,smartNFT{... */\n  jump(tag_11)\n    /* \"#utility.yul\":14:141   */\ntag_6:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x21\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":14:141   */\ntag_11:\n    /* \"ERC-3519 SmartNft/SmartNFT.sol\":131:12680  contract smartNFT_SC is ERC721,smartNFT{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":131:12680  contract smartNFT_SC is ERC721,smartNFT{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ed776b2\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xdb4d295b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdb4d295b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe61e3a76\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf7b44a0f\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0xb88d4fde\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc2f1f14a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd1553258\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x6ed776b2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xad2661fc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xadadaf40\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb684bf0c\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x219a5823\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x531f2bcd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x531f2bcd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5329c681\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5a9f8682\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x219a5823\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x081812fc\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0b6df367\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0cb22289\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x128da698\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1c5be3d7\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11692:11793  function getApproved(uint256 _tokenId) public virtual override view returns (address){... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11769:11776  address */\n      0x00\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11692:11793  function getApproved(uint256 _tokenId) public virtual override view returns (address){... */\n      jump\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11692:11793  function getApproved(uint256 _tokenId) public virtual override view returns (address){... */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11478:11579  function approve(address _approved, uint256 _tokenId) public virtual override payable{... */\n    tag_3:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      pop\n      pop\n      jump\n    tag_40:\n      stop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12489:12678  function setTimeout(uint256 _tokenId, uint256 _timeout) public virtual override{... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_40\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7896:8037  function userBalanceOf(address _addressUser) public virtual override view returns (uint256){... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8004:8029  userBalance[_addressUser] */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7979:7986  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8004:8029  userBalance[_addressUser] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8004:8015  userBalance */\n      0x05\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8004:8029  userBalance[_addressUser] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7896:8037  function userBalanceOf(address _addressUser) public virtual override view returns (uint256){... */\n      jump\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":1434:1459   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1407:1425   */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7896:8037  function userBalanceOf(address _addressUser) public virtual override view returns (uint256){... */\n      tag_38\n        /* \"#utility.yul\":1288:1465   */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4568:5156  function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_40\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12346:12479  function updateTimestamp() public virtual override{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_40\n      tag_63\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8200:9018  function getInfoToken(uint256 _tokenId) public view returns ( address _BCA_OWNER,... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2074:2089   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":2056:2090   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2126:2141   */\n      swap4\n      dup6\n      and\n        /* \"#utility.yul\":2121:2123   */\n      0x20\n        /* \"#utility.yul\":2106:2124   */\n      dup6\n      add\n        /* \"#utility.yul\":2099:2142   */\n      mstore\n        /* \"#utility.yul\":2178:2193   */\n      swap2\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2158:2176   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2151:2194   */\n      mstore\n        /* \"#utility.yul\":2242:2246   */\n      0xff\n        /* \"#utility.yul\":2230:2247   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2225:2227   */\n      0x60\n        /* \"#utility.yul\":2210:2228   */\n      dup3\n      add\n        /* \"#utility.yul\":2203:2248   */\n      mstore\n        /* \"#utility.yul\":2005:2008   */\n      0x80\n        /* \"#utility.yul\":1990:2009   */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8200:9018  function getInfoToken(uint256 _tokenId) public view returns ( address _BCA_OWNER,... */\n      tag_38\n        /* \"#utility.yul\":1791:2254   */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10437:11472  function transferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{... */\n    tag_9:\n      tag_40\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10277:10431  function safeTransferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{... */\n    tag_10:\n      tag_40\n      tag_75\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6516:7261  function userEngagement(uint256 _hashK_D) public virtual override{... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_40\n      tag_79\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11929:12336  function checkTimeout(uint256 _tokenId) public virtual override returns (bool){... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n        /* \"#utility.yul\":2757:2771   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2750:2772   */\n      iszero\n        /* \"#utility.yul\":2732:2773   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11929:12336  function checkTimeout(uint256 _tokenId) public virtual override returns (bool){... */\n      tag_38\n        /* \"#utility.yul\":2592:2779   */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8047:8190  function userBalanceOfAnOwner(address _addressUser, address _addressOwner) public virtual override view returns (uint256){... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_50\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8160:8167  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8047:8190  function userBalanceOfAnOwner(address _addressUser, address _addressOwner) public virtual override view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10002:10127  function ownerOf(uint256 _tokenId) public virtual override view returns (address){... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_34\n      tag_95\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_95:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10075:10082  address */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10100:10119  ownerOfSD[_tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10100:10109  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10100:10119  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10002:10127  function ownerOf(uint256 _tokenId) public virtual override view returns (address){... */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2265:3242  function createToken(address _addressSD, address _addressOwner) public virtual override returns (uint256){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_50\n      tag_100\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9866:9992  function balanceOf(address _owner) public virtual override view returns (uint256){... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_50\n      tag_105\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9964:9984  ownerBalance[_owner] */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9939:9946  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9964:9984  ownerBalance[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9964:9976  ownerBalance */\n      0x04\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9964:9984  ownerBalance[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9866:9992  function balanceOf(address _owner) public virtual override view returns (uint256){... */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11585:11686  function setApprovalForAll(address _operator, bool _approved) public virtual override{... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5166:5918  function ownerEngagement(uint256 _hashK_D) public virtual override{... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_40\n      tag_115\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5928:6506  function startUserEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_U) public virtual override{... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_40\n      tag_119\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9028:9856  function getInfoTokenFromBCA(address _addressSD) public view returns ( address _BCA_OWNER,... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3684:3699   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":3666:3700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3736:3751   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3731:3733   */\n      0x20\n        /* \"#utility.yul\":3716:3734   */\n      dup6\n      add\n        /* \"#utility.yul\":3709:3752   */\n      mstore\n        /* \"#utility.yul\":3768:3786   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":3761:3795   */\n      mstore\n        /* \"#utility.yul\":3843:3847   */\n      0xff\n        /* \"#utility.yul\":3831:3848   */\n      and\n        /* \"#utility.yul\":3826:3828   */\n      0x60\n        /* \"#utility.yul\":3811:3829   */\n      dup3\n      add\n        /* \"#utility.yul\":3804:3849   */\n      mstore\n        /* \"#utility.yul\":3615:3618   */\n      0x80\n        /* \"#utility.yul\":3600:3619   */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9028:9856  function getInfoTokenFromBCA(address _addressSD) public view returns ( address _BCA_OWNER,... */\n      tag_38\n        /* \"#utility.yul\":3401:3855   */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10133:10271  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory data) public virtual override payable{... */\n    tag_21:\n      tag_40\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7583:7716  function userOf(uint256 _tokenId) public virtual view override returns (address){... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_34\n      tag_133\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7726:7883  function userOfFromBCA(address _addressSD) public virtual override view returns (address){... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_34\n      tag_138\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3248:4558  function setUser(uint256 _tokenId, address _addressUser) public virtual override{... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_40\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7276:7413  function tokenFromBCA(address _addressSD) public virtual view override returns (uint256){... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_50\n      tag_148\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7356:7363  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7393  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7276:7413  function tokenFromBCA(address _addressSD) public virtual view override returns (uint256){... */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11799:11919  function isApprovedForAll(address _owner, address _operator) public virtual override view returns (bool){... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_82\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7423:7573  function ownerOfFromBCA(address _addressSD) public virtual view override returns (address){... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_34\n      tag_158\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7540:7564  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7505:7512  address */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7540:7564  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7540:7552  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7540:7564  tokenIDOfBCA[_addressSD] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7530:7565  ownerOfSD[tokenIDOfBCA[_addressSD]] */\n      dup4\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7530:7539  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7530:7565  ownerOfSD[tokenIDOfBCA[_addressSD]] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7423:7573  function ownerOfFromBCA(address _addressSD) public virtual view override returns (address){... */\n      jump\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12489:12678  function setTimeout(uint256 _tokenId, uint256 _timeout) public virtual override{... */\n    tag_48:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12586:12605  ownerOfSD[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12586:12595  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12586:12605  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12609:12619  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12586:12619  ownerOfSD[_tokenId] == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12578:12620  require(ownerOfSD[_tokenId] == msg.sender) */\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12663:12671  _timeout */\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12630:12642  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12643:12651  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12630:12652  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12630:12660  Secure_Token[_tokenId].timeout */\n      0x07\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12630:12671  Secure_Token[_tokenId].timeout = _timeout */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12489:12678  function setTimeout(uint256 _tokenId, uint256 _timeout) public virtual override{... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4568:5156  function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{... */\n    tag_60:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4771:4790  ownerOfSD[_tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4771:4780  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4771:4790  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4794:4804  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4771:4804  ownerOfSD[_tokenId] == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4763:4805  require(ownerOfSD[_tokenId] == msg.sender) */\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4888:4903  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4854:4866  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4867:4875  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4854:4876  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_167\n      jump\t// in\n    tag_173:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4854:4884  Secure_Token[_tokenId].timeout */\n      0x07\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4819:4831  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4832:4840  _tokenId */\n      dup6\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4819:4841  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_167\n      jump\t// in\n    tag_176:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4819:4851  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4819:4884  Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4818:4903  (Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp */\n      gt\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4815:5150  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n      iszero\n      tag_180\n      jumpi\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4958:4973  _dataEngagement */\n      dup2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4918:4930  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4931:4939  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4918:4940  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_167\n      jump\t// in\n    tag_182:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4918:4955  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4918:4973  Secure_Token[_tokenId].dataEngagement = _dataEngagement */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5021:5029  _hashK_O */\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4987:4999  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5000:5008  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4987:5009  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_167\n      jump\t// in\n    tag_185:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4987:5018  Secure_Token[_tokenId].hashK_OD */\n      0x03\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4987:5029  Secure_Token[_tokenId].hashK_OD = _hashK_O */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4568:5156  function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4815:5150  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n    tag_180:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5096:5097  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5058:5070  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5071:5079  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5058:5080  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_189\n      jumpi\n      tag_189\n      tag_167\n      jump\t// in\n    tag_189:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x08\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5058:5085  Secure_Token[_tokenId].user */\n      0x02\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5058:5098  Secure_Token[_tokenId].user = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5117:5139  TimeoutAlarm(_tokenId) */\n      mload(0x40)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5130:5138  _tokenId */\n      dup5\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_a910d1b10f01c5ca37c4e89a96b75c29aa88c10448ae4d63673a5a7c342776b1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5117:5139  TimeoutAlarm(_tokenId) */\n      swap2\n      log2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4815:5150  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n    tag_187:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4568:5156  function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12346:12479  function updateTimestamp() public virtual override{... */\n    tag_63:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12432:12442  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7356:7363  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7393  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12457:12472  block.timestamp */\n      timestamp\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12406:12418  Secure_Token */\n      0x06\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12406:12444  Secure_Token[tokenFromBCA(msg.sender)] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_194\n      tag_167\n      jump\t// in\n    tag_194:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12406:12454  Secure_Token[tokenFromBCA(msg.sender)].timestamp */\n      0x06\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12406:12472  Secure_Token[tokenFromBCA(msg.sender)].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12346:12479  function updateTimestamp() public virtual override{... */\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8200:9018  function getInfoToken(uint256 _tokenId) public view returns ( address _BCA_OWNER,... */\n    tag_67:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8262:8280  address _BCA_OWNER */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8560:8579  ownerOfSD[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8560:8569  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8560:8579  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8601:8613  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8601:8623  Secure_Token[_tokenId] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8560:8579  ownerOfSD[_tokenId] */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8262:8280  address _BCA_OWNER */\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8570:8578  _tokenId */\n      dup7\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8601:8623  Secure_Token[_tokenId] */\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_198\n      tag_167\n      jump\t// in\n    tag_198:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8601:8628  Secure_Token[_tokenId].user */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8589:8628  _BCA_USER = Secure_Token[_tokenId].user */\n      swap3\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8648:8660  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8661:8669  _tokenId */\n      dup6\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8648:8670  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_201\n      tag_167\n      jump\t// in\n    tag_201:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8648:8673  Secure_Token[_tokenId].SD */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8648:8670  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8648:8673  Secure_Token[_tokenId].SD */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8686:8698  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8699:8707  _tokenId */\n      dup7\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8686:8708  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_207\n      jumpi\n      tag_207\n      tag_167\n      jump\t// in\n    tag_207:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8686:8714  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8686:8740  Secure_Token[_tokenId].state == States.waitingForOwner */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_210\n      tag_205\n      jump\t// in\n    tag_210:\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8683:9012  if(Secure_Token[_tokenId].state == States.waitingForOwner){... */\n      tag_211\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8764:8765  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8683:9012  if(Secure_Token[_tokenId].state == States.waitingForOwner){... */\n      jump(tag_230)\n    tag_211:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8816:8839  States.engagedWithOwner */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8784:8796  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8797:8805  _tokenId */\n      dup7\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8784:8806  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_216\n      tag_167\n      jump\t// in\n    tag_216:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8784:8812  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8784:8839  Secure_Token[_tokenId].state == States.engagedWithOwner */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_219\n      tag_205\n      jump\t// in\n    tag_219:\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8781:9012  if(Secure_Token[_tokenId].state == States.engagedWithOwner){... */\n      tag_220\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8863:8864  1 */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8781:9012  if(Secure_Token[_tokenId].state == States.engagedWithOwner){... */\n      jump(tag_230)\n    tag_220:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8915:8936  States.waitingForUser */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8883:8895  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8896:8904  _tokenId */\n      dup7\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8883:8905  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_167\n      jump\t// in\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8883:8911  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8883:8936  Secure_Token[_tokenId].state == States.waitingForUser */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_228\n      jumpi\n      tag_228\n      tag_205\n      jump\t// in\n    tag_228:\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8880:9012  if(Secure_Token[_tokenId].state == States.waitingForUser){... */\n      tag_229\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8960:8961  2 */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8880:9012  if(Secure_Token[_tokenId].state == States.waitingForUser){... */\n      jump(tag_230)\n    tag_229:\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9000:9001  3 */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8880:9012  if(Secure_Token[_tokenId].state == States.waitingForUser){... */\n    tag_230:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":8200:9018  function getInfoToken(uint256 _tokenId) public view returns ( address _BCA_OWNER,... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10437:11472  function transferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{... */\n    tag_73:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10555:10574  ownerOfSD[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10555:10564  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10555:10574  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10578:10588  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10555:10588  ownerOfSD[_tokenId] == msg.sender */\n      eq\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10554:10638  (ownerOfSD[_tokenId] == msg.sender)||(Secure_Token[_tokenId].approved == msg.sender) */\n      tag_232\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10627:10637  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10592:10637  Secure_Token[_tokenId].approved == msg.sender */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10592:10604  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10605:10613  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10592:10614  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_234\n      tag_167\n      jump\t// in\n    tag_234:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x08\n      swap1\n      swap2\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10592:10623  Secure_Token[_tokenId].approved */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10592:10637  Secure_Token[_tokenId].approved == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10554:10638  (ownerOfSD[_tokenId] == msg.sender)||(Secure_Token[_tokenId].approved == msg.sender) */\n    tag_232:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10546:10639  require((ownerOfSD[_tokenId] == msg.sender)||(Secure_Token[_tokenId].approved == msg.sender)) */\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10657:10676  ownerOfSD[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10657:10666  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10657:10676  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10657:10685  ownerOfSD[_tokenId] == _from */\n      dup5\n      dup2\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10657:10676  ownerOfSD[_tokenId] */\n      swap2\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10657:10685  ownerOfSD[_tokenId] == _from */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10649:10686  require(ownerOfSD[_tokenId] == _from) */\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10769:10784  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10735:10747  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10748:10756  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10735:10757  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_239\n      tag_167\n      jump\t// in\n    tag_239:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10735:10765  Secure_Token[_tokenId].timeout */\n      0x07\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10700:10712  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10713:10721  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10700:10722  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_242\n      tag_167\n      jump\t// in\n    tag_242:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10700:10732  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10700:10765  Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout */\n      tag_244\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_244:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10699:10784  (Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp */\n      gt\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10696:11466  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n      iszero\n      tag_245\n      jumpi\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10799:10818  ownerOfSD[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10799:10808  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10799:10818  ownerOfSD[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10799:10824  ownerOfSD[_tokenId] = _to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10838:10857  ownerBalance[_from] */\n      dup7\n      and\n      dup4\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10838:10850  ownerBalance */\n      0x04\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10838:10857  ownerBalance[_from] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10838:10859  ownerBalance[_from]-- */\n      dup1\n      sload\n      swap2\n      tag_246\n      dup4\n      tag_247\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10873:10890  ownerBalance[_to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10873:10885  ownerBalance */\n      0x04\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10873:10890  ownerBalance[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10873:10892  ownerBalance[_to]++ */\n      dup1\n      sload\n      swap2\n      tag_248\n      dup4\n      tag_249\n      jump\t// in\n    tag_248:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11004:11005  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10966:10978  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10979:10987  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10966:10988  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_251\n      tag_167\n      jump\t// in\n    tag_251:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10966:10993  Secure_Token[_tokenId].user */\n      0x02\n      add\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10966:11006  Secure_Token[_tokenId].user = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11051:11073  States.waitingForOwner */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11020:11032  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11033:11041  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11020:11042  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_254\n      jumpi\n      tag_254\n      tag_167\n      jump\t// in\n    tag_254:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11020:11048  Secure_Token[_tokenId].state */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11020:11042  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11020:11048  Secure_Token[_tokenId].state */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11020:11073  Secure_Token[_tokenId].state = States.waitingForOwner */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      tag_257\n      tag_205\n      jump\t// in\n    tag_257:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11199:11200  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11159:11171  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11172:11180  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11159:11181  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_259\n      tag_167\n      jump\t// in\n    tag_259:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11159:11196  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11159:11200  Secure_Token[_tokenId].dataEngagement = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11248:11249  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11214:11226  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11227:11235  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11214:11236  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_262\n      tag_167\n      jump\t// in\n    tag_262:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11214:11245  Secure_Token[_tokenId].hashK_UD */\n      0x04\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11214:11249  Secure_Token[_tokenId].hashK_UD = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11297:11298  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11263:11275  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11276:11284  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11263:11285  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_265\n      tag_167\n      jump\t// in\n    tag_265:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11263:11294  Secure_Token[_tokenId].hashK_OD */\n      0x03\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11263:11298  Secure_Token[_tokenId].hashK_OD = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11336:11344  _tokenId */\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11332:11335  _to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11317:11345  Transfer(_from,_to,_tokenId) */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11326:11331  _from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11317:11345  Transfer(_from,_to,_tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4568:5156  function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10696:11466  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n    tag_245:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11412:11413  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11374:11386  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11387:11395  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11374:11396  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_269\n      jumpi\n      tag_269\n      tag_167\n      jump\t// in\n    tag_269:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x08\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11374:11401  Secure_Token[_tokenId].user */\n      0x02\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11374:11414  Secure_Token[_tokenId].user = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11433:11455  TimeoutAlarm(_tokenId) */\n      mload(0x40)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11446:11454  _tokenId */\n      dup3\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_a910d1b10f01c5ca37c4e89a96b75c29aa88c10448ae4d63673a5a7c342776b1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11433:11455  TimeoutAlarm(_tokenId) */\n      swap2\n      log2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10437:11472  function transferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10277:10431  function safeTransferFrom(address _from, address _to, uint256 _tokenId) public virtual override payable{... */\n    tag_76:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10390:10424  transferFrom(_from, _to, _tokenId) */\n      tag_187\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10403:10408  _from */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10410:10413  _to */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10415:10423  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10390:10402  transferFrom */\n      tag_73\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":10390:10424  transferFrom(_from, _to, _tokenId) */\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6516:7261  function userEngagement(uint256 _hashK_D) public virtual override{... */\n    tag_80:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6623:6633  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6591:6607  uint256 _tokenId */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7393  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6728:6740  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6728:6750  Secure_Token[_tokenId] */\n      dup1\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      dup3\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6728:6750  Secure_Token[_tokenId] */\n      dup2\n      lt\n      tag_276\n      jumpi\n      tag_276\n      tag_167\n      jump\t// in\n    tag_276:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6728:6765  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6769:6770  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6728:6770  Secure_Token[_tokenId].dataEngagement != 0 */\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6720:6771  require(Secure_Token[_tokenId].dataEngagement != 0) */\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6825:6833  _hashK_D */\n      dup2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6790:6802  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6803:6811  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6790:6812  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_280\n      tag_167\n      jump\t// in\n    tag_280:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6790:6821  Secure_Token[_tokenId].hashK_UD */\n      0x04\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6790:6833  Secure_Token[_tokenId].hashK_UD == _hashK_D */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6781:6834  require (Secure_Token[_tokenId].hashK_UD == _hashK_D) */\n      tag_282\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_282:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6885:6906  States.waitingForUser */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6853:6865  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6866:6874  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6853:6875  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_286\n      jumpi\n      tag_286\n      tag_167\n      jump\t// in\n    tag_286:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6853:6881  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6853:6906  Secure_Token[_tokenId].state == States.waitingForUser */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_289\n      tag_205\n      jump\t// in\n    tag_289:\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6844:6907  require (Secure_Token[_tokenId].state == States.waitingForUser) */\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7009:7010  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6969:6981  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6982:6990  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6969:6991  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_292\n      tag_167\n      jump\t// in\n    tag_292:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6969:7006  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6969:7010  Secure_Token[_tokenId].dataEngagement = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7055:7070  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7020:7032  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7033:7041  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7020:7042  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_295\n      jumpi\n      tag_295\n      tag_167\n      jump\t// in\n    tag_295:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7020:7052  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7020:7070  Secure_Token[_tokenId].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7147:7169  States.engagedWithUser */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7116:7128  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7129:7137  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7116:7138  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_298\n      jumpi\n      tag_298\n      tag_167\n      jump\t// in\n    tag_298:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7116:7144  Secure_Token[_tokenId].state */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7116:7138  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7116:7144  Secure_Token[_tokenId].state */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7116:7169  Secure_Token[_tokenId].state = States.engagedWithUser */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_301\n      tag_205\n      jump\t// in\n    tag_301:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7233:7254  UserEngaged(_tokenId) */\n      mload(0x40)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7245:7253  _tokenId */\n      dup2\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7233:7254  UserEngaged(_tokenId) */\n      0x0a74f4ab94fad84ffc38a74f59789bf53235489daa6ae3b0010116780c1588a4\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6581:7261  {... */\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6516:7261  function userEngagement(uint256 _hashK_D) public virtual override{... */\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11929:12336  function checkTimeout(uint256 _tokenId) public virtual override returns (bool){... */\n    tag_84:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12002:12006  bool */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12025:12044  ownerOfSD[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12025:12034  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12025:12044  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12048:12058  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12025:12058  ownerOfSD[_tokenId] == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12017:12059  require(ownerOfSD[_tokenId] == msg.sender) */\n      tag_303\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_303:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12142:12157  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12108:12120  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12121:12129  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12108:12130  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_305\n      jumpi\n      tag_305\n      tag_167\n      jump\t// in\n    tag_305:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12108:12138  Secure_Token[_tokenId].timeout */\n      0x07\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12073:12085  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12086:12094  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12073:12095  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_167\n      jump\t// in\n    tag_308:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12073:12105  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12073:12138  Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout */\n      tag_310\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_310:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12072:12157  (Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp */\n      gt\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12069:12330  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12179:12183  true */\n      0x01\n      swap2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11929:12336  function checkTimeout(uint256 _tokenId) public virtual override returns (bool){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12069:12330  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n    tag_311:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12250:12251  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12212:12224  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12225:12233  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12212:12234  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_167\n      jump\t// in\n    tag_314:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x08\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12212:12239  Secure_Token[_tokenId].user */\n      0x02\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12212:12252  Secure_Token[_tokenId].user = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12271:12293  TimeoutAlarm(_tokenId) */\n      mload(0x40)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12284:12292  _tokenId */\n      dup4\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_a910d1b10f01c5ca37c4e89a96b75c29aa88c10448ae4d63673a5a7c342776b1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12271:12293  TimeoutAlarm(_tokenId) */\n      swap2\n      log2\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12314:12319  false */\n      0x00\n      swap2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11929:12336  function checkTimeout(uint256 _tokenId) public virtual override returns (bool){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":12069:12330  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n    tag_312:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11929:12336  function checkTimeout(uint256 _tokenId) public virtual override returns (bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2265:3242  function createToken(address _addressSD, address _addressOwner) public virtual override returns (uint256){... */\n    tag_101:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2362:2369  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2449:2461  manufacturer */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2465:2475  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2449:2475  manufacturer == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2441:2476  require(manufacturer == msg.sender) */\n      tag_319\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      dup4\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7356:7363  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7393  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2602:2603  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2576:2603  tokenFromBCA(_addressSD)==0 */\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2573:3236  if(tokenFromBCA(_addressSD)==0){... */\n      tag_321\n      jumpi\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2669:2769  Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400) */\n      0x40\n      dup1\n      mload\n      0x0120\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      0x20\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n      swap4\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n      0x60\n      dup5\n      add\n      dup4\n      dup2\n      mstore\n      0x80\n      dup6\n      add\n      dup5\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      dup5\n      swap1\n      mstore\n      0xc0\n      dup6\n      add\n      dup5\n      swap1\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2747:2762  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2669:2769  Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400) */\n      0xe0\n      dup7\n      add\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2763:2768  86400 */\n      0x015180\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2669:2769  Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400) */\n      0x0100\n      dup7\n      add\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2651:2663  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2651:2770  Secure_Token.push(Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400)) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap5\n      mstore\n      dup5\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      0x08\n      swap1\n      swap6\n      mul\n      swap5\n      dup6\n      add\n      dup1\n      sload\n      swap2\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      dup2\n      sstore\n      swap7\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40\n      dup7\n      add\n      dup1\n      sload\n      swap2\n      dup7\n      and\n      swap2\n      dup4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap2\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      swap5\n      swap1\n      swap4\n      and\n      swap2\n      dup5\n      and\n      dup3\n      or\n      dup4\n      sstore\n      mload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2669:2769  Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400) */\n      swap4\n      swap5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2651:2770  Secure_Token.push(Token_Struct(address(0), _addressSD, address(0), States.waitingForOwner,0,0,0,block.timestamp,86400)) */\n      swap4\n      swap3\n      not(sub(shl(0xa8, 0x01), 0x01))\n      and\n      or\n      shl(0xa0, 0x01)\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_326\n      jumpi\n      tag_326\n      tag_205\n      jump\t// in\n    tag_326:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      0x04\n      dup3\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      0x05\n      dup3\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      0x06\n      dup3\n      add\n      sstore\n      0x0100\n      swap1\n      swap2\n      add\n      mload\n      0x07\n      swap1\n      swap2\n      add\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2841:2853  tokenCounter */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2841:2856  tokenCounter ++ */\n      dup1\n      sload\n      0x00\n      swap2\n      dup3\n      tag_327\n      dup4\n      tag_249\n      jump\t// in\n    tag_327:\n      swap1\n      swap2\n      sstore\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2870:2894  tokenIDOfBCA[_addressSD] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2870:2882  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2870:2894  tokenIDOfBCA[_addressSD] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2870:2905  tokenIDOfBCA[_addressSD] = _tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2953:2972  ownerOfSD[_tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2953:2962  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2953:2972  ownerOfSD[_tokenId] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2953:2988  ownerOfSD[_tokenId] = _addressOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap5\n      dup10\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3002:3029  ownerBalance[_addressOwner] */\n      swap3\n      dup3\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3002:3014  ownerBalance */\n      0x04\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3002:3029  ownerBalance[_addressOwner] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3002:3031  ownerBalance[_addressOwner]++ */\n      dup1\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2870:2905  tokenIDOfBCA[_addressSD] = _tokenId */\n      swap3\n      swap4\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3002:3029  ownerBalance[_addressOwner] */\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3002:3031  ownerBalance[_addressOwner]++ */\n      tag_328\n      dup4\n      tag_249\n      jump\t// in\n    tag_328:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3090:3098  _tokenId */\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3083:3099  return(_tokenId) */\n      swap2\n      pop\n      pop\n      jump(tag_329)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2573:3236  if(tokenFromBCA(_addressSD)==0){... */\n    tag_321:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      dup3\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7356:7363  uint256 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7393  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2573:3236  if(tokenFromBCA(_addressSD)==0){... */\n    tag_329:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":2265:3242  function createToken(address _addressSD, address _addressOwner) public virtual override returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5166:5918  function ownerEngagement(uint256 _hashK_D) public virtual override{... */\n    tag_116:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5274:5284  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5242:5258  uint256 _tokenId */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7393  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5380:5392  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5380:5402  Secure_Token[_tokenId] */\n      dup1\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7381:7405  tokenIDOfBCA[_addressSD] */\n      dup3\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5380:5402  Secure_Token[_tokenId] */\n      dup2\n      lt\n      tag_336\n      jumpi\n      tag_336\n      tag_167\n      jump\t// in\n    tag_336:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5380:5417  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5421:5422  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5380:5422  Secure_Token[_tokenId].dataEngagement != 0 */\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5372:5423  require(Secure_Token[_tokenId].dataEngagement != 0) */\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5477:5485  _hashK_D */\n      dup2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5442:5454  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5455:5463  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5442:5464  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_340\n      jumpi\n      tag_340\n      tag_167\n      jump\t// in\n    tag_340:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5442:5473  Secure_Token[_tokenId].hashK_OD */\n      0x03\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5442:5485  Secure_Token[_tokenId].hashK_OD == _hashK_D */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5433:5486  require (Secure_Token[_tokenId].hashK_OD == _hashK_D) */\n      tag_342\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_342:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5537:5559  States.waitingForOwner */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5505:5517  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5518:5526  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5505:5527  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_167\n      jump\t// in\n    tag_346:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5505:5533  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5505:5559  Secure_Token[_tokenId].state == States.waitingForOwner */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_349\n      jumpi\n      tag_349\n      tag_205\n      jump\t// in\n    tag_349:\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5496:5560  require (Secure_Token[_tokenId].state == States.waitingForOwner) */\n      tag_350\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_350:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5663:5664  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5623:5635  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5636:5644  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5623:5645  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_352\n      jumpi\n      tag_352\n      tag_167\n      jump\t// in\n    tag_352:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5623:5660  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5623:5664  Secure_Token[_tokenId].dataEngagement = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5709:5724  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5674:5686  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5687:5695  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5674:5696  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_355\n      jumpi\n      tag_355\n      tag_167\n      jump\t// in\n    tag_355:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5674:5706  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5674:5724  Secure_Token[_tokenId].timestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5801:5824  States.engagedWithOwner */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5770:5782  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5783:5791  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5770:5792  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_358\n      jumpi\n      tag_358\n      tag_167\n      jump\t// in\n    tag_358:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5770:5798  Secure_Token[_tokenId].state */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5770:5792  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5770:5798  Secure_Token[_tokenId].state */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5770:5824  Secure_Token[_tokenId].state = States.engagedWithOwner */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_361\n      jumpi\n      tag_361\n      tag_205\n      jump\t// in\n    tag_361:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5889:5911  OwnerEngaged(_tokenId) */\n      mload(0x40)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5902:5910  _tokenId */\n      dup2\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5889:5911  OwnerEngaged(_tokenId) */\n      0xd0582651f57ffea78c4fa2df3eaf04bf2ff083277a6c1145411c72b9c1dc474c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5232:5918  {... */\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5166:5918  function ownerEngagement(uint256 _hashK_D) public virtual override{... */\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":5928:6506  function startUserEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_U) public virtual override{... */\n    tag_120:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6140:6150  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6150  Secure_Token[_tokenId].user == msg.sender */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6121  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6122:6130  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6131  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_167\n      jump\t// in\n    tag_364:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6136  Secure_Token[_tokenId].user */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6131  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6136  Secure_Token[_tokenId].user */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6109:6150  Secure_Token[_tokenId].user == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6101:6151  require(Secure_Token[_tokenId].user == msg.sender) */\n      tag_366\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_366:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6238:6253  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6204:6216  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6217:6225  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6204:6226  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_368\n      jumpi\n      tag_368\n      tag_167\n      jump\t// in\n    tag_368:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6204:6234  Secure_Token[_tokenId].timeout */\n      0x07\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6169:6181  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6182:6190  _tokenId */\n      dup6\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6169:6191  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_371\n      jumpi\n      tag_371\n      tag_167\n      jump\t// in\n    tag_371:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6169:6201  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6169:6234  Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout */\n      tag_373\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_373:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6168:6253  (Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp */\n      gt\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6165:6500  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n      iszero\n      tag_180\n      jumpi\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6308:6323  _dataEngagement */\n      dup2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6268:6280  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6281:6289  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6268:6290  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_376\n      jumpi\n      tag_376\n      tag_167\n      jump\t// in\n    tag_376:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6268:6305  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6268:6323  Secure_Token[_tokenId].dataEngagement = _dataEngagement */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6371:6379  _hashK_U */\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6337:6349  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6350:6358  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6337:6359  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_379\n      jumpi\n      tag_379\n      tag_167\n      jump\t// in\n    tag_379:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6337:6368  Secure_Token[_tokenId].hashK_UD */\n      0x04\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":6337:6379  Secure_Token[_tokenId].hashK_UD = _hashK_U */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4568:5156  function startOwnerEngagement(uint256 _tokenId, uint256 _dataEngagement, uint256 _hashK_O) public virtual override{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9028:9856  function getInfoTokenFromBCA(address _addressSD) public view returns ( address _BCA_OWNER,... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9396:9420  tokenIDOfBCA[_addressSD] */\n      dup1\n      dup3\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9099:9117  address _BCA_OWNER */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9396:9420  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9396:9408  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9396:9420  tokenIDOfBCA[_addressSD] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9443:9462  ownerOfSD[_tokenId] */\n      dup1\n      dup5\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9443:9452  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9443:9462  ownerOfSD[_tokenId] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9484:9496  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9484:9506  Secure_Token[_tokenId] */\n      dup1\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9443:9462  ownerOfSD[_tokenId] */\n      swap2\n      swap1\n      swap5\n      and\n      swap4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9099:9117  address _BCA_OWNER */\n      dup4\n      swap2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9396:9420  tokenIDOfBCA[_addressSD] */\n      dup4\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9484:9506  Secure_Token[_tokenId] */\n      dup2\n      lt\n      tag_387\n      jumpi\n      tag_387\n      tag_167\n      jump\t// in\n    tag_387:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9484:9511  Secure_Token[_tokenId].user */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9484:9506  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9484:9511  Secure_Token[_tokenId].user */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap4\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9524:9536  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9537:9545  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9524:9546  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_392\n      jumpi\n      tag_392\n      tag_167\n      jump\t// in\n    tag_392:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9524:9552  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9524:9578  Secure_Token[_tokenId].state == States.waitingForOwner */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_395\n      jumpi\n      tag_395\n      tag_205\n      jump\t// in\n    tag_395:\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9521:9850  if(Secure_Token[_tokenId].state == States.waitingForOwner){... */\n      tag_396\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9602:9603  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9521:9850  if(Secure_Token[_tokenId].state == States.waitingForOwner){... */\n      jump(tag_230)\n    tag_396:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9654:9677  States.engagedWithOwner */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9622:9634  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9635:9643  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9622:9644  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_401\n      jumpi\n      tag_401\n      tag_167\n      jump\t// in\n    tag_401:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9622:9650  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9622:9677  Secure_Token[_tokenId].state == States.engagedWithOwner */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_404\n      jumpi\n      tag_404\n      tag_205\n      jump\t// in\n    tag_404:\n      sub\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9619:9850  if(Secure_Token[_tokenId].state == States.engagedWithOwner){... */\n      tag_405\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9701:9702  1 */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9619:9850  if(Secure_Token[_tokenId].state == States.engagedWithOwner){... */\n      jump(tag_230)\n    tag_405:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9753:9774  States.waitingForUser */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9721:9733  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9734:9742  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":9721:9743  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_167\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7583:7716  function userOf(uint256 _tokenId) public virtual view override returns (address){... */\n    tag_134:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7655:7662  address */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7681:7693  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7694:7702  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7681:7703  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_419\n      jumpi\n      tag_419\n      tag_167\n      jump\t// in\n    tag_419:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7681:7708  Secure_Token[_tokenId].user */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7681:7703  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7681:7708  Secure_Token[_tokenId].user */\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7583:7716  function userOf(uint256 _tokenId) public virtual view override returns (address){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7726:7883  function userOfFromBCA(address _addressSD) public virtual override view returns (address){... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7845:7869  tokenIDOfBCA[_addressSD] */\n      dup2\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7807:7814  address */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7845:7869  tokenIDOfBCA[_addressSD] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7845:7857  tokenIDOfBCA */\n      0x03\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7845:7869  tokenIDOfBCA[_addressSD] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7832:7844  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7832:7870  Secure_Token[tokenIDOfBCA[_addressSD]] */\n      dup1\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7832:7844  Secure_Token */\n      swap1\n      swap2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7845:7869  tokenIDOfBCA[_addressSD] */\n      swap1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":7832:7870  Secure_Token[tokenIDOfBCA[_addressSD]] */\n      dup2\n      lt\n      tag_419\n      jumpi\n      tag_419\n      tag_167\n      jump\t// in\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3248:4558  function setUser(uint256 _tokenId, address _addressUser) public virtual override{... */\n    tag_145:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3394:3413  ownerOfSD[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3394:3403  ownerOfSD */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3394:3413  ownerOfSD[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3417:3427  msg.sender */\n      caller\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3394:3427  ownerOfSD[_tokenId] == msg.sender */\n      eq\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3393:3489  (ownerOfSD[_tokenId] == msg.sender) && (Secure_Token[_tokenId].state >= States.engagedWithOwner) */\n      dup1\n      iszero\n      tag_426\n      jumpi\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3465:3488  States.engagedWithOwner */\n      0x01\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3433:3445  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3446:3454  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3433:3455  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_430\n      jumpi\n      tag_430\n      tag_167\n      jump\t// in\n    tag_430:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3433:3461  Secure_Token[_tokenId].state */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3433:3488  Secure_Token[_tokenId].state >= States.engagedWithOwner */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_433\n      jumpi\n      tag_433\n      tag_205\n      jump\t// in\n    tag_433:\n      lt\n      iszero\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3393:3489  (ownerOfSD[_tokenId] == msg.sender) && (Secure_Token[_tokenId].state >= States.engagedWithOwner) */\n    tag_426:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3385:3490  require((ownerOfSD[_tokenId] == msg.sender) && (Secure_Token[_tokenId].state >= States.engagedWithOwner)) */\n      tag_434\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_434:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3573:3588  block.timestamp */\n      timestamp\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3539:3551  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3552:3560  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3539:3561  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_436\n      jumpi\n      tag_436\n      tag_167\n      jump\t// in\n    tag_436:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3539:3569  Secure_Token[_tokenId].timeout */\n      0x07\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3504:3516  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3517:3525  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3504:3526  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_439\n      jumpi\n      tag_439\n      tag_167\n      jump\t// in\n    tag_439:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3504:3536  Secure_Token[_tokenId].timestamp */\n      0x06\n      add\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3504:3569  Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout */\n      tag_441\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_441:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3503:3588  (Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp */\n      gt\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3500:4552  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n      iszero\n      tag_442\n      jumpi\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3712:3713  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3671:3682  userBalance */\n      0x05\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3671:3711  userBalance[Secure_Token[_tokenId].user] */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3683:3695  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3696:3704  _tokenId */\n      dup6\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3683:3705  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_444\n      jumpi\n      tag_444\n      tag_167\n      jump\t// in\n    tag_444:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3683:3710  Secure_Token[_tokenId].user */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3683:3705  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap4\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3683:3710  Secure_Token[_tokenId].user */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3671:3711  userBalance[Secure_Token[_tokenId].user] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3671:3713  userBalance[Secure_Token[_tokenId].user]>0 */\n      gt\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3668:3861  if(userBalance[Secure_Token[_tokenId].user]>0){... */\n      iszero\n      tag_446\n      jumpi\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3804:3815  userBalance */\n      0x05\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3804:3844  userBalance[Secure_Token[_tokenId].user] */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3816:3828  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3829:3837  _tokenId */\n      dup5\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3816:3838  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_448\n      jumpi\n      tag_448\n      tag_167\n      jump\t// in\n    tag_448:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3816:3843  Secure_Token[_tokenId].user */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3816:3838  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap4\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3816:3843  Secure_Token[_tokenId].user */\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3804:3844  userBalance[Secure_Token[_tokenId].user] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      dup2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3804:3846  userBalance[Secure_Token[_tokenId].user]-- */\n      dup1\n      sload\n      swap2\n      tag_450\n      dup4\n      tag_247\n      jump\t// in\n    tag_450:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3668:3861  if(userBalance[Secure_Token[_tokenId].user]>0){... */\n    tag_446:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3942:3967  userBalance[_addressUser] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3942:3953  userBalance */\n      0x05\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3942:3967  userBalance[_addressUser] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3942:3969  userBalance[_addressUser]++ */\n      dup1\n      sload\n      swap2\n      tag_451\n      dup4\n      tag_249\n      jump\t// in\n    tag_451:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4060:4072  _addressUser */\n      dup1\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4030:4042  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4043:4051  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4030:4052  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_453\n      jumpi\n      tag_453\n      tag_167\n      jump\t// in\n    tag_453:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4030:4057  Secure_Token[_tokenId].user */\n      0x02\n      add\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4030:4072  Secure_Token[_tokenId].user = _addressUser */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4173:4194  States.waitingForUser */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4142:4154  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4155:4163  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4142:4164  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_456\n      jumpi\n      tag_456\n      tag_167\n      jump\t// in\n    tag_456:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4142:4170  Secure_Token[_tokenId].state */\n      0x02\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4142:4164  Secure_Token[_tokenId] */\n      0x08\n      swap1\n      swap3\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4142:4170  Secure_Token[_tokenId].state */\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4142:4194  Secure_Token[_tokenId].state = States.waitingForUser */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_459\n      jumpi\n      tag_459\n      tag_205\n      jump\t// in\n    tag_459:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4327:4328  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4288:4300  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4301:4309  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4288:4310  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_461\n      jumpi\n      tag_461\n      tag_167\n      jump\t// in\n    tag_461:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4288:4325  Secure_Token[_tokenId].dataEngagement */\n      0x05\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4288:4328  Secure_Token[_tokenId].dataEngagement =0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4376:4377  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4342:4354  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4355:4363  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4342:4364  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_464\n      jumpi\n      tag_464\n      tag_167\n      jump\t// in\n    tag_464:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4342:4373  Secure_Token[_tokenId].hashK_UD */\n      0x04\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4342:4377  Secure_Token[_tokenId].hashK_UD = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4418:4430  _addressUser */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4396:4431  UserAssigned(_tokenId,_addressUser) */\n      and\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4409:4417  _tokenId */\n      dup3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4396:4431  UserAssigned(_tokenId,_addressUser) */\n      0xa366111dc7688b9ffb71476107b8b733fd141e7b370cff8480c03f4ec4409cd7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":11478:11579  function approve(address _approved, uint256 _tokenId) public virtual override payable{... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3500:4552  if((Secure_Token[_tokenId].timestamp + Secure_Token[_tokenId].timeout) > block.timestamp){... */\n    tag_442:\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4498:4499  0 */\n      0x00\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4460:4472  Secure_Token */\n      0x06\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4473:4481  _tokenId */\n      dup4\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4460:4482  Secure_Token[_tokenId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_468\n      jumpi\n      tag_468\n      tag_167\n      jump\t// in\n    tag_468:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x08\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4460:4487  Secure_Token[_tokenId].user */\n      0x02\n      add\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4460:4500  Secure_Token[_tokenId].user = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4519:4541  TimeoutAlarm(_tokenId) */\n      mload(0x40)\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4532:4540  _tokenId */\n      dup4\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_a910d1b10f01c5ca37c4e89a96b75c29aa88c10448ae4d63673a5a7c342776b1\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":4519:4541  TimeoutAlarm(_tokenId) */\n      swap2\n      log2\n        /* \"ERC-3519 SmartNft/SmartNFT.sol\":3248:4558  function setUser(uint256 _tokenId, address _addressUser) public virtual override{... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_36:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_478:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":407:580   */\n    tag_473:\n        /* \"#utility.yul\":475:495   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":524:555   */\n      dup2\n      and\n        /* \"#utility.yul\":514:556   */\n      dup2\n      eq\n        /* \"#utility.yul\":504:574   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":567:568   */\n      dup1\n        /* \"#utility.yul\":560:572   */\n      revert\n        /* \"#utility.yul\":585:839   */\n    tag_42:\n        /* \"#utility.yul\":653:659   */\n      0x00\n        /* \"#utility.yul\":661:667   */\n      dup1\n        /* \"#utility.yul\":714:716   */\n      0x40\n        /* \"#utility.yul\":702:711   */\n      dup4\n        /* \"#utility.yul\":693:700   */\n      dup6\n        /* \"#utility.yul\":689:712   */\n      sub\n        /* \"#utility.yul\":685:717   */\n      slt\n        /* \"#utility.yul\":682:734   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":682:734   */\n    tag_483:\n        /* \"#utility.yul\":753:782   */\n      tag_484\n        /* \"#utility.yul\":772:781   */\n      dup4\n        /* \"#utility.yul\":753:782   */\n      tag_473\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":743:782   */\n      swap5\n        /* \"#utility.yul\":829:831   */\n      0x20\n        /* \"#utility.yul\":814:832   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":801:833   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":585:839   */\n      jump\t// out\n        /* \"#utility.yul\":844:1092   */\n    tag_47:\n        /* \"#utility.yul\":912:918   */\n      0x00\n        /* \"#utility.yul\":920:926   */\n      dup1\n        /* \"#utility.yul\":973:975   */\n      0x40\n        /* \"#utility.yul\":961:970   */\n      dup4\n        /* \"#utility.yul\":952:959   */\n      dup6\n        /* \"#utility.yul\":948:971   */\n      sub\n        /* \"#utility.yul\":944:976   */\n      slt\n        /* \"#utility.yul\":941:993   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":986:987   */\n      dup1\n        /* \"#utility.yul\":979:991   */\n      revert\n        /* \"#utility.yul\":941:993   */\n    tag_486:\n      pop\n      pop\n        /* \"#utility.yul\":1012:1035   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1082:1084   */\n      0x20\n        /* \"#utility.yul\":1067:1085   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1054:1086   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":844:1092   */\n      jump\t// out\n        /* \"#utility.yul\":1097:1283   */\n    tag_52:\n        /* \"#utility.yul\":1156:1162   */\n      0x00\n        /* \"#utility.yul\":1209:1211   */\n      0x20\n        /* \"#utility.yul\":1197:1206   */\n      dup3\n        /* \"#utility.yul\":1188:1195   */\n      dup5\n        /* \"#utility.yul\":1184:1207   */\n      sub\n        /* \"#utility.yul\":1180:1212   */\n      slt\n        /* \"#utility.yul\":1177:1229   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":1225:1226   */\n      0x00\n        /* \"#utility.yul\":1222:1223   */\n      dup1\n        /* \"#utility.yul\":1215:1227   */\n      revert\n        /* \"#utility.yul\":1177:1229   */\n    tag_488:\n        /* \"#utility.yul\":1248:1277   */\n      tag_489\n        /* \"#utility.yul\":1267:1276   */\n      dup3\n        /* \"#utility.yul\":1248:1277   */\n      tag_473\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":1238:1277   */\n      swap4\n        /* \"#utility.yul\":1097:1283   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1786   */\n    tag_59:\n        /* \"#utility.yul\":1547:1553   */\n      0x00\n        /* \"#utility.yul\":1555:1561   */\n      dup1\n        /* \"#utility.yul\":1563:1569   */\n      0x00\n        /* \"#utility.yul\":1616:1618   */\n      0x60\n        /* \"#utility.yul\":1604:1613   */\n      dup5\n        /* \"#utility.yul\":1595:1602   */\n      dup7\n        /* \"#utility.yul\":1591:1614   */\n      sub\n        /* \"#utility.yul\":1587:1619   */\n      slt\n        /* \"#utility.yul\":1584:1636   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":1632:1633   */\n      0x00\n        /* \"#utility.yul\":1629:1630   */\n      dup1\n        /* \"#utility.yul\":1622:1634   */\n      revert\n        /* \"#utility.yul\":1584:1636   */\n    tag_492:\n      pop\n      pop\n        /* \"#utility.yul\":1655:1678   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":1725:1727   */\n      0x20\n        /* \"#utility.yul\":1710:1728   */\n      dup4\n      add\n        /* \"#utility.yul\":1697:1729   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x40\n        /* \"#utility.yul\":1761:1779   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1470:1786   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2259:2587   */\n    tag_72:\n        /* \"#utility.yul\":2336:2342   */\n      0x00\n        /* \"#utility.yul\":2344:2350   */\n      dup1\n        /* \"#utility.yul\":2352:2358   */\n      0x00\n        /* \"#utility.yul\":2405:2407   */\n      0x60\n        /* \"#utility.yul\":2393:2402   */\n      dup5\n        /* \"#utility.yul\":2384:2391   */\n      dup7\n        /* \"#utility.yul\":2380:2403   */\n      sub\n        /* \"#utility.yul\":2376:2408   */\n      slt\n        /* \"#utility.yul\":2373:2425   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      dup1\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2373:2425   */\n    tag_495:\n        /* \"#utility.yul\":2444:2473   */\n      tag_496\n        /* \"#utility.yul\":2463:2472   */\n      dup5\n        /* \"#utility.yul\":2444:2473   */\n      tag_473\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2434:2473   */\n      swap3\n      pop\n        /* \"#utility.yul\":2492:2530   */\n      tag_497\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2515:2524   */\n      dup6\n        /* \"#utility.yul\":2511:2529   */\n      add\n        /* \"#utility.yul\":2492:2530   */\n      tag_473\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2482:2530   */\n      swap2\n      pop\n        /* \"#utility.yul\":2577:2579   */\n      0x40\n        /* \"#utility.yul\":2566:2575   */\n      dup5\n        /* \"#utility.yul\":2562:2580   */\n      add\n        /* \"#utility.yul\":2549:2581   */\n      calldataload\n        /* \"#utility.yul\":2539:2581   */\n      swap1\n      pop\n        /* \"#utility.yul\":2259:2587   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2784:3044   */\n    tag_90:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2913:2915   */\n      0x40\n        /* \"#utility.yul\":2901:2910   */\n      dup4\n        /* \"#utility.yul\":2892:2899   */\n      dup6\n        /* \"#utility.yul\":2888:2911   */\n      sub\n        /* \"#utility.yul\":2884:2916   */\n      slt\n        /* \"#utility.yul\":2881:2933   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":2929:2930   */\n      0x00\n        /* \"#utility.yul\":2926:2927   */\n      dup1\n        /* \"#utility.yul\":2919:2931   */\n      revert\n        /* \"#utility.yul\":2881:2933   */\n    tag_500:\n        /* \"#utility.yul\":2952:2981   */\n      tag_501\n        /* \"#utility.yul\":2971:2980   */\n      dup4\n        /* \"#utility.yul\":2952:2981   */\n      tag_473\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":2942:2981   */\n      swap2\n      pop\n        /* \"#utility.yul\":3000:3038   */\n      tag_502\n        /* \"#utility.yul\":3034:3036   */\n      0x20\n        /* \"#utility.yul\":3023:3032   */\n      dup5\n        /* \"#utility.yul\":3019:3037   */\n      add\n        /* \"#utility.yul\":3000:3038   */\n      tag_473\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":2990:3038   */\n      swap1\n      pop\n        /* \"#utility.yul\":2784:3044   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3049:3396   */\n    tag_111:\n        /* \"#utility.yul\":3114:3120   */\n      0x00\n        /* \"#utility.yul\":3122:3128   */\n      dup1\n        /* \"#utility.yul\":3175:3177   */\n      0x40\n        /* \"#utility.yul\":3163:3172   */\n      dup4\n        /* \"#utility.yul\":3154:3161   */\n      dup6\n        /* \"#utility.yul\":3150:3173   */\n      sub\n        /* \"#utility.yul\":3146:3178   */\n      slt\n        /* \"#utility.yul\":3143:3195   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":3191:3192   */\n      0x00\n        /* \"#utility.yul\":3188:3189   */\n      dup1\n        /* \"#utility.yul\":3181:3193   */\n      revert\n        /* \"#utility.yul\":3143:3195   */\n    tag_504:\n        /* \"#utility.yul\":3214:3243   */\n      tag_505\n        /* \"#utility.yul\":3233:3242   */\n      dup4\n        /* \"#utility.yul\":3214:3243   */\n      tag_473\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":3204:3243   */\n      swap2\n      pop\n        /* \"#utility.yul\":3293:3295   */\n      0x20\n        /* \"#utility.yul\":3282:3291   */\n      dup4\n        /* \"#utility.yul\":3278:3296   */\n      add\n        /* \"#utility.yul\":3265:3297   */\n      calldataload\n        /* \"#utility.yul\":3340:3345   */\n      dup1\n        /* \"#utility.yul\":3333:3346   */\n      iszero\n        /* \"#utility.yul\":3326:3347   */\n      iszero\n        /* \"#utility.yul\":3319:3324   */\n      dup2\n        /* \"#utility.yul\":3316:3348   */\n      eq\n        /* \"#utility.yul\":3306:3366   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":3362:3363   */\n      0x00\n        /* \"#utility.yul\":3359:3360   */\n      dup1\n        /* \"#utility.yul\":3352:3364   */\n      revert\n        /* \"#utility.yul\":3306:3366   */\n    tag_506:\n        /* \"#utility.yul\":3385:3390   */\n      dup1\n        /* \"#utility.yul\":3375:3390   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3049:3396   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3860:3987   */\n    tag_474:\n        /* \"#utility.yul\":3921:3931   */\n      0x4e487b71\n        /* \"#utility.yul\":3916:3919   */\n      0xe0\n        /* \"#utility.yul\":3912:3932   */\n      shl\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3902:3933   */\n      mstore\n        /* \"#utility.yul\":3952:3956   */\n      0x41\n        /* \"#utility.yul\":3949:3950   */\n      0x04\n        /* \"#utility.yul\":3942:3957   */\n      mstore\n        /* \"#utility.yul\":3976:3980   */\n      0x24\n        /* \"#utility.yul\":3973:3974   */\n      0x00\n        /* \"#utility.yul\":3966:3981   */\n      revert\n        /* \"#utility.yul\":3992:5130   */\n    tag_129:\n        /* \"#utility.yul\":4087:4093   */\n      0x00\n        /* \"#utility.yul\":4095:4101   */\n      dup1\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4164:4167   */\n      0x80\n        /* \"#utility.yul\":4152:4161   */\n      dup6\n        /* \"#utility.yul\":4143:4150   */\n      dup8\n        /* \"#utility.yul\":4139:4162   */\n      sub\n        /* \"#utility.yul\":4135:4168   */\n      slt\n        /* \"#utility.yul\":4132:4185   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":4181:4182   */\n      0x00\n        /* \"#utility.yul\":4178:4179   */\n      dup1\n        /* \"#utility.yul\":4171:4183   */\n      revert\n        /* \"#utility.yul\":4132:4185   */\n    tag_510:\n        /* \"#utility.yul\":4204:4233   */\n      tag_511\n        /* \"#utility.yul\":4223:4232   */\n      dup6\n        /* \"#utility.yul\":4204:4233   */\n      tag_473\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":4194:4233   */\n      swap4\n      pop\n        /* \"#utility.yul\":4252:4290   */\n      tag_512\n        /* \"#utility.yul\":4286:4288   */\n      0x20\n        /* \"#utility.yul\":4275:4284   */\n      dup7\n        /* \"#utility.yul\":4271:4289   */\n      add\n        /* \"#utility.yul\":4252:4290   */\n      tag_473\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4242:4290   */\n      swap3\n      pop\n        /* \"#utility.yul\":4337:4339   */\n      0x40\n        /* \"#utility.yul\":4326:4335   */\n      dup6\n        /* \"#utility.yul\":4322:4340   */\n      add\n        /* \"#utility.yul\":4309:4341   */\n      calldataload\n        /* \"#utility.yul\":4299:4341   */\n      swap2\n      pop\n        /* \"#utility.yul\":4392:4394   */\n      0x60\n        /* \"#utility.yul\":4381:4390   */\n      dup6\n        /* \"#utility.yul\":4377:4395   */\n      add\n        /* \"#utility.yul\":4364:4396   */\n      calldataload\n        /* \"#utility.yul\":4415:4433   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4456:4458   */\n      dup1\n        /* \"#utility.yul\":4448:4454   */\n      dup3\n        /* \"#utility.yul\":4445:4459   */\n      gt\n        /* \"#utility.yul\":4442:4476   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4469:4470   */\n      dup1\n        /* \"#utility.yul\":4462:4474   */\n      revert\n        /* \"#utility.yul\":4442:4476   */\n    tag_513:\n        /* \"#utility.yul\":4510:4516   */\n      dup2\n        /* \"#utility.yul\":4499:4508   */\n      dup8\n        /* \"#utility.yul\":4495:4517   */\n      add\n        /* \"#utility.yul\":4485:4517   */\n      swap2\n      pop\n        /* \"#utility.yul\":4555:4562   */\n      dup8\n        /* \"#utility.yul\":4548:4552   */\n      0x1f\n        /* \"#utility.yul\":4544:4546   */\n      dup4\n        /* \"#utility.yul\":4540:4553   */\n      add\n        /* \"#utility.yul\":4536:4563   */\n      slt\n        /* \"#utility.yul\":4526:4581   */\n      tag_514\n      jumpi\n        /* \"#utility.yul\":4577:4578   */\n      0x00\n        /* \"#utility.yul\":4574:4575   */\n      dup1\n        /* \"#utility.yul\":4567:4579   */\n      revert\n        /* \"#utility.yul\":4526:4581   */\n    tag_514:\n        /* \"#utility.yul\":4613:4615   */\n      dup2\n        /* \"#utility.yul\":4600:4616   */\n      calldataload\n        /* \"#utility.yul\":4635:4637   */\n      dup2\n        /* \"#utility.yul\":4631:4633   */\n      dup2\n        /* \"#utility.yul\":4628:4638   */\n      gt\n        /* \"#utility.yul\":4625:4661   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":4641:4659   */\n      tag_516\n      tag_474\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4716:4718   */\n      0x40\n        /* \"#utility.yul\":4710:4719   */\n      mload\n        /* \"#utility.yul\":4684:4686   */\n      0x1f\n        /* \"#utility.yul\":4770:4783   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4766:4788   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4790:4792   */\n      0x3f\n        /* \"#utility.yul\":4762:4793   */\n      add\n        /* \"#utility.yul\":4758:4798   */\n      and\n        /* \"#utility.yul\":4746:4799   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4814:4832   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4834:4856   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4811:4857   */\n      or\n        /* \"#utility.yul\":4808:4880   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":4860:4878   */\n      tag_518\n      tag_474\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":4900:4910   */\n      dup2\n        /* \"#utility.yul\":4896:4898   */\n      0x40\n        /* \"#utility.yul\":4889:4911   */\n      mstore\n        /* \"#utility.yul\":4935:4937   */\n      dup3\n        /* \"#utility.yul\":4927:4933   */\n      dup2\n        /* \"#utility.yul\":4920:4938   */\n      mstore\n        /* \"#utility.yul\":4975:4982   */\n      dup11\n        /* \"#utility.yul\":4970:4972   */\n      0x20\n        /* \"#utility.yul\":4965:4967   */\n      dup5\n        /* \"#utility.yul\":4961:4963   */\n      dup8\n        /* \"#utility.yul\":4957:4968   */\n      add\n        /* \"#utility.yul\":4953:4973   */\n      add\n        /* \"#utility.yul\":4950:4983   */\n      gt\n        /* \"#utility.yul\":4947:5000   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":4996:4997   */\n      0x00\n        /* \"#utility.yul\":4993:4994   */\n      dup1\n        /* \"#utility.yul\":4986:4998   */\n      revert\n        /* \"#utility.yul\":4947:5000   */\n    tag_519:\n        /* \"#utility.yul\":5052:5054   */\n      dup3\n        /* \"#utility.yul\":5047:5049   */\n      0x20\n        /* \"#utility.yul\":5043:5045   */\n      dup7\n        /* \"#utility.yul\":5039:5050   */\n      add\n        /* \"#utility.yul\":5034:5036   */\n      0x20\n        /* \"#utility.yul\":5026:5032   */\n      dup4\n        /* \"#utility.yul\":5022:5037   */\n      add\n        /* \"#utility.yul\":5009:5055   */\n      calldatacopy\n        /* \"#utility.yul\":5097:5098   */\n      0x00\n        /* \"#utility.yul\":5092:5094   */\n      0x20\n        /* \"#utility.yul\":5087:5089   */\n      dup5\n        /* \"#utility.yul\":5079:5085   */\n      dup4\n        /* \"#utility.yul\":5075:5090   */\n      add\n        /* \"#utility.yul\":5071:5095   */\n      add\n        /* \"#utility.yul\":5064:5099   */\n      mstore\n        /* \"#utility.yul\":5118:5124   */\n      dup1\n        /* \"#utility.yul\":5108:5124   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3992:5130   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5389   */\n    tag_144:\n        /* \"#utility.yul\":5203:5209   */\n      0x00\n        /* \"#utility.yul\":5211:5217   */\n      dup1\n        /* \"#utility.yul\":5264:5266   */\n      0x40\n        /* \"#utility.yul\":5252:5261   */\n      dup4\n        /* \"#utility.yul\":5243:5250   */\n      dup6\n        /* \"#utility.yul\":5239:5262   */\n      sub\n        /* \"#utility.yul\":5235:5267   */\n      slt\n        /* \"#utility.yul\":5232:5284   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":5280:5281   */\n      0x00\n        /* \"#utility.yul\":5277:5278   */\n      dup1\n        /* \"#utility.yul\":5270:5282   */\n      revert\n        /* \"#utility.yul\":5232:5284   */\n    tag_521:\n        /* \"#utility.yul\":5316:5325   */\n      dup3\n        /* \"#utility.yul\":5303:5326   */\n      calldataload\n        /* \"#utility.yul\":5293:5326   */\n      swap2\n      pop\n        /* \"#utility.yul\":5345:5383   */\n      tag_502\n        /* \"#utility.yul\":5379:5381   */\n      0x20\n        /* \"#utility.yul\":5368:5377   */\n      dup5\n        /* \"#utility.yul\":5364:5382   */\n      add\n        /* \"#utility.yul\":5345:5383   */\n      tag_473\n      jump\t// in\n        /* \"#utility.yul\":5394:5521   */\n    tag_167:\n        /* \"#utility.yul\":5455:5465   */\n      0x4e487b71\n        /* \"#utility.yul\":5450:5453   */\n      0xe0\n        /* \"#utility.yul\":5446:5466   */\n      shl\n        /* \"#utility.yul\":5443:5444   */\n      0x00\n        /* \"#utility.yul\":5436:5467   */\n      mstore\n        /* \"#utility.yul\":5486:5490   */\n      0x32\n        /* \"#utility.yul\":5483:5484   */\n      0x04\n        /* \"#utility.yul\":5476:5491   */\n      mstore\n        /* \"#utility.yul\":5510:5514   */\n      0x24\n        /* \"#utility.yul\":5507:5508   */\n      0x00\n        /* \"#utility.yul\":5500:5515   */\n      revert\n        /* \"#utility.yul\":5526:5653   */\n    tag_475:\n        /* \"#utility.yul\":5587:5597   */\n      0x4e487b71\n        /* \"#utility.yul\":5582:5585   */\n      0xe0\n        /* \"#utility.yul\":5578:5598   */\n      shl\n        /* \"#utility.yul\":5575:5576   */\n      0x00\n        /* \"#utility.yul\":5568:5599   */\n      mstore\n        /* \"#utility.yul\":5618:5622   */\n      0x11\n        /* \"#utility.yul\":5615:5616   */\n      0x04\n        /* \"#utility.yul\":5608:5623   */\n      mstore\n        /* \"#utility.yul\":5642:5646   */\n      0x24\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5632:5647   */\n      revert\n        /* \"#utility.yul\":5658:5783   */\n    tag_179:\n        /* \"#utility.yul\":5723:5732   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5744:5754   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5741:5777   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":5757:5775   */\n      tag_329\n      tag_475\n      jump\t// in\n        /* \"#utility.yul\":5788:5915   */\n    tag_205:\n        /* \"#utility.yul\":5849:5859   */\n      0x4e487b71\n        /* \"#utility.yul\":5844:5847   */\n      0xe0\n        /* \"#utility.yul\":5840:5860   */\n      shl\n        /* \"#utility.yul\":5837:5838   */\n      0x00\n        /* \"#utility.yul\":5830:5861   */\n      mstore\n        /* \"#utility.yul\":5880:5884   */\n      0x21\n        /* \"#utility.yul\":5877:5878   */\n      0x04\n        /* \"#utility.yul\":5870:5885   */\n      mstore\n        /* \"#utility.yul\":5904:5908   */\n      0x24\n        /* \"#utility.yul\":5901:5902   */\n      0x00\n        /* \"#utility.yul\":5894:5909   */\n      revert\n        /* \"#utility.yul\":5920:6056   */\n    tag_247:\n        /* \"#utility.yul\":5959:5962   */\n      0x00\n        /* \"#utility.yul\":5987:5992   */\n      dup2\n        /* \"#utility.yul\":5977:6016   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":5996:6014   */\n      tag_531\n      tag_475\n      jump\t// in\n    tag_531:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":6032:6050   */\n      add\n      swap1\n        /* \"#utility.yul\":5920:6056   */\n      jump\t// out\n        /* \"#utility.yul\":6061:6196   */\n    tag_249:\n        /* \"#utility.yul\":6100:6103   */\n      0x00\n        /* \"#utility.yul\":6121:6138   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6118:6161   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":6141:6159   */\n      tag_534\n      tag_475\n      jump\t// in\n    tag_534:\n      pop\n        /* \"#utility.yul\":6188:6189   */\n      0x01\n        /* \"#utility.yul\":6177:6190   */\n      add\n      swap1\n        /* \"#utility.yul\":6061:6196   */\n      jump\t// out\n    stop\n    data_a910d1b10f01c5ca37c4e89a96b75c29aa88c10448ae4d63673a5a7c342776b1 7e1636e7e3d95ceaa354ed9d47ea056b46cbcc0c448b26c6efaac0af33100305\n\n    auxdata: 0xa264697066735822122095cc83df2a544c815afabd879731c1654fe5190f557e37730f945ae733bc330d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_232": {
									"entryPoint": null,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:143:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b0319908116331782556001808055604080516101208101825284815260208101858152918101858152606082018681526080830187905260a0830187905260c0830187905260e08301879052610100830187905260068054958601815590965281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600890950294850180546001600160a01b0392831690881617815593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408601805491831691881691909117905590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d419094018054949091169484168517815594519094919390926001600160a81b03191617600160a01b83600381111561014a5761014a610189565b02179055506080820151816003015560a0820151816004015560c0820151816005015560e082015181600601556101008201518160070155505061019f565b634e487b7160e01b600052602160045260246000fd5b611b4b806101ae6000396000f3fe6080604052600436106101815760003560e01c80636ed776b2116100d1578063b88d4fde1161008a578063db4d295b11610064578063db4d295b146104e6578063e61e3a7614610506578063e985e9c51461053c578063f7b44a0f1461055757600080fd5b8063b88d4fde14610492578063c2f1f14a146104a6578063d1553258146104c657600080fd5b80636ed776b21461039357806370a08231146103b3578063a22cb465146103e9578063ad2661fc14610404578063adadaf4014610424578063b684bf0c1461044457600080fd5b8063219a58231161013e578063531f2bcd11610118578063531f2bcd146102ea5780635329c6811461030a5780635a9f86821461033a5780636352211e1461035d57600080fd5b8063219a58231461027157806323b872dd146102c457806342842e0e146102d757600080fd5b8063081812fc14610186578063095ea7b3146101c45780630b6df367146101d85780630cb22289146101f8578063128da6981461023c5780631c5be3d71461025c575b600080fd5b34801561019257600080fd5b506101a76101a13660046117e6565b50600090565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d66101d2366004611816565b5050565b005b3480156101e457600080fd5b506101d66101f3366004611840565b61059d565b34801561020457600080fd5b5061022e610213366004611862565b6001600160a01b031660009081526005602052604090205490565b6040519081526020016101bb565b34801561024857600080fd5b506101d6610257366004611884565b6105ed565b34801561026857600080fd5b506101d6610725565b34801561027d57600080fd5b5061029161028c3660046117e6565b610761565b604080516001600160a01b0395861681529385166020850152919093169082015260ff90911660608201526080016101bb565b6101d66102d23660046118b0565b6108ec565b6101d66102e53660046118b0565b610c00565b3480156102f657600080fd5b506101d66103053660046117e6565b610c0b565b34801561031657600080fd5b5061032a6103253660046117e6565b610d9b565b60405190151581526020016101bb565b34801561034657600080fd5b5061022e6103553660046118ec565b600092915050565b34801561036957600080fd5b506101a76103783660046117e6565b6000908152600260205260409020546001600160a01b031690565b34801561039f57600080fd5b5061022e6103ae3660046118ec565b610e8b565b3480156103bf57600080fd5b5061022e6103ce366004611862565b6001600160a01b031660009081526004602052604090205490565b3480156103f557600080fd5b506101d66101d236600461191f565b34801561041057600080fd5b506101d661041f3660046117e6565b6110c3565b34801561043057600080fd5b506101d661043f366004611884565b611253565b34801561045057600080fd5b5061046461045f366004611862565b611349565b604080516001600160a01b0395861681529490931660208501529183015260ff1660608201526080016101bb565b6101d66104a0366004611971565b50505050565b3480156104b257600080fd5b506101a76104c13660046117e6565b611461565b3480156104d257600080fd5b506101a76104e1366004611862565b611499565b3480156104f257600080fd5b506101d6610501366004611a4d565b6114c7565b34801561051257600080fd5b5061022e610521366004611862565b6001600160a01b031660009081526003602052604090205490565b34801561054857600080fd5b5061032a6103553660046118ec565b34801561056357600080fd5b506101a7610572366004611862565b6001600160a01b03908116600090815260036020908152604080832054835260029091529020541690565b6000828152600260205260409020546001600160a01b031633146105c057600080fd5b80600683815481106105d4576105d4611a70565b9060005260206000209060080201600701819055505050565b6000838152600260205260409020546001600160a01b0316331461061057600080fd5b426006848154811061062457610624611a70565b9060005260206000209060080201600701546006858154811061064957610649611a70565b9060005260206000209060080201600601546106659190611a9c565b11156106c257816006848154811061067f5761067f611a70565b90600052602060002090600802016005018190555080600684815481106106a8576106a8611a70565b906000526020600020906008020160030181905550505050565b6000600684815481106106d7576106d7611a70565b6000918252602082206008919091020160020180546001600160a01b0319166001600160a01b0393909316929092179091556040518491600080516020611af683398151915291a25b505050565b3360009081526003602052604090205442906006908154811061074a5761074a611a70565b906000526020600020906008020160060181905550565b600081815260026020526040812054600680546001600160a01b039092169291829182918690811061079557610795611a70565b906000526020600020906008020160020160009054906101000a90046001600160a01b03169250600685815481106107cf576107cf611a70565b600091825260208220600160089092020101546001600160a01b031692506006868154811061080057610800611a70565b906000526020600020906008020160020160149054906101000a900460ff16600381111561083057610830611aaf565b0361083d575060006108e5565b60016006868154811061085257610852611a70565b906000526020600020906008020160020160149054906101000a900460ff16600381111561088257610882611aaf565b0361088f575060016108e5565b6002600686815481106108a4576108a4611a70565b906000526020600020906008020160020160149054906101000a900460ff1660038111156108d4576108d4611aaf565b036108e1575060026108e5565b5060035b9193509193565b6000818152600260205260409020546001600160a01b03163314806109455750336001600160a01b03166006828154811061092957610929611a70565b60009182526020909120600890910201546001600160a01b0316145b61094e57600080fd5b6000818152600260205260409020546001600160a01b0384811691161461097457600080fd5b426006828154811061098857610988611a70565b906000526020600020906008020160070154600683815481106109ad576109ad611a70565b9060005260206000209060080201600601546109c99190611a9c565b1115610b9e57600081815260026020908152604080832080546001600160a01b0319166001600160a01b03878116919091179091558616835260049091528120805491610a1583611ac5565b90915550506001600160a01b0382166000908152600460205260408120805491610a3e83611adc565b9190505550600060068281548110610a5857610a58611a70565b906000526020600020906008020160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060068281548110610aa257610aa2611a70565b60009182526020909120600260089092020101805460ff60a01b1916600160a01b836003811115610ad557610ad5611aaf565b0217905550600060068281548110610aef57610aef611a70565b906000526020600020906008020160050181905550600060068281548110610b1957610b19611a70565b906000526020600020906008020160040181905550600060068281548110610b4357610b43611a70565b90600052602060002090600802016003018190555080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600060068281548110610bb357610bb3611a70565b6000918252602082206008919091020160020180546001600160a01b0319166001600160a01b0393909316929092179091556040518291600080516020611af683398151915291a2505050565b6107208383836108ec565b336000908152600360205260409020546006805482908110610c2f57610c2f611a70565b906000526020600020906008020160050154600003610c4d57600080fd5b8160068281548110610c6157610c61611a70565b90600052602060002090600802016004015414610c7d57600080fd5b600260068281548110610c9257610c92611a70565b906000526020600020906008020160020160149054906101000a900460ff166003811115610cc257610cc2611aaf565b14610ccc57600080fd5b600060068281548110610ce157610ce1611a70565b9060005260206000209060080201600501819055504260068281548110610d0a57610d0a611a70565b906000526020600020906008020160060181905550600360068281548110610d3457610d34611a70565b60009182526020909120600260089092020101805460ff60a01b1916600160a01b836003811115610d6757610d67611aaf565b021790555060405181907f0a74f4ab94fad84ffc38a74f59789bf53235489daa6ae3b0010116780c1588a490600090a25050565b6000818152600260205260408120546001600160a01b03163314610dbe57600080fd5b4260068381548110610dd257610dd2611a70565b90600052602060002090600802016007015460068481548110610df757610df7611a70565b906000526020600020906008020160060154610e139190611a9c565b1115610e2157506001919050565b600060068381548110610e3657610e36611a70565b6000918252602082206008919091020160020180546001600160a01b0319166001600160a01b0393909316929092179091556040518391600080516020611af683398151915291a2506000919050565b919050565b600080546001600160a01b03163314610ea357600080fd5b6001600160a01b0383166000908152600360205260409020546000036110a257604080516101208101825260008082526001600160a01b0386811660208401908152938301828152606084018381526080850184905260a0850184905260c085018490524260e08601526201518061010086015260068054600181018255945284517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600890950294850180549185166001600160a01b031992831617815596517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408601805491861691831691909117905591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d419094018054949093169184168217835551939493926001600160a81b03191617600160a01b836003811115610fef57610fef611aaf565b02179055506080820151600382015560a0820151600482015560c0820151600582015560e0820151600682015561010090910151600790910155600180546000918261103a83611adc565b909155506001600160a01b0385811660009081526003602090815260408083208590558483526002825280832080546001600160a01b03191694891694851790559282526004905290812080549293509061109483611adc565b9190505550809150506110bd565b506001600160a01b0382166000908152600360205260409020545b92915050565b3360009081526003602052604090205460068054829081106110e7576110e7611a70565b90600052602060002090600802016005015460000361110557600080fd5b816006828154811061111957611119611a70565b9060005260206000209060080201600301541461113557600080fd5b60006006828154811061114a5761114a611a70565b906000526020600020906008020160020160149054906101000a900460ff16600381111561117a5761117a611aaf565b1461118457600080fd5b60006006828154811061119957611199611a70565b90600052602060002090600802016005018190555042600682815481106111c2576111c2611a70565b9060005260206000209060080201600601819055506001600682815481106111ec576111ec611a70565b60009182526020909120600260089092020101805460ff60a01b1916600160a01b83600381111561121f5761121f611aaf565b021790555060405181907fd0582651f57ffea78c4fa2df3eaf04bf2ff083277a6c1145411c72b9c1dc474c90600090a25050565b336001600160a01b03166006848154811061127057611270611a70565b60009182526020909120600260089092020101546001600160a01b03161461129757600080fd5b42600684815481106112ab576112ab611a70565b906000526020600020906008020160070154600685815481106112d0576112d0611a70565b9060005260206000209060080201600601546112ec9190611a9c565b11156106c257816006848154811061130657611306611a70565b906000526020600020906008020160050181905550806006848154811061132f5761132f611a70565b906000526020600020906008020160040181905550505050565b6001600160a01b03808216600090815260036020908152604080832054808452600290925282205460068054919094169383918390811061138c5761138c611a70565b600091825260208220600260089092020101546001600160a01b03169350600683815481106113bd576113bd611a70565b906000526020600020906008020160020160149054906101000a900460ff1660038111156113ed576113ed611aaf565b036113fa575060006108e5565b60016006838154811061140f5761140f611a70565b906000526020600020906008020160020160149054906101000a900460ff16600381111561143f5761143f611aaf565b0361144c575060016108e5565b6002600683815481106108a4576108a4611a70565b60006006828154811061147657611476611a70565b60009182526020909120600260089092020101546001600160a01b031692915050565b6001600160a01b03811660009081526003602052604081205460068054909190811061147657611476611a70565b6000828152600260205260409020546001600160a01b03163314801561153057506001600683815481106114fd576114fd611a70565b906000526020600020906008020160020160149054906101000a900460ff16600381111561152d5761152d611aaf565b10155b61153957600080fd5b426006838154811061154d5761154d611a70565b9060005260206000209060080201600701546006848154811061157257611572611a70565b90600052602060002090600802016006015461158e9190611a9c565b111561178557600060056000600685815481106115ad576115ad611a70565b60009182526020808320600260089093020191909101546001600160a01b0316835282019290925260400190205411156116375760056000600684815481106115f8576115f8611a70565b60009182526020808320600260089093020191909101546001600160a01b03168352820192909252604001812080549161163183611ac5565b91905055505b6001600160a01b038116600090815260056020526040812080549161165b83611adc565b9190505550806006838154811061167457611674611a70565b906000526020600020906008020160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506002600683815481106116be576116be611a70565b60009182526020909120600260089092020101805460ff60a01b1916600160a01b8360038111156116f1576116f1611aaf565b021790555060006006838154811061170b5761170b611a70565b90600052602060002090600802016005018190555060006006838154811061173557611735611a70565b906000526020600020906008020160040181905550806001600160a01b0316827fa366111dc7688b9ffb71476107b8b733fd141e7b370cff8480c03f4ec4409cd760405160405180910390a35050565b60006006838154811061179a5761179a611a70565b6000918252602082206008919091020160020180546001600160a01b0319166001600160a01b0393909316929092179091556040518391600080516020611af683398151915291a25050565b6000602082840312156117f857600080fd5b5035919050565b80356001600160a01b0381168114610e8657600080fd5b6000806040838503121561182957600080fd5b611832836117ff565b946020939093013593505050565b6000806040838503121561185357600080fd5b50508035926020909101359150565b60006020828403121561187457600080fd5b61187d826117ff565b9392505050565b60008060006060848603121561189957600080fd5b505081359360208301359350604090920135919050565b6000806000606084860312156118c557600080fd5b6118ce846117ff565b92506118dc602085016117ff565b9150604084013590509250925092565b600080604083850312156118ff57600080fd5b611908836117ff565b9150611916602084016117ff565b90509250929050565b6000806040838503121561193257600080fd5b61193b836117ff565b91506020830135801515811461195057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561198757600080fd5b611990856117ff565b935061199e602086016117ff565b925060408501359150606085013567ffffffffffffffff808211156119c257600080fd5b818701915087601f8301126119d657600080fd5b8135818111156119e8576119e861195b565b604051601f8201601f19908116603f01168101908382118183101715611a1057611a1061195b565b816040528281528a6020848701011115611a2957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a6057600080fd5b82359150611916602084016117ff565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156110bd576110bd611a86565b634e487b7160e01b600052602160045260246000fd5b600081611ad457611ad4611a86565b506000190190565b600060018201611aee57611aee611a86565b506001019056fe7e1636e7e3d95ceaa354ed9d47ea056b46cbcc0c448b26c6efaac0af33100305a264697066735822122095cc83df2a544c815afabd879731c1654fe5190f557e37730f945ae733bc330d64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 DUP2 MSTORE SWAP2 DUP2 ADD DUP6 DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x80 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xA0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xC0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0xE0 DUP4 ADD DUP8 SWAP1 MSTORE PUSH2 0x100 DUP4 ADD DUP8 SWAP1 MSTORE PUSH1 0x6 DUP1 SLOAD SWAP6 DUP7 ADD DUP2 SSTORE SWAP1 SWAP7 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x8 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP9 AND OR DUP2 SSTORE SWAP4 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP7 ADD DUP1 SLOAD SWAP2 DUP4 AND SWAP2 DUP9 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP2 AND SWAP5 DUP5 AND DUP6 OR DUP2 SSTORE SWAP5 MLOAD SWAP1 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14A JUMPI PUSH2 0x14A PUSH2 0x189 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE POP POP PUSH2 0x19F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B4B DUP1 PUSH2 0x1AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6ED776B2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDB4D295B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDB4D295B EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xE61E3A76 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xF7B44A0F EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xC2F1F14A EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xD1553258 EQ PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6ED776B2 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xAD2661FC EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xADADAF40 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xB684BF0C EQ PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x219A5823 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x531F2BCD GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x531F2BCD EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x5329C681 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x5A9F8682 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x219A5823 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xB6DF367 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xCB22289 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x128DA698 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x1C5BE3D7 EQ PUSH2 0x25C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1816 JUMP JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0xC00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x10C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1499 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x14C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5D4 JUMPI PUSH2 0x5D4 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x624 JUMPI PUSH2 0x624 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0x6C2 JUMPI DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x67F JUMPI PUSH2 0x67F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6D7 JUMPI PUSH2 0x6D7 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 PUSH1 0x6 SWAP1 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI PUSH2 0x74A PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x795 JUMPI PUSH2 0x795 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x7CF JUMPI PUSH2 0x7CF PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x800 JUMPI PUSH2 0x800 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x830 JUMPI PUSH2 0x830 PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x83D JUMPI POP PUSH1 0x0 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x882 JUMPI PUSH2 0x882 PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x88F JUMPI POP PUSH1 0x1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x8D4 PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x8E1 JUMPI POP PUSH1 0x2 PUSH2 0x8E5 JUMP JUMPDEST POP PUSH1 0x3 JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x945 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x988 JUMPI PUSH2 0x988 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9AD JUMPI PUSH2 0x9AD PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP7 AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA15 DUP4 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA3E DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAD5 JUMPI PUSH2 0xAD5 PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB19 JUMPI PUSH2 0xB19 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB43 JUMPI PUSH2 0xB43 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x720 DUP4 DUP4 DUP4 PUSH2 0x8EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xC2F JUMPI PUSH2 0xC2F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC61 JUMPI PUSH2 0xC61 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD SLOAD EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x1AAF JUMP JUMPDEST EQ PUSH2 0xCCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCE1 JUMPI PUSH2 0xCE1 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0A JUMPI PUSH2 0xD0A PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD67 JUMPI PUSH2 0xD67 PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xA74F4AB94FAD84FFC38A74F59789BF53235489DAA6AE3B0010116780C1588A4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDD2 JUMPI PUSH2 0xDD2 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDF7 JUMPI PUSH2 0xDF7 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0xE21 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0x10A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP4 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP6 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0xE0 DUP7 ADD MSTORE PUSH3 0x15180 PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP5 MSTORE DUP5 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x8 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD SWAP2 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP2 SSTORE SWAP7 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP7 ADD DUP1 SLOAD SWAP2 DUP7 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP4 AND SWAP2 DUP5 AND DUP3 OR DUP4 SSTORE MLOAD SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFEF PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x103A DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP10 AND SWAP5 DUP6 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x1094 DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP PUSH2 0x10BD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x1105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1119 JUMPI PUSH2 0x1119 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD SLOAD EQ PUSH2 0x1135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x114A JUMPI PUSH2 0x114A PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x117A JUMPI PUSH2 0x117A PUSH2 0x1AAF JUMP JUMPDEST EQ PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1199 JUMPI PUSH2 0x1199 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11EC JUMPI PUSH2 0x11EC PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x121F JUMPI PUSH2 0x121F PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD0582651F57FFEA78C4FA2DF3EAF04BF2FF083277A6C1145411C72B9C1DC474C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1270 JUMPI PUSH2 0x1270 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12AB JUMPI PUSH2 0x12AB PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12D0 JUMPI PUSH2 0x12D0 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0x6C2 JUMPI DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1306 JUMPI PUSH2 0x1306 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x132F JUMPI PUSH2 0x132F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP4 DUP4 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13BD JUMPI PUSH2 0x13BD PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13ED PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x13FA JUMPI POP PUSH1 0x0 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x140F JUMPI PUSH2 0x140F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143F PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x144C JUMPI POP PUSH1 0x1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1476 JUMPI PUSH2 0x1476 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1476 JUMPI PUSH2 0x1476 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1530 JUMPI POP PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14FD JUMPI PUSH2 0x14FD PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152D JUMPI PUSH2 0x152D PUSH2 0x1AAF JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x154D JUMPI PUSH2 0x154D PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x158E SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0x1785 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x15AD JUMPI PUSH2 0x15AD PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15F8 JUMPI PUSH2 0x15F8 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1631 DUP4 PUSH2 0x1AC5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x165B DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1674 JUMPI PUSH2 0x1674 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16BE JUMPI PUSH2 0x16BE PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F1 JUMPI PUSH2 0x16F1 PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x170B JUMPI PUSH2 0x170B PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1735 JUMPI PUSH2 0x1735 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0xA366111DC7688B9FFB71476107B8B733FD141E7B370CFF8480C03F4EC4409CD7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x179A JUMPI PUSH2 0x179A PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1832 DUP4 PUSH2 0x17FF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187D DUP3 PUSH2 0x17FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18CE DUP5 PUSH2 0x17FF JUMP JUMPDEST SWAP3 POP PUSH2 0x18DC PUSH1 0x20 DUP6 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1908 DUP4 PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1916 PUSH1 0x20 DUP5 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193B DUP4 PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1990 DUP6 PUSH2 0x17FF JUMP JUMPDEST SWAP4 POP PUSH2 0x199E PUSH1 0x20 DUP7 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x19E8 JUMPI PUSH2 0x19E8 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A10 PUSH2 0x195B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1916 PUSH1 0x20 DUP5 ADD PUSH2 0x17FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x1A86 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1AD4 JUMPI PUSH2 0x1AD4 PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1AEE JUMPI PUSH2 0x1AEE PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID PUSH31 0x1636E7E3D95CEAA354ED9D47EA056B46CBCC0C448B26C6EFAAC0AF33100305 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xCC DUP4 0xDF 0x2A SLOAD 0x4C DUP2 GAS STATICCALL 0xBD DUP8 SWAP8 BALANCE 0xC1 PUSH6 0x4FE5190F557E CALLDATACOPY PUSH20 0xF945AE733BC330D64736F6C6343000811003300 ",
							"sourceMap": "131:12549:1:-:0;;;2061:194;;;;;;;;;-1:-1:-1;2085:12:1;:25;;-1:-1:-1;;;;;;2085:25:1;;;2100:10;2085:25;;;-1:-1:-1;2120:16:1;;;2164:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2146:12;:101;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2146:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2164:82;;2146:101;;;;-1:-1:-1;;;;;;2146:101:1;;-1:-1:-1;;;2146:101:1;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;131:12549;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;14:127;131:12549:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@approve_1132": {
									"entryPoint": null,
									"id": 1132,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_950": {
									"entryPoint": null,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkTimeout_1213": {
									"entryPoint": 3483,
									"id": 1213,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createToken_312": {
									"entryPoint": 3723,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_1150": {
									"entryPoint": null,
									"id": 1150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getInfoTokenFromBCA_936": {
									"entryPoint": 4937,
									"id": 936,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getInfoToken_859": {
									"entryPoint": 1889,
									"id": 859,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@isApprovedForAll_1161": {
									"entryPoint": null,
									"id": 1161,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ownerEngagement_560": {
									"entryPoint": 4291,
									"id": 560,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ownerOfFromBCA_724": {
									"entryPoint": null,
									"id": 724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_977": {
									"entryPoint": null,
									"id": 977,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_994": {
									"entryPoint": 3072,
									"id": 994,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_1141": {
									"entryPoint": null,
									"id": 1141,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTimeout_1254": {
									"entryPoint": 1437,
									"id": 1254,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setUser_427": {
									"entryPoint": 5319,
									"id": 427,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startOwnerEngagement_491": {
									"entryPoint": 1517,
									"id": 491,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startUserEngagement_625": {
									"entryPoint": 4691,
									"id": 625,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenFromBCA_708": {
									"entryPoint": null,
									"id": 708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1123": {
									"entryPoint": 2284,
									"id": 1123,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateTimestamp_1229": {
									"entryPoint": 1829,
									"id": 1229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userBalanceOfAnOwner_781": {
									"entryPoint": null,
									"id": 781,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@userBalanceOf_770": {
									"entryPoint": null,
									"id": 770,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@userEngagement_694": {
									"entryPoint": 3083,
									"id": 694,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userOfFromBCA_756": {
									"entryPoint": 5273,
									"id": 756,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@userOf_739": {
									"entryPoint": 5217,
									"id": 739,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint8__to_t_address_t_address_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint8__to_t_address_t_address_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6198:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "383:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "392:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:3",
														"type": ""
													}
												],
												"src": "199:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "456:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "466:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "488:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "475:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "475:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "466:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "558:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "570:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "517:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "528:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "543:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "548:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "539:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "539:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "552:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "535:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "535:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "524:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "524:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "514:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "507:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:50:3"
															},
															"nodeType": "YulIf",
															"src": "504:70:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "435:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "446:5:3",
														"type": ""
													}
												],
												"src": "407:173:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "672:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "693:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "702:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "689:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "685:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:32:3"
															},
															"nodeType": "YulIf",
															"src": "682:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "743:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "772:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "753:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "791:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "829:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "814:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "801:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "791:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "630:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "641:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "653:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "661:6:3",
														"type": ""
													}
												],
												"src": "585:254:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "931:161:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "952:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "961:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:32:3"
															},
															"nodeType": "YulIf",
															"src": "941:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1002:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1025:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1012:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1002:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1044:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1071:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1082:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1067:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1067:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1054:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "889:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "900:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "912:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "920:6:3",
														"type": ""
													}
												],
												"src": "844:248:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1167:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1213:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1222:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1225:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1215:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1215:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1197:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1184:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1180:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1180:32:3"
															},
															"nodeType": "YulIf",
															"src": "1177:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1238:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1267:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1248:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1238:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1133:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1144:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1156:6:3",
														"type": ""
													}
												],
												"src": "1097:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1411:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1452:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1434:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1434:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1369:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1380:4:3",
														"type": ""
													}
												],
												"src": "1288:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1574:212:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1620:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1629:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1632:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1622:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1622:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1622:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1595:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1604:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1591:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1591:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1616:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1587:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:32:3"
															},
															"nodeType": "YulIf",
															"src": "1584:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1645:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1668:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1655:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1655:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1687:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1714:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1725:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1710:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1697:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1738:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1765:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1776:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1761:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1748:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1524:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1535:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1547:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1555:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1563:6:3",
														"type": ""
													}
												],
												"src": "1470:316:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1972:282:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1982:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1994:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1982:4:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2018:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2041:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2032:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2045:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2022:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2063:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2078:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2086:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2074:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2074:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2110:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2121:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2130:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2138:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2126:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2126:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2099:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2099:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2173:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "2182:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2190:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2151:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2151:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2214:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2225:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "2234:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2242:4:3",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2230:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2230:17:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2203:45:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint8__to_t_address_t_address_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1917:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1928:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1936:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1944:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1952:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1963:4:3",
														"type": ""
													}
												],
												"src": "1791:463:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2363:224:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2409:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2384:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2380:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:32:3"
															},
															"nodeType": "YulIf",
															"src": "2373:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2434:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2444:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2482:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2515:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2526:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2511:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2492:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2539:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2577:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2562:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2549:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2539:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2313:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2324:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2336:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2344:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2352:6:3",
														"type": ""
													}
												],
												"src": "2259:328:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2697:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2709:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2720:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2697:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2739:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2757:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2757:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2750:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2732:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2732:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2656:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2667:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2678:4:3",
														"type": ""
													}
												],
												"src": "2592:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2871:173:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2917:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2926:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2929:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2919:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2919:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2892:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2901:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2888:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2913:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:32:3"
															},
															"nodeType": "YulIf",
															"src": "2881:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2942:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2971:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2952:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2990:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3023:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3034:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3000:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2829:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2840:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2852:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2860:6:3",
														"type": ""
													}
												],
												"src": "2784:260:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3133:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3179:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3188:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3191:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3181:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3181:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3181:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3154:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3175:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3146:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:32:3"
															},
															"nodeType": "YulIf",
															"src": "3143:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3204:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3233:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3214:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:45:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3282:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3293:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3278:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3265:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3265:32:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3256:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3350:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3359:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3352:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3352:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3319:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3340:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3333:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3333:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3326:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3326:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3316:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3316:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3309:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:40:3"
															},
															"nodeType": "YulIf",
															"src": "3306:60:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3385:5:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3091:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3102:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3114:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3122:6:3",
														"type": ""
													}
												],
												"src": "3049:347:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:273:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3592:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3604:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3600:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3592:4:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3628:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3646:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3651:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3655:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3638:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3632:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3673:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3688:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3696:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3684:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3684:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3740:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3748:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3736:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3709:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3772:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3783:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3788:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3761:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3761:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3815:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3826:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3811:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3811:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "3835:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3843:4:3",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3831:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3831:17:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3804:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:45:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3804:45:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint8__to_t_address_t_address_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3527:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3538:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3546:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3554:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3562:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3573:4:3",
														"type": ""
													}
												],
												"src": "3401:454:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3892:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3909:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3916:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3921:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3902:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3949:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3952:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3942:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3973:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3976:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3966:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3966:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3966:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3860:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4122:1008:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4169:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4178:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4181:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4171:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4171:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4171:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4143:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4152:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4164:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:33:3"
															},
															"nodeType": "YulIf",
															"src": "4132:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4194:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4223:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4204:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4194:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4242:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4275:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4286:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4271:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4271:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4252:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4252:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4299:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4326:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4337:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4309:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4309:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4299:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4350:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4392:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4364:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:32:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4354:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4405:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4415:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4409:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4460:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4469:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4472:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4462:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4462:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4462:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4448:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4456:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4445:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:14:3"
															},
															"nodeType": "YulIf",
															"src": "4442:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4485:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4499:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4510:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4495:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4489:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4565:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4574:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4577:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4567:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4567:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4567:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4544:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4548:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4540:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4540:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4555:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4536:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4536:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:35:3"
															},
															"nodeType": "YulIf",
															"src": "4526:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4590:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4613:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4600:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4594:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4641:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4631:2:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4635:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4628:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:10:3"
															},
															"nodeType": "YulIf",
															"src": "4625:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4670:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:7:3"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4674:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4696:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4716:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4710:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4700:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4728:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4750:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4774:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4778:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4770:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4770:13:3"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4785:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4766:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4766:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4790:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4762:31:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4795:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4758:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4746:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4732:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4858:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4860:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4860:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4817:10:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4829:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4814:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4837:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4849:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4834:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4834:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4811:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:46:3"
															},
															"nodeType": "YulIf",
															"src": "4808:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4896:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4900:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4889:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4927:6:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4935:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4920:18:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4984:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4993:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4996:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4986:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4986:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4986:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4961:2:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4965:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4957:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4957:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4970:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4953:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4953:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4975:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4950:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:33:3"
															},
															"nodeType": "YulIf",
															"src": "4947:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5026:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5034:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5022:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5022:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5043:2:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5047:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5039:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5039:11:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5052:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5009:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5009:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5009:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "5079:6:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5087:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5075:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5075:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5071:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5064:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5064:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5108:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5118:6:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4064:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4075:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4087:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4095:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4103:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4111:6:3",
														"type": ""
													}
												],
												"src": "3992:1138:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5222:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5268:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5277:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5280:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5270:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5270:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5243:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5264:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5235:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:32:3"
															},
															"nodeType": "YulIf",
															"src": "5232:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5293:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5316:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5303:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5335:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5368:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5379:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5364:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5364:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5345:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5345:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5180:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5191:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5203:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5211:6:3",
														"type": ""
													}
												],
												"src": "5135:254:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5426:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5443:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5450:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5455:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5446:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5446:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5436:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5436:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5483:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5486:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5476:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5476:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5507:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5510:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5394:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5558:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5575:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5582:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5587:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5578:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5578:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5568:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5568:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5568:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5615:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5618:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5608:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5608:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5608:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5639:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5632:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5632:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5526:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5706:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5716:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5727:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5730:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5723:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5755:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5757:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5757:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5757:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5747:1:3"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5750:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5744:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:10:3"
															},
															"nodeType": "YulIf",
															"src": "5741:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5689:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5692:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5698:3:3",
														"type": ""
													}
												],
												"src": "5658:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5820:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5849:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5840:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5840:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5830:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5830:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5830:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5880:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5901:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5894:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5894:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "5788:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5967:89:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5994:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5996:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5996:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5996:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5987:5:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5980:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5980:13:3"
															},
															"nodeType": "YulIf",
															"src": "5977:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6025:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6036:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6047:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6043:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6043:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6032:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:18:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6025:3:3"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5949:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5959:3:3",
														"type": ""
													}
												],
												"src": "5920:136:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6108:88:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6139:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6141:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6141:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6141:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6135:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6131:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6131:6:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6121:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6121:17:3"
															},
															"nodeType": "YulIf",
															"src": "6118:43:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6170:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6181:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6188:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6177:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6090:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6100:3:3",
														"type": ""
													}
												],
												"src": "6061:135:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint8__to_t_address_t_address_t_address_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint8__to_t_address_t_address_t_uint256_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6ED776B2 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDB4D295B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDB4D295B EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xE61E3A76 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xF7B44A0F EQ PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0xC2F1F14A EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xD1553258 EQ PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6ED776B2 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xAD2661FC EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xADADAF40 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xB684BF0C EQ PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x219A5823 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x531F2BCD GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x531F2BCD EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x5329C681 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x5A9F8682 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x219A5823 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xB6DF367 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xCB22289 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x128DA698 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x1C5BE3D7 EQ PUSH2 0x25C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1816 JUMP JUMPDEST POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0xC00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x10C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x1884 JUMP JUMPDEST PUSH2 0x1253 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x4A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1971 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x1499 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4D JUMP JUMPDEST PUSH2 0x14C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x521 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32A PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A7 PUSH2 0x572 CALLDATASIZE PUSH1 0x4 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5D4 JUMPI PUSH2 0x5D4 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x624 JUMPI PUSH2 0x624 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0x6C2 JUMPI DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x67F JUMPI PUSH2 0x67F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6D7 JUMPI PUSH2 0x6D7 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 PUSH1 0x6 SWAP1 DUP2 SLOAD DUP2 LT PUSH2 0x74A JUMPI PUSH2 0x74A PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x795 JUMPI PUSH2 0x795 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x7CF JUMPI PUSH2 0x7CF PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x800 JUMPI PUSH2 0x800 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x830 JUMPI PUSH2 0x830 PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x83D JUMPI POP PUSH1 0x0 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x882 JUMPI PUSH2 0x882 PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x88F JUMPI POP PUSH1 0x1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8D4 JUMPI PUSH2 0x8D4 PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x8E1 JUMPI POP PUSH1 0x2 PUSH2 0x8E5 JUMP JUMPDEST POP PUSH1 0x3 JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x945 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x988 JUMPI PUSH2 0x988 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9AD JUMPI PUSH2 0x9AD PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x9C9 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0xB9E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP7 AND DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA15 DUP4 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0xA3E DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAD5 JUMPI PUSH2 0xAD5 PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAEF JUMPI PUSH2 0xAEF PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB19 JUMPI PUSH2 0xB19 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB43 JUMPI PUSH2 0xB43 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x720 DUP4 DUP4 DUP4 PUSH2 0x8EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xC2F JUMPI PUSH2 0xC2F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC61 JUMPI PUSH2 0xC61 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD SLOAD EQ PUSH2 0xC7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC92 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x1AAF JUMP JUMPDEST EQ PUSH2 0xCCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCE1 JUMPI PUSH2 0xCE1 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD0A JUMPI PUSH2 0xD0A PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD67 JUMPI PUSH2 0xD67 PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xA74F4AB94FAD84FFC38A74F59789BF53235489DAA6AE3B0010116780C1588A4 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDD2 JUMPI PUSH2 0xDD2 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xDF7 JUMPI PUSH2 0xDF7 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0xE13 SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0xE21 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x0 SUB PUSH2 0x10A2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0x120 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP4 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP6 ADD DUP5 SWAP1 MSTORE TIMESTAMP PUSH1 0xE0 DUP7 ADD MSTORE PUSH3 0x15180 PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP5 MSTORE DUP5 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x8 SWAP1 SWAP6 MUL SWAP5 DUP6 ADD DUP1 SLOAD SWAP2 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP2 SSTORE SWAP7 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP7 ADD DUP1 SLOAD SWAP2 DUP7 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP5 SWAP1 SWAP4 AND SWAP2 DUP5 AND DUP3 OR DUP4 SSTORE MLOAD SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFEF JUMPI PUSH2 0xFEF PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x100 SWAP1 SWAP2 ADD MLOAD PUSH1 0x7 SWAP1 SWAP2 ADD SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x103A DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP10 AND SWAP5 DUP6 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x1094 DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP PUSH2 0x10BD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x10E7 JUMPI PUSH2 0x10E7 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0x0 SUB PUSH2 0x1105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1119 JUMPI PUSH2 0x1119 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x3 ADD SLOAD EQ PUSH2 0x1135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x114A JUMPI PUSH2 0x114A PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x117A JUMPI PUSH2 0x117A PUSH2 0x1AAF JUMP JUMPDEST EQ PUSH2 0x1184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1199 JUMPI PUSH2 0x1199 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C2 JUMPI PUSH2 0x11C2 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11EC JUMPI PUSH2 0x11EC PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x121F JUMPI PUSH2 0x121F PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD0582651F57FFEA78C4FA2DF3EAF04BF2FF083277A6C1145411C72B9C1DC474C SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1270 JUMPI PUSH2 0x1270 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12AB JUMPI PUSH2 0x12AB PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x12D0 JUMPI PUSH2 0x12D0 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0x6C2 JUMPI DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1306 JUMPI PUSH2 0x1306 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x132F JUMPI PUSH2 0x132F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP4 DUP4 SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x138C JUMPI PUSH2 0x138C PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13BD JUMPI PUSH2 0x13BD PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13ED PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x13FA JUMPI POP PUSH1 0x0 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x140F JUMPI PUSH2 0x140F PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143F PUSH2 0x1AAF JUMP JUMPDEST SUB PUSH2 0x144C JUMPI POP PUSH1 0x1 PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1476 JUMPI PUSH2 0x1476 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP2 LT PUSH2 0x1476 JUMPI PUSH2 0x1476 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x1530 JUMPI POP PUSH1 0x1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x14FD JUMPI PUSH2 0x14FD PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152D JUMPI PUSH2 0x152D PUSH2 0x1AAF JUMP JUMPDEST LT ISZERO JUMPDEST PUSH2 0x1539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x154D JUMPI PUSH2 0x154D PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x7 ADD SLOAD PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x158E SWAP2 SWAP1 PUSH2 0x1A9C JUMP JUMPDEST GT ISZERO PUSH2 0x1785 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x15AD JUMPI PUSH2 0x15AD PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x15F8 JUMPI PUSH2 0x15F8 PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP4 MUL ADD SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1631 DUP4 PUSH2 0x1AC5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x165B DUP4 PUSH2 0x1ADC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1674 JUMPI PUSH2 0x1674 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x16BE JUMPI PUSH2 0x16BE PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x8 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16F1 JUMPI PUSH2 0x16F1 PUSH2 0x1AAF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x170B JUMPI PUSH2 0x170B PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1735 JUMPI PUSH2 0x1735 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0xA366111DC7688B9FFB71476107B8B733FD141E7B370CFF8480C03F4EC4409CD7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x179A JUMPI PUSH2 0x179A PUSH2 0x1A70 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x8 SWAP2 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AF6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1832 DUP4 PUSH2 0x17FF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x187D DUP3 PUSH2 0x17FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1899 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18CE DUP5 PUSH2 0x17FF JUMP JUMPDEST SWAP3 POP PUSH2 0x18DC PUSH1 0x20 DUP6 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1908 DUP4 PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH2 0x1916 PUSH1 0x20 DUP5 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193B DUP4 PUSH2 0x17FF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1990 DUP6 PUSH2 0x17FF JUMP JUMPDEST SWAP4 POP PUSH2 0x199E PUSH1 0x20 DUP7 ADD PUSH2 0x17FF JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x19E8 JUMPI PUSH2 0x19E8 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A10 PUSH2 0x195B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1A29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1916 PUSH1 0x20 DUP5 ADD PUSH2 0x17FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x10BD JUMPI PUSH2 0x10BD PUSH2 0x1A86 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1AD4 JUMPI PUSH2 0x1AD4 PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1AEE JUMPI PUSH2 0x1AEE PUSH2 0x1A86 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID PUSH31 0x1636E7E3D95CEAA354ED9D47EA056B46CBCC0C448B26C6EFAAC0AF33100305 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xCC DUP4 0xDF 0x2A SLOAD 0x4C DUP2 GAS STATICCALL 0xBD DUP8 SWAP8 BALANCE 0xC1 PUSH6 0x4FE5190F557E CALLDATACOPY PUSH20 0xF945AE733BC330D64736F6C6343000811003300 ",
							"sourceMap": "131:12549:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11692:101;;;;;;;;;;-1:-1:-1;11692:101:1;;;;;:::i;:::-;-1:-1:-1;11769:7:1;;11692:101;;;;-1:-1:-1;;;;;363:32:3;;;345:51;;333:2;318:18;11692:101:1;;;;;;;;11478;;;;;;:::i;:::-;;;;;;12489:189;;;;;;;;;;-1:-1:-1;12489:189:1;;;;;:::i;:::-;;:::i;7896:141::-;;;;;;;;;;-1:-1:-1;7896:141:1;;;;;:::i;:::-;-1:-1:-1;;;;;8004:25:1;7979:7;8004:25;;;:11;:25;;;;;;;7896:141;;;;1434:25:3;;;1422:2;1407:18;7896:141:1;1288:177:3;4568:588:1;;;;;;;;;;-1:-1:-1;4568:588:1;;;;;:::i;:::-;;:::i;12346:133::-;;;;;;;;;;;;;:::i;8200:818::-;;;;;;;;;;-1:-1:-1;8200:818:1;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2074:15:3;;;2056:34;;2126:15;;;2121:2;2106:18;;2099:43;2178:15;;;;2158:18;;;2151:43;2242:4;2230:17;;;2225:2;2210:18;;2203:45;2005:3;1990:19;8200:818:1;1791:463:3;10437:1035:1;;;;;;:::i;:::-;;:::i;10277:154::-;;;;;;:::i;:::-;;:::i;6516:745::-;;;;;;;;;;-1:-1:-1;6516:745:1;;;;;:::i;:::-;;:::i;11929:407::-;;;;;;;;;;-1:-1:-1;11929:407:1;;;;;:::i;:::-;;:::i;:::-;;;2757:14:3;;2750:22;2732:41;;2720:2;2705:18;11929:407:1;2592:187:3;8047:143:1;;;;;;;;;;-1:-1:-1;8047:143:1;;;;;:::i;:::-;8160:7;8047:143;;;;;10002:125;;;;;;;;;;-1:-1:-1;10002:125:1;;;;;:::i;:::-;10075:7;10100:19;;;:9;:19;;;;;;-1:-1:-1;;;;;10100:19:1;;10002:125;2265:977;;;;;;;;;;-1:-1:-1;2265:977:1;;;;;:::i;:::-;;:::i;9866:126::-;;;;;;;;;;-1:-1:-1;9866:126:1;;;;;:::i;:::-;-1:-1:-1;;;;;9964:20:1;9939:7;9964:20;;;:12;:20;;;;;;;9866:126;11585:101;;;;;;;;;;-1:-1:-1;11585:101:1;;;;;:::i;5166:752::-;;;;;;;;;;-1:-1:-1;5166:752:1;;;;;:::i;:::-;;:::i;5928:578::-;;;;;;;;;;-1:-1:-1;5928:578:1;;;;;:::i;:::-;;:::i;9028:828::-;;;;;;;;;;-1:-1:-1;9028:828:1;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3684:15:3;;;3666:34;;3736:15;;;;3731:2;3716:18;;3709:43;3768:18;;;3761:34;3843:4;3831:17;3826:2;3811:18;;3804:45;3615:3;3600:19;9028:828:1;3401:454:3;10133:138:1;;;;;;:::i;:::-;;;;;;7583:133;;;;;;;;;;-1:-1:-1;7583:133:1;;;;;:::i;:::-;;:::i;7726:157::-;;;;;;;;;;-1:-1:-1;7726:157:1;;;;;:::i;:::-;;:::i;3248:1310::-;;;;;;;;;;-1:-1:-1;3248:1310:1;;;;;:::i;:::-;;:::i;7276:137::-;;;;;;;;;;-1:-1:-1;7276:137:1;;;;;:::i;:::-;-1:-1:-1;;;;;7381:24:1;7356:7;7381:24;;;:12;:24;;;;;;;7276:137;11799:120;;;;;;;;;;-1:-1:-1;11799:120:1;;;;;:::i;7423:150::-;;;;;;;;;;-1:-1:-1;7423:150:1;;;;;:::i;:::-;-1:-1:-1;;;;;7540:24:1;;;7505:7;7540:24;;;:12;:24;;;;;;;;;7530:35;;:9;:35;;;;;;;;7423:150;12489:189;12586:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;12586:19:1;12609:10;12586:33;12578:42;;;;;;12663:8;12630:12;12643:8;12630:22;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;:41;;;;12489:189;;:::o;4568:588::-;4771:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;4771:19:1;4794:10;4771:33;4763:42;;;;;;4888:15;4854:12;4867:8;4854:22;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;4819:12;4832:8;4819:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;:65;;;;:::i;:::-;4818:85;4815:335;;;4958:15;4918:12;4931:8;4918:22;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;:55;;;;5021:8;4987:12;5000:8;4987:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;:42;;;;4568:588;;;:::o;4815:335::-;5096:1;5058:12;5071:8;5058:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;:40;;-1:-1:-1;;;;;;5058:40:1;-1:-1:-1;;;;;5058:40:1;;;;;;;;;;;5117:22;;5130:8;;-1:-1:-1;;;;;;;;;;;5117:22:1;;4815:335;4568:588;;;:::o;12346:133::-;12432:10;7356:7;7381:24;;;:12;:24;;;;;;12457:15;;12406:12;;:38;;;;;;;;:::i;:::-;;;;;;;;;;;:48;;:66;;;;12346:133::o;8200:818::-;8262:18;8560:19;;;:9;:19;;;;;;8601:12;:22;;-1:-1:-1;;;;;8560:19:1;;;;8262:18;;;;;8570:8;;8601:22;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;;;;8601:27:1;8589:39;;8648:12;8661:8;8648:22;;;;;;;;:::i;:::-;;;;;;;;:25;:22;;;;;:25;;-1:-1:-1;;;;;8648:25:1;;-1:-1:-1;8686:12:1;8699:8;8686:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;8683:329;;-1:-1:-1;8764:1:1;8683:329;;;8816:23;8784:12;8797:8;8784:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:55;;;;;;;;:::i;:::-;;8781:231;;-1:-1:-1;8863:1:1;8781:231;;;8915:21;8883:12;8896:8;8883:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:53;;;;;;;;:::i;:::-;;8880:132;;-1:-1:-1;8960:1:1;8880:132;;;-1:-1:-1;9000:1:1;8880:132;8200:818;;;;;:::o;10437:1035::-;10555:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;10555:19:1;10578:10;10555:33;;10554:84;;;10627:10;-1:-1:-1;;;;;10592:45:1;:12;10605:8;10592:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;10592:31:1;:45;10554:84;10546:93;;;;;;10657:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;10657:28:1;;;:19;;:28;10649:37;;;;;;10769:15;10735:12;10748:8;10735:22;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;10700:12;10713:8;10700:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;:65;;;;:::i;:::-;10699:85;10696:770;;;10799:19;;;;:9;:19;;;;;;;;:25;;-1:-1:-1;;;;;;10799:25:1;-1:-1:-1;;;;;10799:25:1;;;;;;;;;;10838:19;;;;:12;:19;;;;;:21;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10873:17:1;;;;;;:12;:17;;;;;:19;;;;;;:::i;:::-;;;;;;11004:1;10966:12;10979:8;10966:22;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:40;;;;;-1:-1:-1;;;;;10966:40:1;;;;;-1:-1:-1;;;;;10966:40:1;;;;;;11051:22;11020:12;11033:8;11020:22;;;;;;;;:::i;:::-;;;;;;;;;:28;:22;;;;;:28;:53;;-1:-1:-1;;;;11020:53:1;-1:-1:-1;;;11020:53:1;;;;;;;;;:::i;:::-;;;;;;11199:1;11159:12;11172:8;11159:22;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;:41;;;;11248:1;11214:12;11227:8;11214:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;:35;;;;11297:1;11263:12;11276:8;11263:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;:35;;;;11336:8;11332:3;-1:-1:-1;;;;;11317:28:1;11326:5;-1:-1:-1;;;;;11317:28:1;;;;;;;;;;;4568:588;;;:::o;10696:770::-;11412:1;11374:12;11387:8;11374:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;:40;;-1:-1:-1;;;;;;11374:40:1;-1:-1:-1;;;;;11374:40:1;;;;;;;;;;;11433:22;;11446:8;;-1:-1:-1;;;;;;;;;;;11433:22:1;;10437:1035;;;:::o;10277:154::-;10390:34;10403:5;10410:3;10415:8;10390:12;:34::i;6516:745::-;6623:10;6591:16;7381:24;;;:12;:24;;;;;;6728:12;:22;;7381:24;;6728:22;;;;;;:::i;:::-;;;;;;;;;;;:37;;;6769:1;6728:42;6720:51;;;;;;6825:8;6790:12;6803:8;6790:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;:43;6781:53;;;;;;6885:21;6853:12;6866:8;6853:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:53;;;;;;;;:::i;:::-;;6844:63;;;;;;7009:1;6969:12;6982:8;6969:22;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;:41;;;;7055:15;7020:12;7033:8;7020:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;:50;;;;7147:22;7116:12;7129:8;7116:22;;;;;;;;:::i;:::-;;;;;;;;;:28;:22;;;;;:28;:53;;-1:-1:-1;;;;7116:53:1;-1:-1:-1;;;7116:53:1;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7233:21:1;;7245:8;;7233:21;;;;;6581:680;6516:745;:::o;11929:407::-;12002:4;12025:19;;;:9;:19;;;;;;-1:-1:-1;;;;;12025:19:1;12048:10;12025:33;12017:42;;;;;;12142:15;12108:12;12121:8;12108:22;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;12073:12;12086:8;12073:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;:65;;;;:::i;:::-;12072:85;12069:261;;;-1:-1:-1;12179:4:1;;11929:407;-1:-1:-1;11929:407:1:o;12069:261::-;12250:1;12212:12;12225:8;12212:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;:40;;-1:-1:-1;;;;;;12212:40:1;-1:-1:-1;;;;;12212:40:1;;;;;;;;;;;12271:22;;12284:8;;-1:-1:-1;;;;;;;;;;;12271:22:1;;-1:-1:-1;12314:5:1;;11929:407;-1:-1:-1;11929:407:1:o;12069:261::-;11929:407;;;:::o;2265:977::-;2362:7;2449:12;;-1:-1:-1;;;;;2449:12:1;2465:10;2449:26;2441:35;;;;;;-1:-1:-1;;;;;7381:24:1;;7356:7;7381:24;;;:12;:24;;;;;;2602:1;2576:27;2573:663;;2669:100;;;;;;;;-1:-1:-1;2669:100:1;;;-1:-1:-1;;;;;2669:100:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:15;2669:100;;;;2763:5;2669:100;;;;2651:12;:119;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2651:119:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2669:100;;2651:119;;-1:-1:-1;;;;;;2651:119:1;;-1:-1:-1;;;2651:119:1;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2651:119:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2841:12;:15;;-1:-1:-1;;;2841:15:1;;;:::i;:::-;;;;-1:-1:-1;;;;;;2870:24:1;;;;;;;:12;:24;;;;;;;;:35;;;2953:19;;;:9;:19;;;;;:35;;-1:-1:-1;;;;;;2953:35:1;;;;;;;;;3002:27;;;:12;:27;;;;;:29;;2870:35;;-1:-1:-1;3002:27:1;:29;;;:::i;:::-;;;;;;3090:8;3083:16;;;;;2573:663;-1:-1:-1;;;;;;7381:24:1;;7356:7;7381:24;;;:12;:24;;;;;;2573:663;2265:977;;;;:::o;5166:752::-;5274:10;5242:16;7381:24;;;:12;:24;;;;;;5380:12;:22;;7381:24;;5380:22;;;;;;:::i;:::-;;;;;;;;;;;:37;;;5421:1;5380:42;5372:51;;;;;;5477:8;5442:12;5455:8;5442:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;;:43;5433:53;;;;;;5537:22;5505:12;5518:8;5505:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;5496:64;;;;;;5663:1;5623:12;5636:8;5623:22;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;:41;;;;5709:15;5674:12;5687:8;5674:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;:50;;;;5801:23;5770:12;5783:8;5770:22;;;;;;;;:::i;:::-;;;;;;;;;:28;:22;;;;;:28;:54;;-1:-1:-1;;;;5770:54:1;-1:-1:-1;;;5770:54:1;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5889:22:1;;5902:8;;5889:22;;;;;5232:686;5166:752;:::o;5928:578::-;6140:10;-1:-1:-1;;;;;6109:41:1;:12;6122:8;6109:22;;;;;;;;:::i;:::-;;;;;;;;;:27;:22;;;;;:27;;-1:-1:-1;;;;;6109:27:1;:41;6101:50;;;;;;6238:15;6204:12;6217:8;6204:22;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;6169:12;6182:8;6169:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;:65;;;;:::i;:::-;6168:85;6165:335;;;6308:15;6268:12;6281:8;6268:22;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;:55;;;;6371:8;6337:12;6350:8;6337:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;:42;;;;4568:588;;;:::o;9028:828::-;-1:-1:-1;;;;;9396:24:1;;;9099:18;9396:24;;;:12;:24;;;;;;;;;9443:19;;;:9;:19;;;;;;9484:12;:22;;9443:19;;;;;9099:18;;9396:24;;9484:22;;;;;;:::i;:::-;;;;;;;;:27;:22;;;;;:27;;-1:-1:-1;;;;;9484:27:1;;-1:-1:-1;9524:12:1;9537:8;9524:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;9521:329;;-1:-1:-1;9602:1:1;9521:329;;;9654:23;9622:12;9635:8;9622:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:55;;;;;;;;:::i;:::-;;9619:231;;-1:-1:-1;9701:1:1;9619:231;;;9753:21;9721:12;9734:8;9721:22;;;;;;;;:::i;7583:133::-;7655:7;7681:12;7694:8;7681:22;;;;;;;;:::i;:::-;;;;;;;;;:27;:22;;;;;:27;;-1:-1:-1;;;;;7681:27:1;;7583:133;-1:-1:-1;;7583:133:1:o;7726:157::-;-1:-1:-1;;;;;7845:24:1;;7807:7;7845:24;;;:12;:24;;;;;;7832:12;:38;;:12;;7845:24;7832:38;;;;;;:::i;3248:1310::-;3394:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;3394:19:1;3417:10;3394:33;3393:96;;;;-1:-1:-1;3465:23:1;3433:12;3446:8;3433:22;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;:55;;;;;;;;:::i;:::-;;;3393:96;3385:105;;;;;;3573:15;3539:12;3552:8;3539:22;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;3504:12;3517:8;3504:22;;;;;;;;:::i;:::-;;;;;;;;;;;:32;;;:65;;;;:::i;:::-;3503:85;3500:1052;;;3712:1;3671:11;:40;3683:12;3696:8;3683:22;;;;;;;;:::i;:::-;;;;;;;;;:27;:22;;;;;:27;;;;;-1:-1:-1;;;;;3683:27:1;3671:40;;;;;;;;;;;;;:42;3668:193;;;3804:11;:40;3816:12;3829:8;3816:22;;;;;;;;:::i;:::-;;;;;;;;;:27;:22;;;;;:27;;;;;-1:-1:-1;;;;;3816:27:1;3804:40;;;;;;;;;;;;:42;;;;;;:::i;:::-;;;;;;3668:193;-1:-1:-1;;;;;3942:25:1;;;;;;:11;:25;;;;;:27;;;;;;:::i;:::-;;;;;;4060:12;4030;4043:8;4030:22;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:42;;;;;-1:-1:-1;;;;;4030:42:1;;;;;-1:-1:-1;;;;;4030:42:1;;;;;;4173:21;4142:12;4155:8;4142:22;;;;;;;;:::i;:::-;;;;;;;;;:28;:22;;;;;:28;:52;;-1:-1:-1;;;;4142:52:1;-1:-1:-1;;;4142:52:1;;;;;;;;;:::i;:::-;;;;;;4327:1;4288:12;4301:8;4288:22;;;;;;;;:::i;:::-;;;;;;;;;;;:37;;:40;;;;4376:1;4342:12;4355:8;4342:22;;;;;;;;:::i;:::-;;;;;;;;;;;:31;;:35;;;;4418:12;-1:-1:-1;;;;;4396:35:1;4409:8;4396:35;;;;;;;;;;11478:101;;:::o;3500:1052::-;4498:1;4460:12;4473:8;4460:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;:40;;-1:-1:-1;;;;;;4460:40:1;-1:-1:-1;;;;;4460:40:1;;;;;;;;;;;4519:22;;4532:8;;-1:-1:-1;;;;;;;;;;;4519:22:1;;3248:1310;;:::o;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;407:173::-;475:20;;-1:-1:-1;;;;;524:31:3;;514:42;;504:70;;570:1;567;560:12;585:254;653:6;661;714:2;702:9;693:7;689:23;685:32;682:52;;;730:1;727;720:12;682:52;753:29;772:9;753:29;:::i;:::-;743:39;829:2;814:18;;;;801:32;;-1:-1:-1;;;585:254:3:o;844:248::-;912:6;920;973:2;961:9;952:7;948:23;944:32;941:52;;;989:1;986;979:12;941:52;-1:-1:-1;;1012:23:3;;;1082:2;1067:18;;;1054:32;;-1:-1:-1;844:248:3:o;1097:186::-;1156:6;1209:2;1197:9;1188:7;1184:23;1180:32;1177:52;;;1225:1;1222;1215:12;1177:52;1248:29;1267:9;1248:29;:::i;:::-;1238:39;1097:186;-1:-1:-1;;;1097:186:3:o;1470:316::-;1547:6;1555;1563;1616:2;1604:9;1595:7;1591:23;1587:32;1584:52;;;1632:1;1629;1622:12;1584:52;-1:-1:-1;;1655:23:3;;;1725:2;1710:18;;1697:32;;-1:-1:-1;1776:2:3;1761:18;;;1748:32;;1470:316;-1:-1:-1;1470:316:3:o;2259:328::-;2336:6;2344;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2577:2;2566:9;2562:18;2549:32;2539:42;;2259:328;;;;;:::o;2784:260::-;2852:6;2860;2913:2;2901:9;2892:7;2888:23;2884:32;2881:52;;;2929:1;2926;2919:12;2881:52;2952:29;2971:9;2952:29;:::i;:::-;2942:39;;3000:38;3034:2;3023:9;3019:18;3000:38;:::i;:::-;2990:48;;2784:260;;;;;:::o;3049:347::-;3114:6;3122;3175:2;3163:9;3154:7;3150:23;3146:32;3143:52;;;3191:1;3188;3181:12;3143:52;3214:29;3233:9;3214:29;:::i;:::-;3204:39;;3293:2;3282:9;3278:18;3265:32;3340:5;3333:13;3326:21;3319:5;3316:32;3306:60;;3362:1;3359;3352:12;3306:60;3385:5;3375:15;;;3049:347;;;;;:::o;3860:127::-;3921:10;3916:3;3912:20;3909:1;3902:31;3952:4;3949:1;3942:15;3976:4;3973:1;3966:15;3992:1138;4087:6;4095;4103;4111;4164:3;4152:9;4143:7;4139:23;4135:33;4132:53;;;4181:1;4178;4171:12;4132:53;4204:29;4223:9;4204:29;:::i;:::-;4194:39;;4252:38;4286:2;4275:9;4271:18;4252:38;:::i;:::-;4242:48;;4337:2;4326:9;4322:18;4309:32;4299:42;;4392:2;4381:9;4377:18;4364:32;4415:18;4456:2;4448:6;4445:14;4442:34;;;4472:1;4469;4462:12;4442:34;4510:6;4499:9;4495:22;4485:32;;4555:7;4548:4;4544:2;4540:13;4536:27;4526:55;;4577:1;4574;4567:12;4526:55;4613:2;4600:16;4635:2;4631;4628:10;4625:36;;;4641:18;;:::i;:::-;4716:2;4710:9;4684:2;4770:13;;-1:-1:-1;;4766:22:3;;;4790:2;4762:31;4758:40;4746:53;;;4814:18;;;4834:22;;;4811:46;4808:72;;;4860:18;;:::i;:::-;4900:10;4896:2;4889:22;4935:2;4927:6;4920:18;4975:7;4970:2;4965;4961;4957:11;4953:20;4950:33;4947:53;;;4996:1;4993;4986:12;4947:53;5052:2;5047;5043;5039:11;5034:2;5026:6;5022:15;5009:46;5097:1;5092:2;5087;5079:6;5075:15;5071:24;5064:35;5118:6;5108:16;;;;;;;3992:1138;;;;;;;:::o;5135:254::-;5203:6;5211;5264:2;5252:9;5243:7;5239:23;5235:32;5232:52;;;5280:1;5277;5270:12;5232:52;5316:9;5303:23;5293:33;;5345:38;5379:2;5368:9;5364:18;5345:38;:::i;5394:127::-;5455:10;5450:3;5446:20;5443:1;5436:31;5486:4;5483:1;5476:15;5510:4;5507:1;5500:15;5526:127;5587:10;5582:3;5578:20;5575:1;5568:31;5618:4;5615:1;5608:15;5642:4;5639:1;5632:15;5658:125;5723:9;;;5744:10;;;5741:36;;;5757:18;;:::i;5788:127::-;5849:10;5844:3;5840:20;5837:1;5830:31;5880:4;5877:1;5870:15;5904:4;5901:1;5894:15;5920:136;5959:3;5987:5;5977:39;;5996:18;;:::i;:::-;-1:-1:-1;;;6032:18:3;;5920:136::o;6061:135::-;6100:3;6121:17;;;6118:43;;6141:18;;:::i;:::-;-1:-1:-1;6188:1:3;6177:13;;6061:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1397400",
								"executionCost": "192308",
								"totalCost": "1589708"
							},
							"external": {
								"approve(address,uint256)": "337",
								"balanceOf(address)": "2582",
								"checkTimeout(uint256)": "infinite",
								"createToken(address,address)": "infinite",
								"getApproved(uint256)": "308",
								"getInfoToken(uint256)": "24645",
								"getInfoTokenFromBCA(address)": "22623",
								"isApprovedForAll(address,address)": "infinite",
								"ownerEngagement(uint256)": "74711",
								"ownerOf(uint256)": "2577",
								"ownerOfFromBCA(address)": "4838",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "421",
								"setTimeout(uint256,uint256)": "26833",
								"setUser(uint256,address)": "144267",
								"startOwnerEngagement(uint256,uint256,uint256)": "59909",
								"startUserEngagement(uint256,uint256,uint256)": "62066",
								"tokenFromBCA(address)": "2603",
								"transferFrom(address,address,uint256)": "infinite",
								"updateTimestamp()": "26762",
								"userBalanceOf(address)": "2627",
								"userBalanceOfAnOwner(address,address)": "infinite",
								"userEngagement(uint256)": "74667",
								"userOf(uint256)": "4695",
								"userOfFromBCA(address)": "6991"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2097,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2110,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2085,
									"end": 2110,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2120,
									"end": 2136,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2136,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2136,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2158,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2246,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "OR",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2146,
									"end": 2247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2146,
									"end": 2247,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 131,
									"end": 12680,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095cc83df2a544c815afabd879731c1654fe5190f557e37730f945ae733bc330d64736f6c63430008110033",
									".code": [
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "6ED776B2"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "DB4D295B"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "DB4D295B"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "E61E3A76"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "E985E9C5"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "F7B44A0F"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "B88D4FDE"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "C2F1F14A"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "D1553258"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "6ED776B2"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "A22CB465"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "AD2661FC"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "ADADAF40"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "B684BF0C"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "219A5823"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "531F2BCD"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "531F2BCD"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "5329C681"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "5A9F8682"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "6352211E"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "219A5823"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "42842E0E"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "81812FC"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "B6DF367"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "CB22289"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "128DA698"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "1C5BE3D7"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 12680,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11692,
											"end": 11793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11769,
											"end": 11776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11769,
											"end": 11776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11793,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 11478,
											"end": 11579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 12489,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 12489,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7896,
											"end": 8037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8004,
											"end": 8029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1459,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7896,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1288,
											"end": 1465,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4568,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4568,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 12346,
											"end": 12479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 8200,
											"end": 9018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8200,
											"end": 9018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2089,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2089,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2056,
											"end": 2090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2141,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2099,
											"end": 2142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2151,
											"end": 2194,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2246,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2203,
											"end": 2248,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2005,
											"end": 2008,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1791,
											"end": 2254,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10437,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10437,
											"end": 11472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 10277,
											"end": 10431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 10277,
											"end": 10431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6516,
											"end": 7261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6516,
											"end": 7261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 11929,
											"end": 12336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11929,
											"end": 12336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2757,
											"end": 2771,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2772,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2732,
											"end": 2773,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2592,
											"end": 2779,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 8047,
											"end": 8190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8160,
											"end": 8167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8190,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10002,
											"end": 10127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10109,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10127,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2265,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2265,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9866,
											"end": 9992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 9946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9992,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11585,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 11585,
											"end": 11686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5166,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5166,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5928,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5928,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 9028,
											"end": 9856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 9028,
											"end": 9856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3699,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3666,
											"end": 3700,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3709,
											"end": 3752,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3761,
											"end": 3795,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3831,
											"end": 3848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3828,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3811,
											"end": 3829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3618,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3600,
											"end": 3619,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3401,
											"end": 3855,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10133,
											"end": 10271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10271,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7583,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7583,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7726,
											"end": 7883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7726,
											"end": 7883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3248,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3248,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7276,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7413,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11799,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 11799,
											"end": 11919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 7423,
											"end": 7573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7552,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7540,
											"end": 7564,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7539,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7423,
											"end": 7573,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12595,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12586,
											"end": 12605,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12619,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12586,
											"end": 12619,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 12578,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12663,
											"end": 12671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12642,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12643,
											"end": 12651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12630,
											"end": 12652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12660,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 12630,
											"end": 12660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12671,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4771,
											"end": 4790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4804,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4763,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 4903,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4867,
											"end": 4875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4854,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4884,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4854,
											"end": 4884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4832,
											"end": 4840,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4819,
											"end": 4841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4819,
											"end": 4884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4819,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4819,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4903,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4930,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4931,
											"end": 4939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4918,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4955,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4918,
											"end": 4955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4973,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 4999,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5000,
											"end": 5008,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4987,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5018,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4987,
											"end": 5018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5071,
											"end": 5079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5058,
											"end": 5080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5058,
											"end": 5085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5098,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5117,
											"end": 5139,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5138,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A910D1B10F01C5CA37C4E89A96B75C29AA88C10448AE4D63673A5A7C342776B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5117,
											"end": 5139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5139,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4815,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 12346,
											"end": 12479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12432,
											"end": 12442,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12472,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12406,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12454,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12406,
											"end": 12454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12472,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12406,
											"end": 12472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12346,
											"end": 12479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8613,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8578,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8601,
											"end": 8623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8601,
											"end": 8628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8661,
											"end": 8669,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8648,
											"end": 8670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8648,
											"end": 8673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8686,
											"end": 8698,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8699,
											"end": 8707,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8686,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8686,
											"end": 8714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8686,
											"end": 8740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8686,
											"end": 8740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8683,
											"end": 9012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8764,
											"end": 8765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8683,
											"end": 9012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9012,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8683,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8839,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8784,
											"end": 8796,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8797,
											"end": 8805,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8784,
											"end": 8806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8784,
											"end": 8812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8784,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8781,
											"end": 9012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8863,
											"end": 8864,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8781,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8781,
											"end": 9012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 9012,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8781,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8915,
											"end": 8936,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8883,
											"end": 8895,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8896,
											"end": 8904,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8883,
											"end": 8905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8883,
											"end": 8911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8883,
											"end": 8936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8883,
											"end": 8936,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8961,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8880,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 9018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10564,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10555,
											"end": 10574,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10578,
											"end": 10588,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10588,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10554,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10554,
											"end": 10638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10554,
											"end": 10638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10637,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10592,
											"end": 10637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10604,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10605,
											"end": 10613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10592,
											"end": 10614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10623,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10592,
											"end": 10623,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10592,
											"end": 10637,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10554,
											"end": 10638,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10554,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10546,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10666,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10657,
											"end": 10685,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10685,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10769,
											"end": 10784,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10747,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10748,
											"end": 10756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10735,
											"end": 10757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10765,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 10735,
											"end": 10765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10735,
											"end": 10765,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10712,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10713,
											"end": 10721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10700,
											"end": 10722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10732,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10700,
											"end": 10732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10732,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10700,
											"end": 10765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 10700,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10700,
											"end": 10765,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10700,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10784,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 11466,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10696,
											"end": 11466,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10808,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10818,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10799,
											"end": 10824,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10857,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 10838,
											"end": 10859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10859,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10885,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10890,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 10873,
											"end": 10892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11004,
											"end": 11005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10978,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 10979,
											"end": 10987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10966,
											"end": 10988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10993,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10966,
											"end": 10993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 10993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11020,
											"end": 11032,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11033,
											"end": 11041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 11020,
											"end": 11042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11048,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 11020,
											"end": 11073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11199,
											"end": 11200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11171,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11172,
											"end": 11180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 11159,
											"end": 11181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11200,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11214,
											"end": 11226,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11227,
											"end": 11235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 11214,
											"end": 11236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11214,
											"end": 11245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11249,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11275,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11276,
											"end": 11284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 11263,
											"end": 11285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11294,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 11263,
											"end": 11294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11298,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11317,
											"end": 11345,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10696,
											"end": 11466,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10696,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11374,
											"end": 11386,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 11387,
											"end": 11395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 11374,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11401,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11374,
											"end": 11401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11374,
											"end": 11414,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11433,
											"end": 11455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11446,
											"end": 11454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A910D1B10F01C5CA37C4E89A96B75C29AA88C10448AE4D63673A5A7C342776B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 11433,
											"end": 11455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11455,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10437,
											"end": 11472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 10277,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10403,
											"end": 10408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10423,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10390,
											"end": 10424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6633,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6740,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6728,
											"end": 6750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6765,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6728,
											"end": 6765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6765,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6720,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6802,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6803,
											"end": 6811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6790,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6790,
											"end": 6821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6821,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 6833,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 6781,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6885,
											"end": 6906,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6853,
											"end": 6865,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6853,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6853,
											"end": 6881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 6853,
											"end": 6906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6906,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6844,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6981,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6982,
											"end": 6990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6969,
											"end": 6991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7006,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6969,
											"end": 7006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7010,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 7010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7033,
											"end": 7041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7020,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7052,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7020,
											"end": 7052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7070,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7147,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7116,
											"end": 7128,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7129,
											"end": 7137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7116,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7144,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7116,
											"end": 7169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7116,
											"end": 7169,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "A74F4AB94FAD84FFC38A74F59789BF53235489DAA6AE3B0010116780C1588A4"
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7254,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 7261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 7261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12034,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12025,
											"end": 12044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12058,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 12017,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12142,
											"end": 12157,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12120,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12121,
											"end": 12129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12108,
											"end": 12130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12138,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 12108,
											"end": 12138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12108,
											"end": 12138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12085,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12086,
											"end": 12094,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12073,
											"end": 12095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12105,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12073,
											"end": 12105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 12073,
											"end": 12138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 12073,
											"end": 12138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12138,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 12073,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12157,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12183,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12179,
											"end": 12183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12250,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12212,
											"end": 12224,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12225,
											"end": 12233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 12212,
											"end": 12234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12239,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12212,
											"end": 12239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12252,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12271,
											"end": 12293,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A910D1B10F01C5CA37C4E89A96B75C29AA88C10448AE4D63673A5A7C342776B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12271,
											"end": 12293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12293,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12314,
											"end": 12319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12314,
											"end": 12319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11929,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12069,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2475,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2449,
											"end": 2475,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 2441,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 2573,
											"end": 3236,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "15180"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2769,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "OR",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2651,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2770,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2841,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2894,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2988,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3014,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2905,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3002,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 3083,
											"end": 3099,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 3236,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 2573,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 3236,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2573,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5284,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7393,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5392,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5380,
											"end": 5402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5417,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5380,
											"end": 5417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5417,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5372,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5454,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5455,
											"end": 5463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5442,
											"end": 5464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5473,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5442,
											"end": 5473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5473,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5442,
											"end": 5485,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 5433,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5518,
											"end": 5526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5505,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5505,
											"end": 5533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5505,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5559,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5496,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5636,
											"end": 5644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5623,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5660,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5623,
											"end": 5660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5664,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5724,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5687,
											"end": 5695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5674,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5706,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5674,
											"end": 5706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5724,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5801,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5770,
											"end": 5782,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5783,
											"end": 5791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5770,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5770,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5824,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "PUSH",
											"source": 1,
											"value": "D0582651F57FFEA78C4FA2DF3EAF04BF2FF083277A6C1145411C72B9C1DC474C"
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5889,
											"end": 5911,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5928,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6150,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6150,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6122,
											"end": 6130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6109,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6136,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6136,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6136,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6150,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6101,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6217,
											"end": 6225,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6204,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6234,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6204,
											"end": 6234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6182,
											"end": 6190,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6169,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6201,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6169,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 6253,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6500,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6165,
											"end": 6500,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6280,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6281,
											"end": 6289,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6268,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6268,
											"end": 6305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6323,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6268,
											"end": 6323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6371,
											"end": 6379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6349,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6350,
											"end": 6358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6337,
											"end": 6359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6368,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6337,
											"end": 6368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6379,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 9028,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9099,
											"end": 9117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9443,
											"end": 9462,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9099,
											"end": 9117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9099,
											"end": 9117,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9484,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9511,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9484,
											"end": 9511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9511,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9536,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9537,
											"end": 9545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9524,
											"end": 9546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9524,
											"end": 9552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9524,
											"end": 9578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9524,
											"end": 9578,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 9521,
											"end": 9850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9602,
											"end": 9603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9521,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9521,
											"end": 9850,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9850,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 9521,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9677,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9622,
											"end": 9634,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9635,
											"end": 9643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9622,
											"end": 9644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 9622,
											"end": 9650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9622,
											"end": 9677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 9619,
											"end": 9850,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9619,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9619,
											"end": 9850,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9619,
											"end": 9850,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 9619,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9753,
											"end": 9774,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9721,
											"end": 9733,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9721,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 9721,
											"end": 9743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7694,
											"end": 7702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7681,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7708,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7681,
											"end": 7708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7583,
											"end": 7716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7583,
											"end": 7716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7726,
											"end": 7883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7857,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7844,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7845,
											"end": 7869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7832,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7832,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3394,
											"end": 3413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3427,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3433,
											"end": 3445,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3446,
											"end": 3454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3433,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3433,
											"end": 3461,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3433,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3488,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 3393,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3385,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3552,
											"end": 3560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3539,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3569,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3539,
											"end": 3569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3517,
											"end": 3525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3504,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3536,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3504,
											"end": 3536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3536,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3504,
											"end": 3569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3504,
											"end": 3569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3569,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3504,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3588,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 4552,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3500,
											"end": 4552,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3682,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3695,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3696,
											"end": 3704,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3683,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3683,
											"end": 3710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3711,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3713,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3668,
											"end": 3861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3828,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3829,
											"end": 3837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3816,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3843,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3844,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3804,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3861,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3668,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3942,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4030,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4030,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4155,
											"end": 4163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4142,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 4142,
											"end": 4194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4301,
											"end": 4309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4288,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4325,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4288,
											"end": 4325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4328,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4354,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4355,
											"end": 4363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4342,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4373,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4342,
											"end": 4373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "A366111DC7688B9FFB71476107B8B733FD141E7B370CFF8480C03F4EC4409CD7"
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4431,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 4552,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 3500,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4473,
											"end": 4481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4460,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4460,
											"end": 4487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4500,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A910D1B10F01C5CA37C4E89A96B75C29AA88C10448AE4D63673A5A7C342776B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4541,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 580,
											"name": "tag",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 407,
											"end": 580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 495,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 495,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 524,
											"end": 555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 555,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 514,
											"end": 556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 514,
											"end": 556,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 504,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 504,
											"end": 574,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 560,
											"end": 572,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 585,
											"end": 839,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 585,
											"end": 839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 653,
											"end": 659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 667,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 689,
											"end": 712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 685,
											"end": 717,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 682,
											"end": 734,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 682,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 682,
											"end": 734,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 682,
											"end": 734,
											"name": "tag",
											"source": 3,
											"value": "483"
										},
										{
											"begin": 682,
											"end": 734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 753,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 772,
											"end": 781,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 753,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 753,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 753,
											"end": 782,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 753,
											"end": 782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 743,
											"end": 782,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 829,
											"end": 831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 814,
											"end": 832,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 814,
											"end": 832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 801,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 801,
											"end": 833,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 585,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 844,
											"end": 1092,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 844,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 912,
											"end": 918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 944,
											"end": 976,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 941,
											"end": 993,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 941,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 941,
											"end": 993,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 979,
											"end": 991,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 941,
											"end": 993,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 941,
											"end": 993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1035,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1035,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1035,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1086,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1086,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 844,
											"end": 1092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1097,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1195,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1184,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1229,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 1177,
											"end": 1229,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1225,
											"end": 1226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1177,
											"end": 1229,
											"name": "tag",
											"source": 3,
											"value": "488"
										},
										{
											"begin": 1177,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 1267,
											"end": 1276,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 1248,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "tag",
											"source": 3,
											"value": "489"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1238,
											"end": 1277,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1097,
											"end": 1283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1097,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1786,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1470,
											"end": 1786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1604,
											"end": 1613,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1602,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1614,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1636,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 1584,
											"end": 1636,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1634,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1636,
											"name": "tag",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 1584,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1655,
											"end": 1678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1678,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1678,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1727,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1786,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2403,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2408,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 2444,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "tag",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2524,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 2492,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "tag",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2579,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2549,
											"end": 2581,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2916,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "500"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2931,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "tag",
											"source": 3,
											"value": "500"
										},
										{
											"begin": 2881,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 2971,
											"end": 2980,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 2952,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "tag",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 2952,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2942,
											"end": 2981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 3000,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3038,
											"name": "tag",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 3000,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 3038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 3038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 3044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3163,
											"end": 3172,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3195,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 3143,
											"end": 3195,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3195,
											"name": "tag",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 3143,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "505"
										},
										{
											"begin": 3233,
											"end": 3242,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 3214,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "tag",
											"source": 3,
											"value": "505"
										},
										{
											"begin": 3214,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3243,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3291,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3297,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3345,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3333,
											"end": 3346,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 3306,
											"end": 3366,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3362,
											"end": 3363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3366,
											"name": "tag",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 3306,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3049,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3987,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 3860,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3916,
											"end": 3919,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3912,
											"end": 3932,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3933,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3956,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3942,
											"end": 3957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3981,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4093,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4150,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4168,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4185,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "510"
										},
										{
											"begin": 4132,
											"end": 4185,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4183,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4185,
											"name": "tag",
											"source": 3,
											"value": "510"
										},
										{
											"begin": 4132,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 4223,
											"end": 4232,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 4204,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4233,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 4204,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4233,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 4286,
											"end": 4288,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4284,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4289,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 4252,
											"end": 4290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4290,
											"name": "tag",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 4252,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4242,
											"end": 4290,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4242,
											"end": 4290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4335,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4341,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4377,
											"end": 4395,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4364,
											"end": 4396,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4448,
											"end": 4454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4459,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4476,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 4442,
											"end": 4476,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4470,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4462,
											"end": 4474,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4442,
											"end": 4476,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 4442,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4495,
											"end": 4517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4555,
											"end": 4562,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4548,
											"end": 4552,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4544,
											"end": 4546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4540,
											"end": 4553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4563,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4526,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4526,
											"end": 4581,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4526,
											"end": 4581,
											"name": "tag",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 4526,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4616,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4628,
											"end": 4638,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 4625,
											"end": 4661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 4641,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "tag",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 4719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4770,
											"end": 4783,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4770,
											"end": 4783,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4762,
											"end": 4793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4758,
											"end": 4798,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4799,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4799,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4799,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4856,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4811,
											"end": 4857,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 4808,
											"end": 4880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 4860,
											"end": 4878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4889,
											"end": 4911,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 4970,
											"end": 4972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4967,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4957,
											"end": 4968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4953,
											"end": 4973,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4983,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 5000,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "519"
										},
										{
											"begin": 4947,
											"end": 5000,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 4994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 5000,
											"name": "tag",
											"source": 3,
											"value": "519"
										},
										{
											"begin": 4947,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5052,
											"end": 5054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5045,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5034,
											"end": 5036,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5055,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5087,
											"end": 5089,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5075,
											"end": 5090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5064,
											"end": 5099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5108,
											"end": 5124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 5130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5389,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5135,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5264,
											"end": 5266,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5243,
											"end": 5250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5284,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 5232,
											"end": 5284,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5270,
											"end": 5282,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5232,
											"end": 5284,
											"name": "tag",
											"source": 3,
											"value": "521"
										},
										{
											"begin": 5232,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5316,
											"end": 5325,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5326,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "502"
										},
										{
											"begin": 5379,
											"end": 5381,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5368,
											"end": 5377,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5345,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 5345,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5521,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5394,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5465,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5446,
											"end": 5466,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5443,
											"end": 5444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5486,
											"end": 5490,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5476,
											"end": 5491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5514,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5515,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5526,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 5526,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5587,
											"end": 5597,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5582,
											"end": 5585,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5578,
											"end": 5598,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5615,
											"end": 5616,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5608,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5642,
											"end": 5646,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5647,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5783,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5658,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5777,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 5741,
											"end": 5777,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 5757,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5788,
											"end": 5915,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5788,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5844,
											"end": 5847,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5840,
											"end": 5860,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5880,
											"end": 5884,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5877,
											"end": 5878,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5870,
											"end": 5885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 5908,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5901,
											"end": 5902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5920,
											"end": 6056,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5920,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 5962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5977,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 5977,
											"end": 6016,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 5996,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 5996,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6014,
											"name": "tag",
											"source": 3,
											"value": "531"
										},
										{
											"begin": 5996,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5920,
											"end": 6056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6061,
											"end": 6196,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6061,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6100,
											"end": 6103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6138,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6121,
											"end": 6138,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6121,
											"end": 6138,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "534"
										},
										{
											"begin": 6118,
											"end": 6161,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "534"
										},
										{
											"begin": 6141,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 6141,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6159,
											"name": "tag",
											"source": 3,
											"value": "534"
										},
										{
											"begin": 6141,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6177,
											"end": 6190,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6177,
											"end": 6190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6061,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									],
									".data": {
										"A910D1B10F01C5CA37C4E89A96B75C29AA88C10448AE4D63673A5A7C342776B1": "7e1636e7e3d95ceaa354ed9d47ea056b46cbcc0c448b26c6efaac0af33100305"
									}
								}
							},
							"sourceList": [
								"ERC-3519 SmartNft/ERC721_interface.sol",
								"ERC-3519 SmartNft/SmartNFT.sol",
								"ERC-3519 SmartNft/smartNFT_interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"checkTimeout(uint256)": "5329c681",
							"createToken(address,address)": "6ed776b2",
							"getApproved(uint256)": "081812fc",
							"getInfoToken(uint256)": "219a5823",
							"getInfoTokenFromBCA(address)": "b684bf0c",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerEngagement(uint256)": "ad2661fc",
							"ownerOf(uint256)": "6352211e",
							"ownerOfFromBCA(address)": "f7b44a0f",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setTimeout(uint256,uint256)": "0b6df367",
							"setUser(uint256,address)": "db4d295b",
							"startOwnerEngagement(uint256,uint256,uint256)": "128da698",
							"startUserEngagement(uint256,uint256,uint256)": "adadaf40",
							"tokenFromBCA(address)": "e61e3a76",
							"transferFrom(address,address,uint256)": "23b872dd",
							"updateTimestamp()": "1c5be3d7",
							"userBalanceOf(address)": "0cb22289",
							"userBalanceOfAnOwner(address,address)": "5a9f8682",
							"userEngagement(uint256)": "531f2bcd",
							"userOf(uint256)": "c2f1f14a",
							"userOfFromBCA(address)": "d1553258"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"OwnerEngaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"TimeoutAlarm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"UserAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"UserEngaged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"checkTimeout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressOwner\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getInfoToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_BCA_OWNER\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_BCA_USER\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_BCA_SD\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"getInfoTokenFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_BCA_OWNER\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_BCA_USER\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hashK_D\",\"type\":\"uint256\"}],\"name\":\"ownerEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"ownerOfFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeout\",\"type\":\"uint256\"}],\"name\":\"setTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataEngagement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hashK_O\",\"type\":\"uint256\"}],\"name\":\"startOwnerEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataEngagement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hashK_U\",\"type\":\"uint256\"}],\"name\":\"startUserEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"tokenFromBCA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"userBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressOwner\",\"type\":\"address\"}],\"name\":\"userBalanceOfAnOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hashK_D\",\"type\":\"uint256\"}],\"name\":\"userEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"userOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"userOfFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address.Throws unless `msg.sender` is the current NFT owner, or an authorized  operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"createToken(address,address)\":{\"details\":\"Only the manufacturer of the smart device account can create a token and will be the first owner of the token  The initial state of the token is \\\"waitingForOwner\\\" until verified by the new owner\",\"params\":{\"_addressSD\":\"An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\"},\"returns\":{\"_0\":\"The tokenID of the token bound to the smart device\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"ownerOfFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its owner\"},\"returns\":{\"_0\":\"The owner of the token bound to _addressSD\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter,  except this function just sets data to \\\"\\\"\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT. When transfer is complete, this function  checks if `_to` is a smart contract (code size > 0). If so, it calls  `onERC721Received` on `_to` and throws if the return value is not  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow  multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"setUser(uint256,address)\":{\"details\":\"Only the owner of the token account can transfer a token provided that the state of the token is \\\"engagedWithOwner\\\",\\\"waitingForUser\\\" or \\\"engagedWithUser\\\".  The state of the token must change to \\\"waitingForUser\\\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\",\"params\":{\"_addressUser\":\"The address of the new user\",\"_tokenId\":\"The tokenID of the smart device\"}},\"tokenFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its token ID\"},\"returns\":{\"_0\":\"The token ID of the token bound to _addressSD\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized  operator, or the approved address for this NFT. Throws if `_from` is  not the current owner. Throws if `_to` is the zero address. Throws if  `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"userBalanceOf(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressUser\":\"The address of the user to know the number of tokens\"},\"returns\":{\"_0\":\"The number of tokens of the user\"}},\"userBalanceOfAnOwner(address,address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressOwner\":\"The address of the owner of the tokens\",\"_addressUser\":\"The address of the user to know the number of tokens\"},\"returns\":{\"_0\":\"The number of tokens of an owner that an user can use\"}},\"userOf(uint256)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_tokenId\":\"of the token to obtain its user\"},\"returns\":{\"_0\":\"The user of the token with _tokenId\"}},\"userOfFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its user.\"},\"returns\":{\"_0\":\"The user of the token bound to _addressSD.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Set or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"createToken(address,address)\":{\"notice\":\"This function defines how the smart device is bound to a new token\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"ownerOfFromBCA(address)\":{\"notice\":\"This function let us know who is the owner of the token from the address of the smart device\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage  all of `msg.sender`'s assets.\"},\"setUser(uint256,address)\":{\"notice\":\"This function defines the transference of use of a smart device\"},\"tokenFromBCA(address)\":{\"notice\":\"This function let us obtain the tokenID from an address of smart device \"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST\"},\"userBalanceOf(address)\":{\"notice\":\"This function let us know how many tokens an user has\"},\"userBalanceOfAnOwner(address,address)\":{\"notice\":\"This function let us know how many tokens of an owner an user has\"},\"userOf(uint256)\":{\"notice\":\"This function let us know who is the user of the token from the tokenId\"},\"userOfFromBCA(address)\":{\"notice\":\"This function let us know who is the user of the token from the address of the smart device\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC-3519 SmartNft/SmartNFT.sol\":\"smartNFT_SC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC-3519 SmartNft/ERC721_interface.sol\":{\"keccak256\":\"0x4904c99c81d0f0919f6288aa55a1e4cc17d4128611ec58383a9a6e7fddc1ff6c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://3611cb816af28152767e2920c578cac3c0b48c1d8186f105025cb2d37609f355\",\"dweb:/ipfs/QmZU4AnQxgRXwPyuqQ7VoVpAH8xtMnHn7VxsLyCXMobT8e\"]},\"ERC-3519 SmartNft/SmartNFT.sol\":{\"keccak256\":\"0x3137322dda097cf008e3680266cb41249a9fdf22d1dd458e39ef407ec22fc398\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://9919490a174d37a77afafa40f64281a8f8d8fdd6dcf53d8e5c2c32ce8fa1d450\",\"dweb:/ipfs/QmSZrQQ7isJjHa4fU7qAnGega8aNrPAWq1HhVBmCDkvqvN\"]},\"ERC-3519 SmartNft/smartNFT_interface.sol\":{\"keccak256\":\"0x32f5e82bc8f948bb7aee3f1406c1c875d6b50cb834f78cdc9914284fbe595970\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://60d3f49c2584734b34b9517b10e2e73787d0fefa46b9983f99f376a9431c4c3c\",\"dweb:/ipfs/QmYHvNVu6c9SLJDzAQWu52xLSkcbR2w7HhfXiiSQ9ocUUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 151,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "manufacturer",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 153,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "tokenCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 157,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "ownerOfSD",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 161,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "tokenIDOfBCA",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "ownerBalance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 169,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "userBalance",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 193,
								"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
								"label": "Secure_Token",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(Token_Struct)189_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Token_Struct)189_storage)dyn_storage": {
								"base": "t_struct(Token_Struct)189_storage",
								"encoding": "dynamic_array",
								"label": "struct smartNFT_SC.Token_Struct[]",
								"numberOfBytes": "32"
							},
							"t_enum(States)149": {
								"encoding": "inplace",
								"label": "enum smartNFT_SC.States",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(Token_Struct)189_storage": {
								"encoding": "inplace",
								"label": "struct smartNFT_SC.Token_Struct",
								"members": [
									{
										"astId": 171,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "approved",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 173,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "SD",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 175,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "user",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 178,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "state",
										"offset": 20,
										"slot": "2",
										"type": "t_enum(States)149"
									},
									{
										"astId": 180,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "hashK_OD",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 182,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "hashK_UD",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 184,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "dataEngagement",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 186,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "timestamp",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 188,
										"contract": "ERC-3519 SmartNft/SmartNFT.sol:smartNFT_SC",
										"label": "timeout",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Set or reaffirm the approved address for an NFT"
							},
							"balanceOf(address)": {
								"notice": "Count all NFTs assigned to an owner"
							},
							"createToken(address,address)": {
								"notice": "This function defines how the smart device is bound to a new token"
							},
							"getApproved(uint256)": {
								"notice": "Get the approved address for a single NFT"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Query if an address is an authorized operator for another address"
							},
							"ownerOf(uint256)": {
								"notice": "Find the owner of an NFT"
							},
							"ownerOfFromBCA(address)": {
								"notice": "This function let us know who is the owner of the token from the address of the smart device"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Transfers the ownership of an NFT from one address to another address"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage  all of `msg.sender`'s assets."
							},
							"setUser(uint256,address)": {
								"notice": "This function defines the transference of use of a smart device"
							},
							"tokenFromBCA(address)": {
								"notice": "This function let us obtain the tokenID from an address of smart device "
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE  THEY MAY BE PERMANENTLY LOST"
							},
							"userBalanceOf(address)": {
								"notice": "This function let us know how many tokens an user has"
							},
							"userBalanceOfAnOwner(address,address)": {
								"notice": "This function let us know how many tokens of an owner an user has"
							},
							"userOf(uint256)": {
								"notice": "This function let us know who is the user of the token from the tokenId"
							},
							"userOfFromBCA(address)": {
								"notice": "This function let us know who is the user of the token from the address of the smart device"
							}
						},
						"version": 1
					}
				}
			},
			"ERC-3519 SmartNft/smartNFT_interface.sol": {
				"smartNFT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "OwnerEngaged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "TimeoutAlarm",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "UserAssigned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								}
							],
							"name": "UserEngaged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "checkTimeout",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressOwner",
									"type": "address"
								}
							],
							"name": "createToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_hashK_D",
									"type": "uint256"
								}
							],
							"name": "ownerEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "ownerOfFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timeout",
									"type": "uint256"
								}
							],
							"name": "setTimeout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "setUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dataEngage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hashK_O",
									"type": "uint256"
								}
							],
							"name": "startOwnerEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_dataEngage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_hashK_U",
									"type": "uint256"
								}
							],
							"name": "startUserEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "tokenFromBCA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateTimestamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								}
							],
							"name": "userBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressUser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressOwner",
									"type": "address"
								}
							],
							"name": "userBalanceOfAnOwner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_hashK_D",
									"type": "uint256"
								}
							],
							"name": "userEngagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "userOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addressSD",
									"type": "address"
								}
							],
							"name": "userOfFromBCA",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"OwnerEngaged(uint256)": {
								"details": "This emits when an owner of a NFT verifies a device  This event emits when the owner of a device finishes the transfer process"
							},
							"UserAssigned(uint256,address)": {
								"details": "This emits when an user of a NFT changes  This event emits when the user of a token is assigned  (`_addressUser` == 0) when a user is unassigned"
							},
							"UserEngaged(uint256)": {
								"details": "This emits when an user of a NFT verifies a device  This event emits when the user of a device finishes the assignment process"
							}
						},
						"kind": "dev",
						"methods": {
							"createToken(address,address)": {
								"details": "Only the manufacturer of the smart device account can create a token and will be the first owner of the token  The initial state of the token is \"waitingForOwner\" until verified by the new owner",
								"params": {
									"_addressSD": "An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device"
								},
								"returns": {
									"_0": "The tokenID of the token bound to the smart device"
								}
							},
							"ownerOfFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its owner"
								},
								"returns": {
									"_0": "The owner of the token bound to _addressSD"
								}
							},
							"setUser(uint256,address)": {
								"details": "Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser",
								"params": {
									"_addressUser": "The address of the new user",
									"_tokenId": "The tokenID of the smart device"
								}
							},
							"tokenFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its token ID"
								},
								"returns": {
									"_0": "The token ID of the token bound to _addressSD"
								}
							},
							"userBalanceOf(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressUser": "The address of the user to know the number of tokens"
								},
								"returns": {
									"_0": "The number of tokens of the user"
								}
							},
							"userBalanceOfAnOwner(address,address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressOwner": "The address of the owner of the tokens",
									"_addressUser": "The address of the user to know the number of tokens"
								},
								"returns": {
									"_0": "The number of tokens of an owner that an user can use"
								}
							},
							"userOf(uint256)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_tokenId": "of the token to obtain its user"
								},
								"returns": {
									"_0": "The user of the token with _tokenId"
								}
							},
							"userOfFromBCA(address)": {
								"details": "Everybody can call this function. It does not execute any code on blockchain, only reads",
								"params": {
									"_addressSD": "The address to obtain its user."
								},
								"returns": {
									"_0": "The user of the token bound to _addressSD."
								}
							}
						},
						"title": "smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkTimeout(uint256)": "5329c681",
							"createToken(address,address)": "6ed776b2",
							"ownerEngagement(uint256)": "ad2661fc",
							"ownerOfFromBCA(address)": "f7b44a0f",
							"setTimeout(uint256,uint256)": "0b6df367",
							"setUser(uint256,address)": "db4d295b",
							"startOwnerEngagement(uint256,uint256,uint256)": "128da698",
							"startUserEngagement(uint256,uint256,uint256)": "adadaf40",
							"tokenFromBCA(address)": "e61e3a76",
							"updateTimestamp()": "1c5be3d7",
							"userBalanceOf(address)": "0cb22289",
							"userBalanceOfAnOwner(address,address)": "5a9f8682",
							"userEngagement(uint256)": "531f2bcd",
							"userOf(uint256)": "c2f1f14a",
							"userOfFromBCA(address)": "d1553258"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"OwnerEngaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"TimeoutAlarm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"UserAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"UserEngaged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"checkTimeout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressOwner\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hashK_D\",\"type\":\"uint256\"}],\"name\":\"ownerEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"ownerOfFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeout\",\"type\":\"uint256\"}],\"name\":\"setTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataEngage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hashK_O\",\"type\":\"uint256\"}],\"name\":\"startOwnerEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_dataEngage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hashK_U\",\"type\":\"uint256\"}],\"name\":\"startUserEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"tokenFromBCA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"userBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressOwner\",\"type\":\"address\"}],\"name\":\"userBalanceOfAnOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hashK_D\",\"type\":\"uint256\"}],\"name\":\"userEngagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"userOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressSD\",\"type\":\"address\"}],\"name\":\"userOfFromBCA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnerEngaged(uint256)\":{\"details\":\"This emits when an owner of a NFT verifies a device  This event emits when the owner of a device finishes the transfer process\"},\"UserAssigned(uint256,address)\":{\"details\":\"This emits when an user of a NFT changes  This event emits when the user of a token is assigned  (`_addressUser` == 0) when a user is unassigned\"},\"UserEngaged(uint256)\":{\"details\":\"This emits when an user of a NFT verifies a device  This event emits when the user of a device finishes the assignment process\"}},\"kind\":\"dev\",\"methods\":{\"createToken(address,address)\":{\"details\":\"Only the manufacturer of the smart device account can create a token and will be the first owner of the token  The initial state of the token is \\\"waitingForOwner\\\" until verified by the new owner\",\"params\":{\"_addressSD\":\"An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\"},\"returns\":{\"_0\":\"The tokenID of the token bound to the smart device\"}},\"ownerOfFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its owner\"},\"returns\":{\"_0\":\"The owner of the token bound to _addressSD\"}},\"setUser(uint256,address)\":{\"details\":\"Only the owner of the token account can transfer a token provided that the state of the token is \\\"engagedWithOwner\\\",\\\"waitingForUser\\\" or \\\"engagedWithUser\\\".  The state of the token must change to \\\"waitingForUser\\\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\",\"params\":{\"_addressUser\":\"The address of the new user\",\"_tokenId\":\"The tokenID of the smart device\"}},\"tokenFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its token ID\"},\"returns\":{\"_0\":\"The token ID of the token bound to _addressSD\"}},\"userBalanceOf(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressUser\":\"The address of the user to know the number of tokens\"},\"returns\":{\"_0\":\"The number of tokens of the user\"}},\"userBalanceOfAnOwner(address,address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressOwner\":\"The address of the owner of the tokens\",\"_addressUser\":\"The address of the user to know the number of tokens\"},\"returns\":{\"_0\":\"The number of tokens of an owner that an user can use\"}},\"userOf(uint256)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_tokenId\":\"of the token to obtain its user\"},\"returns\":{\"_0\":\"The user of the token with _tokenId\"}},\"userOfFromBCA(address)\":{\"details\":\"Everybody can call this function. It does not execute any code on blockchain, only reads\",\"params\":{\"_addressSD\":\"The address to obtain its user.\"},\"returns\":{\"_0\":\"The user of the token bound to _addressSD.\"}}},\"title\":\"smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createToken(address,address)\":{\"notice\":\"This function defines how the smart device is bound to a new token\"},\"ownerOfFromBCA(address)\":{\"notice\":\"This function let us know who is the owner of the token from the address of the smart device\"},\"setUser(uint256,address)\":{\"notice\":\"This function defines the transference of use of a smart device\"},\"tokenFromBCA(address)\":{\"notice\":\"This function let us obtain the tokenID from an address of smart device \"},\"userBalanceOf(address)\":{\"notice\":\"This function let us know how many tokens an user has\"},\"userBalanceOfAnOwner(address,address)\":{\"notice\":\"This function let us know how many tokens of an owner an user has\"},\"userOf(uint256)\":{\"notice\":\"This function let us know who is the user of the token from the tokenId\"},\"userOfFromBCA(address)\":{\"notice\":\"This function let us know who is the user of the token from the address of the smart device\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC-3519 SmartNft/smartNFT_interface.sol\":\"smartNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC-3519 SmartNft/smartNFT_interface.sol\":{\"keccak256\":\"0x32f5e82bc8f948bb7aee3f1406c1c875d6b50cb834f78cdc9914284fbe595970\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://60d3f49c2584734b34b9517b10e2e73787d0fefa46b9983f99f376a9431c4c3c\",\"dweb:/ipfs/QmYHvNVu6c9SLJDzAQWu52xLSkcbR2w7HhfXiiSQ9ocUUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createToken(address,address)": {
								"notice": "This function defines how the smart device is bound to a new token"
							},
							"ownerOfFromBCA(address)": {
								"notice": "This function let us know who is the owner of the token from the address of the smart device"
							},
							"setUser(uint256,address)": {
								"notice": "This function defines the transference of use of a smart device"
							},
							"tokenFromBCA(address)": {
								"notice": "This function let us obtain the tokenID from an address of smart device "
							},
							"userBalanceOf(address)": {
								"notice": "This function let us know how many tokens an user has"
							},
							"userBalanceOfAnOwner(address,address)": {
								"notice": "This function let us know how many tokens of an owner an user has"
							},
							"userOf(uint256)": {
								"notice": "This function let us know who is the user of the token from the tokenId"
							},
							"userOfFromBCA(address)": {
								"notice": "This function let us know who is the user of the token from the address of the smart device"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC-3519 SmartNft/ERC721_interface.sol": {
				"ast": {
					"absolutePath": "ERC-3519 SmartNft/ERC721_interface.sol",
					"exportedSymbols": {
						"ERC165": [
							121
						],
						"ERC721": [
							112
						],
						"ERC721TokenReceiver": [
							136
						]
					},
					"id": 137,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:188:0",
								"text": "@title ERC-721 Non-Fungible Token Standard\n @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md\n  Note: the ERC-165 identifier for this interface is 0x80ac58cd"
							},
							"fullyImplemented": false,
							"id": 112,
							"linearizedBaseContracts": [
								112
							],
							"name": "ERC721",
							"nameLocation": "259:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "288:388:0",
										"text": "@dev This emits when ownership of any NFT changes by any mechanism.\n  This event emits when NFTs are created (`from` == 0) and destroyed\n  (`to` == 0). Exception: during contract creation, any number of NFTs\n  may be created and assigned without emitting Transfer. At the time of\n  any transfer, the approved address for that NFT (if any) is reset to none."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "687:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "712:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "696:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "735:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "719:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "756:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "740:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:70:0"
									},
									"src": "681:85:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "772:281:0",
										"text": "@dev This emits when the approved address for an NFT is changed or\n  reaffirmed. The zero address indicates there is no approved address.\n  When a Transfer event emits, this also indicates that the approved\n  address for that NFT (if any) is reset to none."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "1064:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1089:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1073:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1113:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1097:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1140:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1124:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1072:77:0"
									},
									"src": "1058:92:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1155:129:0",
										"text": "@dev This emits when an operator is enabled or disabled for an owner.\n  The operator can manage all NFTs of the owner."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 29,
									"name": "ApprovalForAll",
									"nameLocation": "1295:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1326:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1310:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1350:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1334:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "1366:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1361:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1361:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:67:0"
									},
									"src": "1289:88:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1383:319:0",
										"text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n  function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
									},
									"functionSelector": "70a08231",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1716:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1734:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1726:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:16:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1765:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:9:0"
									},
									"scope": 112,
									"src": "1707:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1780:247:0",
										"text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n  about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
									},
									"functionSelector": "6352211e",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2041:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2049:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:18:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:9:0"
									},
									"scope": 112,
									"src": "2032:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "2105:840:0",
										"text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT. When transfer is complete, this function\n  checks if `_to` is a smart contract (code size > 0). If so, it calls\n  `onERC721Received` on `_to` and throws if the return value is not\n  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
									},
									"functionSelector": "b88d4fde",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2959:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2984:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2976:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2999:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "2991:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3022:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 53,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:65:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3057:0:0"
									},
									"scope": 112,
									"src": "2950:108:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "3064:347:0",
										"text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n  except this function just sets data to \"\"\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "42842e0e",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3425:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3450:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3465:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3457:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3478:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3441:46:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3504:0:0"
									},
									"scope": 112,
									"src": "3416:89:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3511:575:0",
										"text": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n  THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n  operator, or the approved address for this NFT. Throws if `_from` is\n  not the current owner. Throws if `_to` is the zero address. Throws if\n  `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
									},
									"functionSelector": "23b872dd",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4100:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "4113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4136:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "4128:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4149:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "4141:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:46:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4175:0:0"
									},
									"scope": 112,
									"src": "4091:85:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "4181:352:0",
										"text": "@notice Set or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n @dev Throws unless `msg.sender` is the current NFT owner, or an authorized\n  operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
									},
									"functionSelector": "095ea7b3",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4547:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4563:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "4555:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4582:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "4574:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:37:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4608:0:0"
									},
									"scope": 112,
									"src": "4538:71:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "4615:386:0",
										"text": "@notice Enable or disable approval for a third party (\"operator\") to manage\n  all of `msg.sender`'s assets.\n @dev Emits the ApprovalForAll event. The contract MUST allow\n  multiple operators per owner.\n @param _operator Address to add to the set of authorized operators.\n @param _approved True if the operator is approved, false to revoke approval"
									},
									"functionSelector": "a22cb465",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5015:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5041:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "5033:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5057:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "5052:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5052:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5032:35:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5076:0:0"
									},
									"scope": 112,
									"src": "5006:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "5083:259:0",
										"text": "@notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
									},
									"functionSelector": "081812fc",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5356:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5376:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5368:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5367:18:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "5409:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:9:0"
									},
									"scope": 112,
									"src": "5347:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "5425:290:0",
										"text": "@notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
									},
									"functionSelector": "e985e9c5",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5729:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "5770:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5762:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5745:35:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5804:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5804:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5803:6:0"
									},
									"scope": 112,
									"src": "5720:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 137,
							"src": "249:5563:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "ERC165",
							"nameLocation": "5824:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "5837:373:0",
										"text": "@notice Query if a contract implements an interface\n @param interfaceID The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n  uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n  `interfaceID` is not 0xffffffff, `false` otherwise"
									},
									"functionSelector": "01ffc9a7",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6224:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "6249:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "6242:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 114,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6242:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6241:20:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "6285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6284:6:0"
									},
									"scope": 121,
									"src": "6215:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 137,
							"src": "5814:479:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721TokenReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "ERC721TokenReceiver",
							"nameLocation": "6305:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "6331:749:0",
										"text": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the\n recipient after a `transfer`. This function MAY throw to revert and reject the transfer. Return\n of other than the magic value MUST result in the transaction being reverted.\n @notice The contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n unless throwing"
									},
									"functionSelector": "150b7a02",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "7094:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "7119:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "7111:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7138:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "7130:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "7153:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "7145:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7176:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "7163:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7163:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:72:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "7200:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 132,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7200:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7199:8:0"
									},
									"scope": 136,
									"src": "7085:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 137,
							"src": "6295:915:0",
							"usedErrors": []
						}
					],
					"src": "37:7173:0"
				},
				"id": 0
			},
			"ERC-3519 SmartNft/SmartNFT.sol": {
				"ast": {
					"absolutePath": "ERC-3519 SmartNft/SmartNFT.sol",
					"exportedSymbols": {
						"ERC165": [
							121
						],
						"ERC721": [
							112
						],
						"ERC721TokenReceiver": [
							136
						],
						"smartNFT": [
							1393
						],
						"smartNFT_SC": [
							1255
						]
					},
					"id": 1256,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"absolutePath": "ERC-3519 SmartNft/smartNFT_interface.sol",
							"file": "./smartNFT_interface.sol",
							"id": 139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1256,
							"sourceUnit": 1394,
							"src": "62:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ERC-3519 SmartNft/ERC721_interface.sol",
							"file": "./ERC721_interface.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1256,
							"sourceUnit": 137,
							"src": "97:32:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 141,
										"name": "ERC721",
										"nameLocations": [
											"155:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "155:6:1"
									},
									"id": 142,
									"nodeType": "InheritanceSpecifier",
									"src": "155:6:1"
								},
								{
									"baseName": {
										"id": 143,
										"name": "smartNFT",
										"nameLocations": [
											"162:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1393,
										"src": "162:8:1"
									},
									"id": 144,
									"nodeType": "InheritanceSpecifier",
									"src": "162:8:1"
								}
							],
							"canonicalName": "smartNFT_SC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1255,
							"linearizedBaseContracts": [
								1255,
								1393,
								112
							],
							"name": "smartNFT_SC",
							"nameLocation": "140:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "smartNFT_SC.States",
									"id": 149,
									"members": [
										{
											"id": 145,
											"name": "waitingForOwner",
											"nameLocation": "191:15:1",
											"nodeType": "EnumValue",
											"src": "191:15:1"
										},
										{
											"id": 146,
											"name": "engagedWithOwner",
											"nameLocation": "208:16:1",
											"nodeType": "EnumValue",
											"src": "208:16:1"
										},
										{
											"id": 147,
											"name": "waitingForUser",
											"nameLocation": "226:14:1",
											"nodeType": "EnumValue",
											"src": "226:14:1"
										},
										{
											"id": 148,
											"name": "engagedWithUser",
											"nameLocation": "242:15:1",
											"nodeType": "EnumValue",
											"src": "242:15:1"
										}
									],
									"name": "States",
									"nameLocation": "182:6:1",
									"nodeType": "EnumDefinition",
									"src": "177:82:1"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "manufacturer",
									"nameLocation": "277:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "269:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 150,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "tokenCounter",
									"nameLocation": "391:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "383:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "383:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 157,
									"mutability": "mutable",
									"name": "ownerOfSD",
									"nameLocation": "537:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "509:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 156,
										"keyType": {
											"id": 154,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "517:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "509:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 155,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "528:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 161,
									"mutability": "mutable",
									"name": "tokenIDOfBCA",
									"nameLocation": "644:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "616:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 160,
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "624:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "616:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "635:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "ownerBalance",
									"nameLocation": "782:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "754:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "762:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "754:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "773:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "userBalance",
									"nameLocation": "881:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "853:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 168,
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "853:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "smartNFT_SC.Token_Struct",
									"id": 189,
									"members": [
										{
											"constant": false,
											"id": 171,
											"mutability": "mutable",
											"name": "approved",
											"nameLocation": "996:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "988:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 170,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "988:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "SD",
											"nameLocation": "1108:2:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1100:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 172,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1100:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1237:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1229:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1229:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "state",
											"nameLocation": "1338:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1331:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_States_$149",
												"typeString": "enum smartNFT_SC.States"
											},
											"typeName": {
												"id": 177,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 176,
													"name": "States",
													"nameLocations": [
														"1331:6:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 149,
													"src": "1331:6:1"
												},
												"referencedDeclaration": 149,
												"src": "1331:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_States_$149",
													"typeString": "enum smartNFT_SC.States"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "hashK_OD",
											"nameLocation": "1479:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1471:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1471:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "hashK_UD",
											"nameLocation": "1589:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1581:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 181,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1581:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "dataEngagement",
											"nameLocation": "1698:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1690:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1690:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 186,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1819:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1811:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 185,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1811:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "timeout",
											"nameLocation": "1929:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 189,
											"src": "1921:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 187,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1921:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token_Struct",
									"nameLocation": "966:12:1",
									"nodeType": "StructDefinition",
									"scope": 1255,
									"src": "959:1054:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 193,
									"mutability": "mutable",
									"name": "Secure_Token",
									"nameLocation": "2038:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1255,
									"src": "2023:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
										"typeString": "struct smartNFT_SC.Token_Struct[]"
									},
									"typeName": {
										"baseType": {
											"id": 191,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 190,
												"name": "Token_Struct",
												"nameLocations": [
													"2023:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 189,
												"src": "2023:12:1"
											},
											"referencedDeclaration": 189,
											"src": "2023:12:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Token_Struct_$189_storage_ptr",
												"typeString": "struct smartNFT_SC.Token_Struct"
											}
										},
										"id": 192,
										"nodeType": "ArrayTypeName",
										"src": "2023:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage_ptr",
											"typeString": "struct smartNFT_SC.Token_Struct[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2075:180:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 196,
														"name": "manufacturer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2085:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 197,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2100:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2104:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2100:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2085:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2085:25:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "tokenCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2120:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2135:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2120:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2120:16:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2185:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2177:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2177:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2177:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2197:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 213,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2189:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2189:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2209:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2201:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 217,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2201:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2201:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 221,
																		"name": "States",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "2213:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																			"typeString": "type(enum smartNFT_SC.States)"
																		}
																	},
																	"id": 222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2220:15:1",
																	"memberName": "waitingForOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "2213:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_States_$149",
																		"typeString": "enum smartNFT_SC.States"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2236:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2238:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2240:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2242:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"hexValue": "30",
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2244:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_enum$_States_$149",
																		"typeString": "enum smartNFT_SC.States"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 208,
																"name": "Token_Struct",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2164:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Token_Struct_$189_storage_ptr_$",
																	"typeString": "type(struct smartNFT_SC.Token_Struct storage pointer)"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2164:82:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_memory_ptr",
																"typeString": "struct smartNFT_SC.Token_Struct memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Token_Struct_$189_memory_ptr",
																"typeString": "struct smartNFT_SC.Token_Struct memory"
															}
														],
														"expression": {
															"id": 205,
															"name": "Secure_Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2146:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2159:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2146:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage_ptr_$_t_struct$_Token_Struct_$189_storage_$returns$__$bound_to$_t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct smartNFT_SC.Token_Struct storage ref[] storage pointer,struct smartNFT_SC.Token_Struct storage ref)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:101:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2146:101:1"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:0:1"
									},
									"scope": 1255,
									"src": "2061:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2370:872:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "manufacturer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "2449:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 244,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2465:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2469:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2465:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2449:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2441:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2441:35:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 250,
																"name": "_addressSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "2589:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 249,
															"name": "tokenFromBCA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "2576:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2576:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2602:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2576:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "3114:122:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 305,
																				"name": "_addressSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 234,
																				"src": "3213:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 304,
																			"name": "tokenFromBCA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "3200:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view returns (uint256)"
																			}
																		},
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3200:24:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 307,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3199:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 241,
															"id": 308,
															"nodeType": "Return",
															"src": "3193:32:1"
														}
													]
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "2573:663:1",
												"trueBody": {
													"id": 303,
													"nodeType": "Block",
													"src": "2604:506:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2690:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2682:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 258,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2682:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2682:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 262,
																				"name": "_addressSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 234,
																				"src": "2694:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 265,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2714:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2706:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 263,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2706:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2706:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 267,
																					"name": "States",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 149,
																					"src": "2718:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																						"typeString": "type(enum smartNFT_SC.States)"
																					}
																				},
																				"id": 268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2725:15:1",
																				"memberName": "waitingForOwner",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 145,
																				"src": "2718:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_States_$149",
																					"typeString": "enum smartNFT_SC.States"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2741:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "30",
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2743:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "30",
																				"id": 271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2745:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"expression": {
																					"id": 272,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2747:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2753:9:1",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2747:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "3836343030",
																				"id": 274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2763:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_86400_by_1",
																					"typeString": "int_const 86400"
																				},
																				"value": "86400"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_enum$_States_$149",
																					"typeString": "enum smartNFT_SC.States"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_86400_by_1",
																					"typeString": "int_const 86400"
																				}
																			],
																			"id": 257,
																			"name": "Token_Struct",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "2669:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Token_Struct_$189_storage_ptr_$",
																				"typeString": "type(struct smartNFT_SC.Token_Struct storage pointer)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2669:100:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_memory_ptr",
																			"typeString": "struct smartNFT_SC.Token_Struct memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Token_Struct_$189_memory_ptr",
																			"typeString": "struct smartNFT_SC.Token_Struct memory"
																		}
																	],
																	"expression": {
																		"id": 254,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "2651:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2664:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2651:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage_ptr_$_t_struct$_Token_Struct_$189_storage_$returns$__$bound_to$_t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct smartNFT_SC.Token_Struct storage ref[] storage pointer,struct smartNFT_SC.Token_Struct storage ref)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2651:119:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "ExpressionStatement",
															"src": "2651:119:1"
														},
														{
															"assignments": [
																279
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 279,
																	"mutability": "mutable",
																	"name": "_tokenId",
																	"nameLocation": "2830:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 303,
																	"src": "2822:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 278,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2822:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 282,
															"initialValue": {
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2841:15:1",
																"subExpression": {
																	"id": 280,
																	"name": "tokenCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "2841:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2822:34:1"
														},
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 283,
																		"name": "tokenIDOfBCA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "2870:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "_addressSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2883:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2870:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 286,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "2897:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2870:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "2870:35:1"
														},
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 289,
																		"name": "ownerOfSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "2953:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 291,
																	"indexExpression": {
																		"id": 290,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "2963:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 292,
																	"name": "_addressOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "2975:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2953:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "2953:35:1"
														},
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3002:29:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 295,
																		"name": "ownerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "3002:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 297,
																	"indexExpression": {
																		"id": 296,
																		"name": "_addressOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "3015:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3002:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "3002:29:1"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 300,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "3090:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 301,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3089:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 241,
															"id": 302,
															"nodeType": "Return",
															"src": "3083:16:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6ed776b2",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createToken",
									"nameLocation": "2274:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 238,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2344:8:1"
									},
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "2294:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2286:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_addressOwner",
												"nameLocation": "2314:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2306:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2285:43:1"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2362:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:9:1"
									},
									"scope": 1255,
									"src": "2265:977:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "3328:1230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 321,
																				"name": "ownerOfSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "3394:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 323,
																			"indexExpression": {
																				"id": 322,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 314,
																				"src": "3404:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3394:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 324,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3417:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3421:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3417:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3394:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3393:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_enum$_States_$149",
																			"typeString": "enum smartNFT_SC.States"
																		},
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 328,
																					"name": "Secure_Token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "3433:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																						"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																					}
																				},
																				"id": 330,
																				"indexExpression": {
																					"id": 329,
																					"name": "_tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 314,
																					"src": "3446:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3433:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																					"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																				}
																			},
																			"id": 331,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3456:5:1",
																			"memberName": "state",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 178,
																			"src": "3433:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_States_$149",
																				"typeString": "enum smartNFT_SC.States"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"expression": {
																				"id": 332,
																				"name": "States",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "3465:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																					"typeString": "type(enum smartNFT_SC.States)"
																				}
																			},
																			"id": 333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3472:16:1",
																			"memberName": "engagedWithOwner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 146,
																			"src": "3465:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_States_$149",
																				"typeString": "enum smartNFT_SC.States"
																			}
																		},
																		"src": "3433:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3432:57:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3393:96:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3385:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3385:105:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "3385:105:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 339,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "3504:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 341,
																		"indexExpression": {
																			"id": 340,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "3517:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3504:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3527:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 186,
																	"src": "3504:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 343,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "3539:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 345,
																		"indexExpression": {
																			"id": 344,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "3552:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3539:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3562:7:1",
																	"memberName": "timeout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "3539:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3504:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 348,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3503:67:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 349,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3579:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3503:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 424,
													"nodeType": "Block",
													"src": "4446:106:1",
													"statements": [
														{
															"expression": {
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 410,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4460:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 412,
																		"indexExpression": {
																			"id": 411,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "4473:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4460:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4483:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "4460:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4498:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4490:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 414,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4490:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4490:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4460:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 419,
															"nodeType": "ExpressionStatement",
															"src": "4460:40:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 421,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 314,
																		"src": "4532:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 420,
																	"name": "TimeoutAlarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "4519:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4519:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 423,
															"nodeType": "EmitStatement",
															"src": "4514:27:1"
														}
													]
												},
												"id": 425,
												"nodeType": "IfStatement",
												"src": "3500:1052:1",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "3589:853:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 352,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "3671:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 357,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 353,
																				"name": "Secure_Token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 193,
																				"src": "3683:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																					"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																				}
																			},
																			"id": 355,
																			"indexExpression": {
																				"id": 354,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 314,
																				"src": "3696:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3683:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3706:4:1",
																		"memberName": "user",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 175,
																		"src": "3683:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3671:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3712:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3671:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 369,
															"nodeType": "IfStatement",
															"src": "3668:193:1",
															"trueBody": {
																"id": 368,
																"nodeType": "Block",
																"src": "3714:147:1",
																"statements": [
																	{
																		"expression": {
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "3804:42:1",
																			"subExpression": {
																				"baseExpression": {
																					"id": 360,
																					"name": "userBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "3804:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 365,
																				"indexExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 361,
																							"name": "Secure_Token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 193,
																							"src": "3816:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																								"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																							}
																						},
																						"id": 363,
																						"indexExpression": {
																							"id": 362,
																							"name": "_tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 314,
																							"src": "3829:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3816:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																							"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																						}
																					},
																					"id": 364,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3839:4:1",
																					"memberName": "user",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 175,
																					"src": "3816:27:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3804:40:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 367,
																		"nodeType": "ExpressionStatement",
																		"src": "3804:42:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3942:27:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 370,
																		"name": "userBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "3942:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 372,
																	"indexExpression": {
																		"id": 371,
																		"name": "_addressUser",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "3954:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3942:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 374,
															"nodeType": "ExpressionStatement",
															"src": "3942:27:1"
														},
														{
															"expression": {
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 375,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4030:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 377,
																		"indexExpression": {
																			"id": 376,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "4043:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4030:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4053:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "4030:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 379,
																	"name": "_addressUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "4060:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4030:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 381,
															"nodeType": "ExpressionStatement",
															"src": "4030:42:1"
														},
														{
															"expression": {
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 382,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4142:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 384,
																		"indexExpression": {
																			"id": 383,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "4155:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4142:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4165:5:1",
																	"memberName": "state",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "4142:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_States_$149",
																		"typeString": "enum smartNFT_SC.States"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 386,
																		"name": "States",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "4173:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																			"typeString": "type(enum smartNFT_SC.States)"
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "4180:14:1",
																	"memberName": "waitingForUser",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "4173:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_States_$149",
																		"typeString": "enum smartNFT_SC.States"
																	}
																},
																"src": "4142:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4142:52:1"
														},
														{
															"expression": {
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 390,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4288:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 392,
																		"indexExpression": {
																			"id": 391,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "4301:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4288:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4311:14:1",
																	"memberName": "dataEngagement",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "4288:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4327:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4288:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 396,
															"nodeType": "ExpressionStatement",
															"src": "4288:40:1"
														},
														{
															"expression": {
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 397,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4342:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 399,
																		"indexExpression": {
																			"id": 398,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 314,
																			"src": "4355:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4342:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4365:8:1",
																	"memberName": "hashK_UD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "4342:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4376:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4342:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "4342:35:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 405,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 314,
																		"src": "4409:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 406,
																		"name": "_addressUser",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "4418:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 404,
																	"name": "UserAssigned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "4396:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4396:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 408,
															"nodeType": "EmitStatement",
															"src": "4391:40:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "db4d295b",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setUser",
									"nameLocation": "3257:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3320:8:1"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3273:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3265:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "3291:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "3283:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:40:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3328:0:1"
									},
									"scope": 1255,
									"src": "3248:1310:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1306
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "4682:474:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 438,
																	"name": "ownerOfSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "4771:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 440,
																"indexExpression": {
																	"id": 439,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "4781:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4771:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 441,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4794:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4798:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4794:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4771:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4763:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4763:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 446,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4819:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 448,
																		"indexExpression": {
																			"id": 447,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "4832:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4819:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4842:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 186,
																	"src": "4819:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 450,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4854:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 452,
																		"indexExpression": {
																			"id": 451,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "4867:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4854:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4877:7:1",
																	"memberName": "timeout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "4854:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4819:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4818:67:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 456,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4888:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4894:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4888:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4818:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "5044:106:1",
													"statements": [
														{
															"expression": {
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 474,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "5058:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 476,
																		"indexExpression": {
																			"id": 475,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "5071:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5058:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5081:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "5058:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5096:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5088:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 478,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5088:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5088:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5058:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 483,
															"nodeType": "ExpressionStatement",
															"src": "5058:40:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 485,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "5130:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 484,
																	"name": "TimeoutAlarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "5117:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5117:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 487,
															"nodeType": "EmitStatement",
															"src": "5112:27:1"
														}
													]
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "4815:335:1",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "4904:136:1",
													"statements": [
														{
															"expression": {
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 459,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4918:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 461,
																		"indexExpression": {
																			"id": 460,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "4931:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4918:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4941:14:1",
																	"memberName": "dataEngagement",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "4918:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 463,
																	"name": "_dataEngagement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "4958:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4918:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "4918:55:1"
														},
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 466,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "4987:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 468,
																		"indexExpression": {
																			"id": 467,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "5000:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4987:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5010:8:1",
																	"memberName": "hashK_OD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "4987:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 470,
																	"name": "_hashK_O",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "5021:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4987:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "4987:42:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "128da698",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startOwnerEngagement",
									"nameLocation": "4577:20:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4674:8:1"
									},
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4606:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4598:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "_dataEngagement",
												"nameLocation": "4624:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4616:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "_hashK_O",
												"nameLocation": "4649:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "4641:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:61:1"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4682:0:1"
									},
									"scope": 1255,
									"src": "4568:588:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1311
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "5232:686:1",
										"statements": [
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "_tokenId",
														"nameLocation": "5250:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "5242:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5242:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 500,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5274:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5278:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5274:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 499,
														"name": "tokenFromBCA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "5261:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5261:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5242:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 505,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "5380:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 507,
																	"indexExpression": {
																		"id": 506,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "5393:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5380:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5403:14:1",
																"memberName": "dataEngagement",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 184,
																"src": "5380:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5421:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5380:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5372:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5372:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "5372:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 514,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "5442:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 516,
																	"indexExpression": {
																		"id": 515,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "5455:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5442:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5465:8:1",
																"memberName": "hashK_OD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5442:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 518,
																"name": "_hashK_D",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "5477:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5442:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5433:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5433:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "5433:53:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 523,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "5505:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 525,
																	"indexExpression": {
																		"id": 524,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "5518:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5505:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5528:5:1",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "5505:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 527,
																	"name": "States",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "5537:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																		"typeString": "type(enum smartNFT_SC.States)"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5544:15:1",
																"memberName": "waitingForOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "5537:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"src": "5505:54:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5496:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5496:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "5496:64:1"
											},
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 532,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5623:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 534,
															"indexExpression": {
																"id": 533,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "5636:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5623:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5646:14:1",
														"memberName": "dataEngagement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "5623:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5663:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5623:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "5623:41:1"
											},
											{
												"expression": {
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 539,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5674:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 541,
															"indexExpression": {
																"id": 540,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "5687:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5674:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5697:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "5674:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 543,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5709:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5715:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5709:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5674:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "5674:50:1"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 547,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5770:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 549,
															"indexExpression": {
																"id": 548,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "5783:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5770:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5793:5:1",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "5770:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 551,
															"name": "States",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5801:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																"typeString": "type(enum smartNFT_SC.States)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5808:16:1",
														"memberName": "engagedWithOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "5801:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"src": "5770:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_States_$149",
														"typeString": "enum smartNFT_SC.States"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "5770:54:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 556,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5902:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "OwnerEngaged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "5889:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5889:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "5884:27:1"
											}
										]
									},
									"functionSelector": "ad2661fc",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerEngagement",
									"nameLocation": "5175:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5224:8:1"
									},
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_hashK_D",
												"nameLocation": "5199:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "5191:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5190:18:1"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5232:0:1"
									},
									"scope": 1255,
									"src": "5166:752:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1320
									],
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "6041:465:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 571,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "6109:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 573,
																	"indexExpression": {
																		"id": 572,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "6122:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6109:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6132:4:1",
																"memberName": "user",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 175,
																"src": "6109:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 575,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6140:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6144:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6140:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6109:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6101:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6101:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "6101:50:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 580,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "6169:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 582,
																		"indexExpression": {
																			"id": 581,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "6182:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6169:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6192:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 186,
																	"src": "6169:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 584,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "6204:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 586,
																		"indexExpression": {
																			"id": 585,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "6217:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6204:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6227:7:1",
																	"memberName": "timeout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "6204:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6169:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 589,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6168:67:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 590,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6238:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6244:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6238:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6168:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "6394:106:1",
													"statements": [
														{
															"expression": {
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 608,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "6408:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 610,
																		"indexExpression": {
																			"id": 609,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "6421:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6408:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6431:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "6408:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6446:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6438:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 612,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6438:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6438:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6408:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 617,
															"nodeType": "ExpressionStatement",
															"src": "6408:40:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "6480:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "TimeoutAlarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "6467:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6467:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "EmitStatement",
															"src": "6462:27:1"
														}
													]
												},
												"id": 623,
												"nodeType": "IfStatement",
												"src": "6165:335:1",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "6254:136:1",
													"statements": [
														{
															"expression": {
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 593,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "6268:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 595,
																		"indexExpression": {
																			"id": 594,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "6281:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6268:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6291:14:1",
																	"memberName": "dataEngagement",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "6268:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 597,
																	"name": "_dataEngagement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "6308:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6268:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 599,
															"nodeType": "ExpressionStatement",
															"src": "6268:55:1"
														},
														{
															"expression": {
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 600,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "6337:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 602,
																		"indexExpression": {
																			"id": 601,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "6350:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6337:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6360:8:1",
																	"memberName": "hashK_UD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "6337:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 604,
																	"name": "_hashK_U",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "6371:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6337:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "6337:42:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "adadaf40",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startUserEngagement",
									"nameLocation": "5937:19:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 568,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6033:8:1"
									},
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "5965:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5957:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "_dataEngagement",
												"nameLocation": "5983:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "5975:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "_hashK_U",
												"nameLocation": "6008:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "6000:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:61:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:0:1"
									},
									"scope": 1255,
									"src": "5928:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1325
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "6581:680:1",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "_tokenId",
														"nameLocation": "6599:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "6591:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6591:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 634,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6623:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6627:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6623:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 633,
														"name": "tokenFromBCA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "6610:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6610:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6591:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 639,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "6728:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 641,
																	"indexExpression": {
																		"id": 640,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "6741:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6728:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6751:14:1",
																"memberName": "dataEngagement",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 184,
																"src": "6728:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6769:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6728:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6720:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6720:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "6720:51:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 648,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "6790:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 650,
																	"indexExpression": {
																		"id": 649,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "6803:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6790:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6813:8:1",
																"memberName": "hashK_UD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "6790:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 652,
																"name": "_hashK_D",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "6825:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6790:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6781:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6781:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "6781:53:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 657,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "6853:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 659,
																	"indexExpression": {
																		"id": 658,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "6866:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6853:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6876:5:1",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "6853:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 661,
																	"name": "States",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "6885:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																		"typeString": "type(enum smartNFT_SC.States)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6892:14:1",
																"memberName": "waitingForUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 147,
																"src": "6885:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"src": "6853:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6844:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6844:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "6844:63:1"
											},
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 666,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "6969:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 668,
															"indexExpression": {
																"id": 667,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "6982:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6969:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6992:14:1",
														"memberName": "dataEngagement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "6969:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7009:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6969:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "6969:41:1"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 673,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "7020:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 675,
															"indexExpression": {
																"id": 674,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "7033:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7020:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7043:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "7020:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 677,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7055:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7061:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7055:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7020:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "7020:50:1"
											},
											{
												"expression": {
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 681,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "7116:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 683,
															"indexExpression": {
																"id": 682,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "7129:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7116:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7139:5:1",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "7116:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 685,
															"name": "States",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "7147:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																"typeString": "type(enum smartNFT_SC.States)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7154:15:1",
														"memberName": "engagedWithUser",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 148,
														"src": "7147:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"src": "7116:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_States_$149",
														"typeString": "enum smartNFT_SC.States"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "7116:53:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 690,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "7245:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "UserEngaged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "7233:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7233:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "EmitStatement",
												"src": "7228:26:1"
											}
										]
									},
									"functionSelector": "531f2bcd",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userEngagement",
									"nameLocation": "6525:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 629,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6573:8:1"
									},
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "_hashK_D",
												"nameLocation": "6548:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6540:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6539:18:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6581:0:1"
									},
									"scope": 1255,
									"src": "6516:745:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1350
									],
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "7364:49:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 702,
																"name": "tokenIDOfBCA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "7381:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 704,
															"indexExpression": {
																"id": 703,
																"name": "_addressSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "7394:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7381:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 705,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7380:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 701,
												"id": 706,
												"nodeType": "Return",
												"src": "7374:32:1"
											}
										]
									},
									"functionSelector": "e61e3a76",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromBCA",
									"nameLocation": "7285:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7338:8:1"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "7306:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7298:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7297:20:1"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7356:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7355:9:1"
									},
									"scope": 1255,
									"src": "7276:137:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "7513:60:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 716,
																"name": "ownerOfSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "7530:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 720,
															"indexExpression": {
																"baseExpression": {
																	"id": 717,
																	"name": "tokenIDOfBCA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "7540:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 719,
																"indexExpression": {
																	"id": 718,
																	"name": "_addressSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7553:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7530:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 721,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7529:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 715,
												"id": 722,
												"nodeType": "Return",
												"src": "7523:43:1"
											}
										]
									},
									"functionSelector": "f7b44a0f",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOfFromBCA",
									"nameLocation": "7432:14:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7487:8:1"
									},
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "7455:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "7447:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7446:20:1"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "7505:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7505:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7504:9:1"
									},
									"scope": 1255,
									"src": "7423:150:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1366
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "7663:53:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 732,
																	"name": "Secure_Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "7681:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																	}
																},
																"id": 734,
																"indexExpression": {
																	"id": 733,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7694:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7681:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7704:4:1",
															"memberName": "user",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "7681:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 736,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7680:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 731,
												"id": 737,
												"nodeType": "Return",
												"src": "7674:35:1"
											}
										]
									},
									"functionSelector": "c2f1f14a",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userOf",
									"nameLocation": "7592:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 728,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7637:8:1"
									},
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "7607:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "7599:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7598:18:1"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "7655:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7654:9:1"
									},
									"scope": 1255,
									"src": "7583:133:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1374
									],
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "7815:68:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 747,
																	"name": "Secure_Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "7832:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																	}
																},
																"id": 751,
																"indexExpression": {
																	"baseExpression": {
																		"id": 748,
																		"name": "tokenIDOfBCA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "7845:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 750,
																	"indexExpression": {
																		"id": 749,
																		"name": "_addressSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "7858:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7845:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7832:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7871:4:1",
															"memberName": "user",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "7832:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 753,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7831:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 746,
												"id": 754,
												"nodeType": "Return",
												"src": "7825:51:1"
											}
										]
									},
									"functionSelector": "d1553258",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userOfFromBCA",
									"nameLocation": "7735:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 743,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7784:8:1"
									},
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "7757:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "7749:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7749:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7748:20:1"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "7807:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7807:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7806:9:1"
									},
									"scope": 1255,
									"src": "7726:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1382
									],
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "7987:50:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 764,
																"name": "userBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "8004:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 766,
															"indexExpression": {
																"id": 765,
																"name": "_addressUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "8016:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8004:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 767,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8003:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 768,
												"nodeType": "Return",
												"src": "7997:33:1"
											}
										]
									},
									"functionSelector": "0cb22289",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userBalanceOf",
									"nameLocation": "7905:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 760,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7956:8:1"
									},
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "7927:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7919:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7918:22:1"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "7979:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7978:9:1"
									},
									"scope": 1255,
									"src": "7896:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1392
									],
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "8168:22:1",
										"statements": []
									},
									"functionSelector": "5a9f8682",
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userBalanceOfAnOwner",
									"nameLocation": "8056:20:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 776,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8137:8:1"
									},
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "8085:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "8077:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8077:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "_addressOwner",
												"nameLocation": "8107:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "8099:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8076:45:1"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "8160:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8159:9:1"
									},
									"scope": 1255,
									"src": "8047:143:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "8537:481:1",
										"statements": [
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 794,
														"name": "_BCA_OWNER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "8547:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 795,
															"name": "ownerOfSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "8560:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 797,
														"indexExpression": {
															"id": 796,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8570:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8560:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8547:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "8547:32:1"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "_BCA_USER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "8589:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 801,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "8601:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 803,
															"indexExpression": {
																"id": 802,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "8614:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8601:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8624:4:1",
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "8601:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8589:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "8589:39:1"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "_BCA_SD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "8638:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 808,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "8648:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 810,
															"indexExpression": {
																"id": 809,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "8661:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8648:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8671:2:1",
														"memberName": "SD",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 173,
														"src": "8648:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8638:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "8638:35:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_States_$149",
														"typeString": "enum smartNFT_SC.States"
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 814,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "8686:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 816,
															"indexExpression": {
																"id": 815,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "8699:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8686:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8709:5:1",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "8686:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 818,
															"name": "States",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "8718:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																"typeString": "type(enum smartNFT_SC.States)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8725:15:1",
														"memberName": "waitingForOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "8718:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"src": "8686:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 826,
																	"name": "Secure_Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "8784:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																	}
																},
																"id": 828,
																"indexExpression": {
																	"id": 827,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "8797:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8784:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8807:5:1",
															"memberName": "state",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 178,
															"src": "8784:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 830,
																"name": "States",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "8816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																	"typeString": "type(enum smartNFT_SC.States)"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8823:16:1",
															"memberName": "engagedWithOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 146,
															"src": "8816:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															}
														},
														"src": "8784:55:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 838,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "8883:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 840,
																	"indexExpression": {
																		"id": 839,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "8896:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8883:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8906:5:1",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "8883:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 842,
																	"name": "States",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "8915:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																		"typeString": "type(enum smartNFT_SC.States)"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8922:14:1",
																"memberName": "waitingForUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 147,
																"src": "8915:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"src": "8883:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 854,
															"nodeType": "Block",
															"src": "8977:35:1",
															"statements": [
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 850,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "8991:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "33",
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9000:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "8991:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "8991:10:1"
																}
															]
														},
														"id": 855,
														"nodeType": "IfStatement",
														"src": "8880:132:1",
														"trueBody": {
															"id": 849,
															"nodeType": "Block",
															"src": "8937:35:1",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 845,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "8951:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8960:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8951:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "8951:10:1"
																}
															]
														}
													},
													"id": 856,
													"nodeType": "IfStatement",
													"src": "8781:231:1",
													"trueBody": {
														"id": 837,
														"nodeType": "Block",
														"src": "8840:35:1",
														"statements": [
															{
																"expression": {
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 833,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "8854:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8863:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8854:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 836,
																"nodeType": "ExpressionStatement",
																"src": "8854:10:1"
															}
														]
													}
												},
												"id": 857,
												"nodeType": "IfStatement",
												"src": "8683:329:1",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "8741:35:1",
													"statements": [
														{
															"expression": {
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 821,
																	"name": "_state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "8755:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8755:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 824,
															"nodeType": "ExpressionStatement",
															"src": "8755:10:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "219a5823",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInfoToken",
									"nameLocation": "8209:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "8230:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "8222:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8221:18:1"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_BCA_OWNER",
												"nameLocation": "8270:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "8262:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_BCA_USER",
												"nameLocation": "8358:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "8350:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "_BCA_SD",
												"nameLocation": "8445:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "8437:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8437:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "8530:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "8522:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 791,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8522:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8260:277:1"
									},
									"scope": 1255,
									"src": "8200:818:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "9375:481:1",
										"statements": [
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 872,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9385:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 873,
															"name": "tokenIDOfBCA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "9396:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 875,
														"indexExpression": {
															"id": 874,
															"name": "_addressSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "9409:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9396:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9385:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "9385:35:1"
											},
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 878,
														"name": "_BCA_OWNER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "9430:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 879,
															"name": "ownerOfSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "9443:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 881,
														"indexExpression": {
															"id": 880,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "9453:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9443:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9430:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "9430:32:1"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 884,
														"name": "_BCA_USER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9472:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 885,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "9484:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 887,
															"indexExpression": {
																"id": 886,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "9497:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9484:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9507:4:1",
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 175,
														"src": "9484:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9472:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "9472:39:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_States_$149",
														"typeString": "enum smartNFT_SC.States"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 891,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "9524:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 893,
															"indexExpression": {
																"id": 892,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "9537:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9524:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9547:5:1",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "9524:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 895,
															"name": "States",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "9556:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																"typeString": "type(enum smartNFT_SC.States)"
															}
														},
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9563:15:1",
														"memberName": "waitingForOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "9556:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														}
													},
													"src": "9524:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_States_$149",
															"typeString": "enum smartNFT_SC.States"
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 903,
																	"name": "Secure_Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "9622:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"id": 904,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "9635:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9622:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9645:5:1",
															"memberName": "state",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 178,
															"src": "9622:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 907,
																"name": "States",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "9654:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																	"typeString": "type(enum smartNFT_SC.States)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9661:16:1",
															"memberName": "engagedWithOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 146,
															"src": "9654:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															}
														},
														"src": "9622:55:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_States_$149",
																"typeString": "enum smartNFT_SC.States"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 915,
																		"name": "Secure_Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "9721:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 917,
																	"indexExpression": {
																		"id": 916,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "9734:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9721:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																		"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9744:5:1",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 178,
																"src": "9721:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 919,
																	"name": "States",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "9753:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																		"typeString": "type(enum smartNFT_SC.States)"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9760:14:1",
																"memberName": "waitingForUser",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 147,
																"src": "9753:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"src": "9721:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 931,
															"nodeType": "Block",
															"src": "9815:35:1",
															"statements": [
																{
																	"expression": {
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 927,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "9829:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "33",
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9838:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "9829:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 930,
																	"nodeType": "ExpressionStatement",
																	"src": "9829:10:1"
																}
															]
														},
														"id": 932,
														"nodeType": "IfStatement",
														"src": "9718:132:1",
														"trueBody": {
															"id": 926,
															"nodeType": "Block",
															"src": "9775:35:1",
															"statements": [
																{
																	"expression": {
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 922,
																			"name": "_state",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "9789:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9798:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9789:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 925,
																	"nodeType": "ExpressionStatement",
																	"src": "9789:10:1"
																}
															]
														}
													},
													"id": 933,
													"nodeType": "IfStatement",
													"src": "9619:231:1",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "9678:35:1",
														"statements": [
															{
																"expression": {
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 910,
																		"name": "_state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "9692:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9701:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9692:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 913,
																"nodeType": "ExpressionStatement",
																"src": "9692:10:1"
															}
														]
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "9521:329:1",
												"trueBody": {
													"id": 902,
													"nodeType": "Block",
													"src": "9579:35:1",
													"statements": [
														{
															"expression": {
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 898,
																	"name": "_state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "9593:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9602:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9593:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 901,
															"nodeType": "ExpressionStatement",
															"src": "9593:10:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b684bf0c",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInfoTokenFromBCA",
									"nameLocation": "9037:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "9065:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "9057:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9057:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9056:20:1"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_BCA_OWNER",
												"nameLocation": "9107:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "9099:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_BCA_USER",
												"nameLocation": "9195:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "9187:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "9282:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "9274:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "9368:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "9360:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 869,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9360:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9097:278:1"
									},
									"scope": 1255,
									"src": "9028:828:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										37
									],
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "9947:45:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 944,
																"name": "ownerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9964:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 946,
															"indexExpression": {
																"id": 945,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "9977:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9964:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 947,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9963:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 948,
												"nodeType": "Return",
												"src": "9957:28:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "9875:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 940,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9916:8:1"
									},
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "9893:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "9885:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9884:16:1"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "9939:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9939:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9938:9:1"
									},
									"scope": 1255,
									"src": "9866:126:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										45
									],
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "10083:44:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 958,
																"name": "ownerOfSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "10100:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 960,
															"indexExpression": {
																"id": 959,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "10110:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10100:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 961,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10099:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 957,
												"id": 962,
												"nodeType": "Return",
												"src": "10093:27:1"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "10011:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 954,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10052:8:1"
									},
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "10027:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10019:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:18:1"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10074:9:1"
									},
									"scope": 1255,
									"src": "10002:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										57
									],
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "10255:16:1",
										"statements": []
									},
									"functionSelector": "b88d4fde",
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10142:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 974,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10239:8:1"
									},
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "10167:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10159:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10182:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10174:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "10195:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10187:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10218:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "10205:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10205:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10158:65:1"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10255:0:1"
									},
									"scope": 1255,
									"src": "10133:138:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										67
									],
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "10380:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "10403:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "10410:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "10415:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 987,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "10390:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10390:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "10390:34:1"
											}
										]
									},
									"functionSelector": "42842e0e",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10286:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 985,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10364:8:1"
									},
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "10311:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "10303:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10326:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "10318:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "10339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "10331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10302:46:1"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10380:0:1"
									},
									"scope": 1255,
									"src": "10277:154:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										77
									],
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "10536:936:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1005,
																				"name": "ownerOfSD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 157,
																				"src": "10555:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 1007,
																			"indexExpression": {
																				"id": 1006,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "10565:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10555:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1008,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "10578:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10582:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "10578:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10555:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10554:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1012,
																					"name": "Secure_Token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "10592:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																						"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																					}
																				},
																				"id": 1014,
																				"indexExpression": {
																					"id": 1013,
																					"name": "_tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "10605:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10592:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																					"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																				}
																			},
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10615:8:1",
																			"memberName": "approved",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 171,
																			"src": "10592:31:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1016,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "10627:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10631:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "10627:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "10592:45:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10591:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10554:84:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10546:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10546:93:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "10546:93:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1024,
																	"name": "ownerOfSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "10657:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1026,
																"indexExpression": {
																	"id": 1025,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "10667:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10657:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1027,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "10680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10657:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10649:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10649:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "10649:37:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1031,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "10700:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1033,
																		"indexExpression": {
																			"id": 1032,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "10713:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10700:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10723:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 186,
																	"src": "10700:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1035,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "10735:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1037,
																		"indexExpression": {
																			"id": 1036,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "10748:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10735:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10758:7:1",
																	"memberName": "timeout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "10735:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10700:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1040,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10699:67:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1041,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10769:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10775:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10769:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10699:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "11360:106:1",
													"statements": [
														{
															"expression": {
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1106,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "11374:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1108,
																		"indexExpression": {
																			"id": 1107,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "11387:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11374:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11397:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "11374:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11412:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11404:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1110,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11404:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11404:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11374:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1115,
															"nodeType": "ExpressionStatement",
															"src": "11374:40:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1117,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "11446:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1116,
																	"name": "TimeoutAlarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "11433:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11433:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1119,
															"nodeType": "EmitStatement",
															"src": "11428:27:1"
														}
													]
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "10696:770:1",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "10785:571:1",
													"statements": [
														{
															"expression": {
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1044,
																		"name": "ownerOfSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "10799:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1046,
																	"indexExpression": {
																		"id": 1045,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "10809:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10799:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1047,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "10821:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10799:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"nodeType": "ExpressionStatement",
															"src": "10799:25:1"
														},
														{
															"expression": {
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "10838:21:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 1050,
																		"name": "ownerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "10838:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1052,
																	"indexExpression": {
																		"id": 1051,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "10851:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10838:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1054,
															"nodeType": "ExpressionStatement",
															"src": "10838:21:1"
														},
														{
															"expression": {
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "10873:19:1",
																"subExpression": {
																	"baseExpression": {
																		"id": 1055,
																		"name": "ownerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "10873:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1057,
																	"indexExpression": {
																		"id": 1056,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "10886:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10873:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1059,
															"nodeType": "ExpressionStatement",
															"src": "10873:19:1"
														},
														{
															"expression": {
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1060,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "10966:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1062,
																		"indexExpression": {
																			"id": 1061,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "10979:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10966:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10989:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "10966:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11004:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10996:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1064,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10996:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10996:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10966:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1069,
															"nodeType": "ExpressionStatement",
															"src": "10966:40:1"
														},
														{
															"expression": {
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1070,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "11020:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1072,
																		"indexExpression": {
																			"id": 1071,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "11033:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11020:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11043:5:1",
																	"memberName": "state",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "11020:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_States_$149",
																		"typeString": "enum smartNFT_SC.States"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1074,
																		"name": "States",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "11051:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_States_$149_$",
																			"typeString": "type(enum smartNFT_SC.States)"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11058:15:1",
																	"memberName": "waitingForOwner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11051:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_States_$149",
																		"typeString": "enum smartNFT_SC.States"
																	}
																},
																"src": "11020:53:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_States_$149",
																	"typeString": "enum smartNFT_SC.States"
																}
															},
															"id": 1077,
															"nodeType": "ExpressionStatement",
															"src": "11020:53:1"
														},
														{
															"expression": {
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1078,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "11159:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1080,
																		"indexExpression": {
																			"id": 1079,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "11172:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11159:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11182:14:1",
																	"memberName": "dataEngagement",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 184,
																	"src": "11159:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11199:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11159:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1084,
															"nodeType": "ExpressionStatement",
															"src": "11159:41:1"
														},
														{
															"expression": {
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1085,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "11214:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1087,
																		"indexExpression": {
																			"id": 1086,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "11227:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11214:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11237:8:1",
																	"memberName": "hashK_UD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "11214:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11248:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11214:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1091,
															"nodeType": "ExpressionStatement",
															"src": "11214:35:1"
														},
														{
															"expression": {
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1092,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "11263:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1094,
																		"indexExpression": {
																			"id": 1093,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "11276:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11263:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11286:8:1",
																	"memberName": "hashK_OD",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "11263:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11297:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11263:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1098,
															"nodeType": "ExpressionStatement",
															"src": "11263:35:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1100,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "11326:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1101,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "11332:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1102,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "11336:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1099,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "11317:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11317:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "EmitStatement",
															"src": "11312:33:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10446:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1002,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10520:8:1"
									},
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "10467:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "10459:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10459:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10482:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "10474:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "10495:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "10487:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10487:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10458:46:1"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10536:0:1"
									},
									"scope": 1255,
									"src": "10437:1035:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										85
									],
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "11563:16:1",
										"statements": []
									},
									"functionSelector": "095ea7b3",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11487:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11547:8:1"
									},
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "11503:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "11495:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "11522:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "11514:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11494:37:1"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11563:0:1"
									},
									"scope": 1255,
									"src": "11478:101:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "11670:16:1",
										"statements": []
									},
									"functionSelector": "a22cb465",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "11594:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11662:8:1"
									},
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "11620:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "11612:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "11636:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "11631:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11631:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11611:35:1"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11670:0:1"
									},
									"scope": 1255,
									"src": "11585:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										101
									],
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "11777:16:1",
										"statements": []
									},
									"functionSelector": "081812fc",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "11701:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11746:8:1"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "11721:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "11713:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11712:18:1"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "11769:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11768:9:1"
									},
									"scope": 1255,
									"src": "11692:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										111
									],
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "11903:16:1",
										"statements": []
									},
									"functionSelector": "e985e9c5",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "11808:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1156,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11875:8:1"
									},
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "11833:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "11825:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "11849:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "11841:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11841:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:35:1"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "11898:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11898:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11897:6:1"
									},
									"scope": 1255,
									"src": "11799:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1332
									],
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "12007:329:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1170,
																	"name": "ownerOfSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "12025:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1172,
																"indexExpression": {
																	"id": 1171,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "12035:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12025:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1173,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12048:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12052:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12048:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12025:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12017:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12017:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "12017:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1178,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "12073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1180,
																		"indexExpression": {
																			"id": 1179,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "12086:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12073:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12096:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 186,
																	"src": "12073:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1182,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "12108:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1184,
																		"indexExpression": {
																			"id": 1183,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "12121:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12108:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12131:7:1",
																	"memberName": "timeout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 188,
																	"src": "12108:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12073:65:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1187,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12072:67:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1188,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12142:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12148:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12142:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12072:85:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "12198:132:1",
													"statements": [
														{
															"expression": {
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1194,
																			"name": "Secure_Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 193,
																			"src": "12212:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																				"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																			}
																		},
																		"id": 1196,
																		"indexExpression": {
																			"id": 1195,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "12225:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12212:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																			"typeString": "struct smartNFT_SC.Token_Struct storage ref"
																		}
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "12235:4:1",
																	"memberName": "user",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 175,
																	"src": "12212:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12242:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1198,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12242:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12242:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12212:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "12212:40:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "12284:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1204,
																	"name": "TimeoutAlarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "12271:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12271:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1207,
															"nodeType": "EmitStatement",
															"src": "12266:27:1"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12314:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1168,
															"id": 1209,
															"nodeType": "Return",
															"src": "12307:12:1"
														}
													]
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "12069:261:1",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "12158:36:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12179:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1168,
															"id": 1192,
															"nodeType": "Return",
															"src": "12172:11:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5329c681",
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkTimeout",
									"nameLocation": "11938:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11984:8:1"
									},
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "11959:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "11951:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11950:18:1"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "12002:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12002:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12001:6:1"
									},
									"scope": 1255,
									"src": "11929:407:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1342
									],
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "12396:83:1",
										"statements": [
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1217,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "12406:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 1222,
															"indexExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1219,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12432:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12436:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12432:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1218,
																	"name": "tokenFromBCA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "12419:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12419:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12406:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12445:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 186,
														"src": "12406:48:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1224,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12457:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12463:9:1",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "12457:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12406:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "12406:66:1"
											}
										]
									},
									"functionSelector": "1c5be3d7",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTimestamp",
									"nameLocation": "12355:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12388:8:1"
									},
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12370:2:1"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12396:0:1"
									},
									"scope": 1255,
									"src": "12346:133:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "12568:110:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1238,
																	"name": "ownerOfSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "12586:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1240,
																"indexExpression": {
																	"id": 1239,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "12596:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12586:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1241,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12609:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12613:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12609:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12586:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12578:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12578:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "12578:42:1"
											},
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1246,
																"name": "Secure_Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "12630:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Token_Struct_$189_storage_$dyn_storage",
																	"typeString": "struct smartNFT_SC.Token_Struct storage ref[] storage ref"
																}
															},
															"id": 1248,
															"indexExpression": {
																"id": 1247,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "12643:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12630:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_Struct_$189_storage",
																"typeString": "struct smartNFT_SC.Token_Struct storage ref"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12653:7:1",
														"memberName": "timeout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "12630:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1250,
														"name": "_timeout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "12663:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12630:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "12630:41:1"
											}
										]
									},
									"functionSelector": "0b6df367",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTimeout",
									"nameLocation": "12498:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12560:8:1"
									},
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "12517:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "12509:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12509:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_timeout",
												"nameLocation": "12535:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "12527:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12508:36:1"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12568:0:1"
									},
									"scope": 1255,
									"src": "12489:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1256,
							"src": "131:12549:1",
							"usedErrors": []
						}
					],
					"src": "37:12643:1"
				},
				"id": 1
			},
			"ERC-3519 SmartNft/smartNFT_interface.sol": {
				"ast": {
					"absolutePath": "ERC-3519 SmartNft/smartNFT_interface.sol",
					"exportedSymbols": {
						"smartNFT": [
							1393
						]
					},
					"id": 1394,
					"license": "CC0-1.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "smartNFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1258,
								"nodeType": "StructuredDocumentation",
								"src": "61:75:2",
								"text": "@title smartNFT: Hardblock - ERC-721 Non-Fungible Token Standard-based"
							},
							"fullyImplemented": false,
							"id": 1393,
							"linearizedBaseContracts": [
								1393
							],
							"name": "smartNFT",
							"nameLocation": "146:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "160:169:2",
										"text": "@dev This emits when an user of a NFT changes\n  This event emits when the user of a token is assigned\n  (`_addressUser` == 0) when a user is unassigned"
									},
									"eventSelector": "a366111dc7688b9ffb71476107b8b733fd141e7b370cff8480c03f4ec4409cd7",
									"id": 1265,
									"name": "UserAssigned",
									"nameLocation": "340:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "369:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "353:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "394:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "378:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:55:2"
									},
									"src": "334:74:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "418:143:2",
										"text": "@dev This emits when an user of a NFT verifies a device\n  This event emits when the user of a device finishes the assignment process"
									},
									"eventSelector": "0a74f4ab94fad84ffc38a74f59789bf53235489daa6ae3b0010116780c1588a4",
									"id": 1270,
									"name": "UserEngaged",
									"nameLocation": "572:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "600:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "584:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:25:2"
									},
									"src": "566:43:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "619:143:2",
										"text": "@dev This emits when an owner of a NFT verifies a device\n  This event emits when the owner of a device finishes the transfer process"
									},
									"eventSelector": "d0582651f57ffea78c4fa2df3eaf04bf2ff083277a6c1145411c72b9c1dc474c",
									"id": 1275,
									"name": "OwnerEngaged",
									"nameLocation": "773:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "802:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "786:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:25:2"
									},
									"src": "767:44:2"
								},
								{
									"anonymous": false,
									"eventSelector": "7e1636e7e3d95ceaa354ed9d47ea056b46cbcc0c448b26c6efaac0af33100305",
									"id": 1279,
									"name": "TimeoutAlarm",
									"nameLocation": "873:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "902:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "886:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:25:2"
									},
									"src": "867:44:2"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "917:530:2",
										"text": "@notice This function defines how the smart device is bound to a new token\n @dev Only the manufacturer of the smart device account can create a token and will be the first owner of the token\n  The initial state of the token is \"waitingForOwner\" until verified by the new owner\n @param _addressSD An address generated by the smart device. Only de smart device can generate this account. _addressOwner is the first owner of the Smart Device\n @return The tokenID of the token bound to the smart device"
									},
									"functionSelector": "6ed776b2",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createToken",
									"nameLocation": "1461:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "1481:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1473:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "_addressOwner",
												"nameLocation": "1501:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1493:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:43:2"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1534:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:9:2"
									},
									"scope": 1393,
									"src": "1452:91:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "1549:510:2",
										"text": "@notice This function defines the transference of use of a smart device\n @dev Only the owner of the token account can transfer a token provided that the state of the token is \"engagedWithOwner\",\"waitingForUser\" or \"engagedWithUser\".\n  The state of the token must change to \"waitingForUser\" and the parameter addressUser of the token defined by _tokenID must change to _addressUser\n @param _tokenId The tokenID of the smart device\n @param _addressUser The address of the new user"
									},
									"functionSelector": "db4d295b",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUser",
									"nameLocation": "2073:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2081:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "2107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2099:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:40:2"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2129:0:2"
									},
									"scope": 1393,
									"src": "2064:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "128da698",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startOwnerEngagement",
									"nameLocation": "2193:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2222:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "2214:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_dataEngage",
												"nameLocation": "2240:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "2232:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_hashK_O",
												"nameLocation": "2261:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "2253:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:57:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:0:2"
									},
									"scope": 1393,
									"src": "2184:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad2661fc",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerEngagement",
									"nameLocation": "2294:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_hashK_D",
												"nameLocation": "2318:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "2310:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2309:18:2"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:0:2"
									},
									"scope": 1393,
									"src": "2285:52:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "adadaf40",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "startUserEngagement",
									"nameLocation": "2352:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2380:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2372:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2372:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_dataEngage",
												"nameLocation": "2398:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2390:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_hashK_U",
												"nameLocation": "2419:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "2411:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2371:57:2"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:2"
									},
									"scope": 1393,
									"src": "2343:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "531f2bcd",
									"id": 1325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userEngagement",
									"nameLocation": "2452:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_hashK_D",
												"nameLocation": "2475:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2467:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:18:2"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:2"
									},
									"scope": 1393,
									"src": "2443:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5329c681",
									"id": 1332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkTimeout",
									"nameLocation": "2509:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2530:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2522:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:18:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2558:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2558:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:6:2"
									},
									"scope": 1393,
									"src": "2500:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0b6df367",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTimeout",
									"nameLocation": "2578:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2597:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2589:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_timeout",
												"nameLocation": "2615:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2607:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:36:2"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:2"
									},
									"scope": 1393,
									"src": "2569:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c5be3d7",
									"id": 1342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTimestamp",
									"nameLocation": "2649:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2664:2:2"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:0:2"
									},
									"scope": 1393,
									"src": "2640:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "2687:309:2",
										"text": "@notice This function let us obtain the tokenID from an address of smart device \n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressSD The address to obtain its token ID\n @return The token ID of the token bound to _addressSD"
									},
									"functionSelector": "e61e3a76",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromBCA",
									"nameLocation": "3010:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "3031:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3023:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:20:2"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "3066:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3066:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3065:9:2"
									},
									"scope": 1393,
									"src": "3001:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "3085:323:2",
										"text": "@notice This function let us know who is the owner of the token from the address of the smart device\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressSD The address to obtain its owner\n @return The owner of the token bound to _addressSD"
									},
									"functionSelector": "f7b44a0f",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOfFromBCA",
									"nameLocation": "3422:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "3445:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3437:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:20:2"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "3480:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:9:2"
									},
									"scope": 1393,
									"src": "3413:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "3499:293:2",
										"text": "@notice This function let us know who is the user of the token from the tokenId\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _tokenId of the token to obtain its user\n @return The user of the token with _tokenId"
									},
									"functionSelector": "c2f1f14a",
									"id": 1366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userOf",
									"nameLocation": "3806:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3821:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "3813:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3812:18:2"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "3854:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:9:2"
									},
									"scope": 1393,
									"src": "3797:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "3873:322:2",
										"text": "@notice This function let us know who is the user of the token from the address of the smart device\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressSD The address to obtain its user.\n @return The user of the token bound to _addressSD."
									},
									"functionSelector": "d1553258",
									"id": 1374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userOfFromBCA",
									"nameLocation": "4209:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "_addressSD",
												"nameLocation": "4231:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4223:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4222:20:2"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4266:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:9:2"
									},
									"scope": 1393,
									"src": "4200:75:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "4285:297:2",
										"text": "@notice This function let us know how many tokens an user has\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressUser The address of the user to know the number of tokens\n @return The number of tokens of the user"
									},
									"functionSelector": "0cb22289",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userBalanceOf",
									"nameLocation": "4596:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "4618:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4610:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4609:22:2"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4655:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4654:9:2"
									},
									"scope": 1393,
									"src": "4587:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "4674:398:2",
										"text": "@notice This function let us know how many tokens of an owner an user has\n @dev Everybody can call this function. It does not execute any code on blockchain, only reads\n @param _addressUser The address of the user to know the number of tokens\n @param _addressOwner The address of the owner of the tokens\n @return The number of tokens of an owner that an user can use"
									},
									"functionSelector": "5a9f8682",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "userBalanceOfAnOwner",
									"nameLocation": "5086:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "_addressUser",
												"nameLocation": "5115:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5107:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "_addressOwner",
												"nameLocation": "5137:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5129:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5106:45:2"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5175:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5174:9:2"
									},
									"scope": 1393,
									"src": "5077:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1394,
							"src": "136:5050:2",
							"usedErrors": []
						}
					],
					"src": "36:5150:2"
				},
				"id": 2
			}
		}
	}
}