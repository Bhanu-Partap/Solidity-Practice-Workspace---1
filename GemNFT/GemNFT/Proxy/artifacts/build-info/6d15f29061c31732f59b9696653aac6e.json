{
	"id": "6d15f29061c31732f59b9696653aac6e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Gemstone/Proxy/BeaconProxyNFTdynamic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\nimport  \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\";\nimport \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\";\n\ncontract nftCollectionBeacon is BeaconProxy{\n    constructor(address beacon,string memory name,string memory symbol,address identity,address admin,address owner) BeaconProxy(beacon,\"\"){\naddress implementation=_implementation();\n (bool success, ) = implementation.delegatecall(\n            abi.encodeWithSignature(\n                \"initialize(string,string,address,address,address)\",\n                name,\n                symbol,\n                identity,\n                admin,\n                owner\n            )\n        );\n        require(success, \"Initialization failed.\");\n    }\n\n}\n\n"
			},
			"@openzeppelin/contracts@4.9.6/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.9.6/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.9.6/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  tag_5\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1149:1155  beacon */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1157:1161  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1163:1168  false */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1148  _upgradeBeaconToAndCall */\n  tag_6\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  jump(tag_65)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\ntag_6:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  tag_9\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5845:5854  newBeacon */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5844  _setBeacon */\n  tag_10\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5870:5895  BeaconUpgraded(newBeacon) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5923:5924  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5913  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5920  data.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5924  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\n  dup1\n  tag_11\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5928:5937  forceCall */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\ntag_11:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  tag_13\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5990:5999  newBeacon */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6015  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6017  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":6019:6023  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:5981  Address.functionDelegateCall */\n  or(tag_0_10, shl(0x20, tag_18))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5119:5148  Address.isContract(newBeacon) */\n  tag_20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5138:5147  newBeacon */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5119:5137  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_21))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5119:5148  Address.isContract(newBeacon) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1984:1986   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1966:1987   */\n  mstore\n    /* \"#utility.yul\":2023:2025   */\n  0x25\n    /* \"#utility.yul\":2003:2021   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1996:2026   */\n  mstore\n    /* \"#utility.yul\":2062:2096   */\n  0x455243313936373a206e657720626561636f6e206973206e6f74206120636f6e\n    /* \"#utility.yul\":2042:2060   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2035:2097   */\n  mstore\n  shl(0xda, 0x1d1c9858dd)\n    /* \"#utility.yul\":2113:2131   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2106:2141   */\n  mstore\n    /* \"#utility.yul\":2158:2177   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\n  tag_25\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5248:5257  newBeacon */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5273  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5275  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5239  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_21))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_29\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2390:2392   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2372:2393   */\n  mstore\n    /* \"#utility.yul\":2429:2431   */\n  0x30\n    /* \"#utility.yul\":2409:2427   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2402:2432   */\n  mstore\n    /* \"#utility.yul\":2468:2502   */\n  0x455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069\n    /* \"#utility.yul\":2448:2466   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2441:2503   */\n  mstore\n  shl(0x82, 0x1cc81b9bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":2519:2537   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2512:2558   */\n  mstore\n    /* \"#utility.yul\":2575:2594   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_23\n    /* \"#utility.yul\":2188:2600   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\ntag_29:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5409:5418  newBeacon */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5400  StorageSlot.getAddressSlot(_BEACON_SLOT) */\n  tag_32\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5387:5399  _BEACON_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5386  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_33))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5400  StorageSlot.getAddressSlot(_BEACON_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5418  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_18:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6757:6769  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_35\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6809:6815  target */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6817:6821  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6808  functionDelegateCall */\n  tag_36\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1725  account.code.length > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_33:\n    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":2029:2033  slot */\n  swap1\n    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\ntag_36:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7199:7211  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7224:7236  bool success */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7238:7261  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7271  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7284  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7285:7289  data */\n  dup6\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_44\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_43)\ntag_44:\n  0x60\n  swap2\n  pop\ntag_43:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_45\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7334:7340  target */\n  dup7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7363:7375  errorMessage */\n  dup8\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n  tag_46\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\ntag_46:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7851:7863  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7879:7886  success */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7916  returndata */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7923  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7927:7928  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7928  returndata.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n  tag_51\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  dup6\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3099:3101   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3081:3102   */\n  mstore\n    /* \"#utility.yul\":3138:3140   */\n  0x1d\n    /* \"#utility.yul\":3118:3136   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3111:3141   */\n  mstore\n    /* \"#utility.yul\":3177:3208   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":3157:3175   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3150:3209   */\n  mstore\n    /* \"#utility.yul\":3226:3244   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_23\n    /* \"#utility.yul\":2897:3250   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\ntag_51:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8208:8218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8201:8218  return returndata */\n  jump(tag_55)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\ntag_48:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  tag_55\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8257:8267  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8269:8281  errorMessage */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8256  _revert */\n  tag_56\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  jump\t// in\ntag_55:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_56:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:8997  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:9001  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n  tag_58\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9208:9218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9202:9219  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9264:9279  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9251:9261  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9247:9249  32 */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9243:9262  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\ntag_58:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9331:9343  errorMessage */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9324:9344  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":14:191   */\ntag_62:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_67:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_63:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:578   */\ntag_64:\n    /* \"#utility.yul\":413:414   */\n  0x00\n    /* \"#utility.yul\":423:536   */\ntag_70:\n    /* \"#utility.yul\":437:443   */\n  dup4\n    /* \"#utility.yul\":434:435   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  lt\n    /* \"#utility.yul\":423:536   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":513:524   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":507:525   */\n  mload\n    /* \"#utility.yul\":494:505   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":487:526   */\n  mstore\n    /* \"#utility.yul\":459:461   */\n  0x20\n    /* \"#utility.yul\":452:462   */\n  add\n    /* \"#utility.yul\":423:536   */\n  jump(tag_70)\ntag_72:\n  pop\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":552:568   */\n  swap2\n  add\n    /* \"#utility.yul\":545:572   */\n  mstore\n    /* \"#utility.yul\":328:578   */\n  jump\t// out\n    /* \"#utility.yul\":583:1564   */\ntag_2:\n    /* \"#utility.yul\":671:677   */\n  0x00\n    /* \"#utility.yul\":679:685   */\n  dup1\n    /* \"#utility.yul\":732:734   */\n  0x40\n    /* \"#utility.yul\":720:729   */\n  dup4\n    /* \"#utility.yul\":711:718   */\n  dup6\n    /* \"#utility.yul\":707:730   */\n  sub\n    /* \"#utility.yul\":703:735   */\n  slt\n    /* \"#utility.yul\":700:752   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":748:749   */\n  0x00\n    /* \"#utility.yul\":745:746   */\n  dup1\n    /* \"#utility.yul\":738:750   */\n  revert\n    /* \"#utility.yul\":700:752   */\ntag_74:\n    /* \"#utility.yul\":771:811   */\n  tag_75\n    /* \"#utility.yul\":801:810   */\n  dup4\n    /* \"#utility.yul\":771:811   */\n  tag_62\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":855:857   */\n  0x20\n    /* \"#utility.yul\":840:858   */\n  dup5\n  add\n    /* \"#utility.yul\":834:859   */\n  mload\n    /* \"#utility.yul\":761:811   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":908:922   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":905:939   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":935:936   */\n  0x00\n    /* \"#utility.yul\":932:933   */\n  dup1\n    /* \"#utility.yul\":925:937   */\n  revert\n    /* \"#utility.yul\":905:939   */\ntag_76:\n    /* \"#utility.yul\":973:979   */\n  dup2\n    /* \"#utility.yul\":962:971   */\n  dup6\n    /* \"#utility.yul\":958:980   */\n  add\n    /* \"#utility.yul\":948:980   */\n  swap2\n  pop\n    /* \"#utility.yul\":1018:1025   */\n  dup6\n    /* \"#utility.yul\":1011:1015   */\n  0x1f\n    /* \"#utility.yul\":1007:1009   */\n  dup4\n    /* \"#utility.yul\":1003:1016   */\n  add\n    /* \"#utility.yul\":999:1026   */\n  slt\n    /* \"#utility.yul\":989:1044   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":989:1044   */\ntag_77:\n    /* \"#utility.yul\":1069:1071   */\n  dup2\n    /* \"#utility.yul\":1063:1072   */\n  mload\n    /* \"#utility.yul\":1091:1093   */\n  dup2\n    /* \"#utility.yul\":1087:1089   */\n  dup2\n    /* \"#utility.yul\":1084:1094   */\n  gt\n    /* \"#utility.yul\":1081:1117   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1097:1115   */\n  tag_79\n  tag_63\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1172:1174   */\n  0x40\n    /* \"#utility.yul\":1166:1175   */\n  mload\n    /* \"#utility.yul\":1140:1142   */\n  0x1f\n    /* \"#utility.yul\":1226:1239   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1222:1244   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1246:1248   */\n  0x3f\n    /* \"#utility.yul\":1218:1249   */\n  add\n    /* \"#utility.yul\":1214:1254   */\n  and\n    /* \"#utility.yul\":1202:1255   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1270:1288   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1290:1312   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1267:1313   */\n  or\n    /* \"#utility.yul\":1264:1336   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1316:1334   */\n  tag_81\n  tag_63\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1356:1366   */\n  dup2\n    /* \"#utility.yul\":1352:1354   */\n  0x40\n    /* \"#utility.yul\":1345:1367   */\n  mstore\n    /* \"#utility.yul\":1391:1393   */\n  dup3\n    /* \"#utility.yul\":1383:1389   */\n  dup2\n    /* \"#utility.yul\":1376:1394   */\n  mstore\n    /* \"#utility.yul\":1431:1438   */\n  dup9\n    /* \"#utility.yul\":1426:1428   */\n  0x20\n    /* \"#utility.yul\":1421:1423   */\n  dup5\n    /* \"#utility.yul\":1417:1419   */\n  dup8\n    /* \"#utility.yul\":1413:1424   */\n  add\n    /* \"#utility.yul\":1409:1429   */\n  add\n    /* \"#utility.yul\":1406:1439   */\n  gt\n    /* \"#utility.yul\":1403:1456   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1452:1453   */\n  0x00\n    /* \"#utility.yul\":1449:1450   */\n  dup1\n    /* \"#utility.yul\":1442:1454   */\n  revert\n    /* \"#utility.yul\":1403:1456   */\ntag_82:\n    /* \"#utility.yul\":1465:1533   */\n  tag_83\n    /* \"#utility.yul\":1530:1532   */\n  dup4\n    /* \"#utility.yul\":1525:1527   */\n  0x20\n    /* \"#utility.yul\":1517:1523   */\n  dup4\n    /* \"#utility.yul\":1513:1528   */\n  add\n    /* \"#utility.yul\":1508:1510   */\n  0x20\n    /* \"#utility.yul\":1504:1506   */\n  dup9\n    /* \"#utility.yul\":1500:1511   */\n  add\n    /* \"#utility.yul\":1465:1533   */\n  tag_64\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1552:1558   */\n  dup1\n    /* \"#utility.yul\":1542:1558   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":583:1564   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1569:1777   */\ntag_17:\n    /* \"#utility.yul\":1639:1645   */\n  0x00\n    /* \"#utility.yul\":1692:1694   */\n  0x20\n    /* \"#utility.yul\":1680:1689   */\n  dup3\n    /* \"#utility.yul\":1671:1678   */\n  dup5\n    /* \"#utility.yul\":1667:1690   */\n  sub\n    /* \"#utility.yul\":1663:1695   */\n  slt\n    /* \"#utility.yul\":1660:1712   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":1708:1709   */\n  0x00\n    /* \"#utility.yul\":1705:1706   */\n  dup1\n    /* \"#utility.yul\":1698:1710   */\n  revert\n    /* \"#utility.yul\":1660:1712   */\ntag_85:\n    /* \"#utility.yul\":1731:1771   */\n  tag_35\n    /* \"#utility.yul\":1761:1770   */\n  dup3\n    /* \"#utility.yul\":1731:1771   */\n  tag_62\n  jump\t// in\n    /* \"#utility.yul\":2605:2892   */\ntag_41:\n    /* \"#utility.yul\":2734:2737   */\n  0x00\n    /* \"#utility.yul\":2772:2778   */\n  dup3\n    /* \"#utility.yul\":2766:2779   */\n  mload\n    /* \"#utility.yul\":2788:2854   */\n  tag_90\n    /* \"#utility.yul\":2847:2853   */\n  dup2\n    /* \"#utility.yul\":2842:2845   */\n  dup5\n    /* \"#utility.yul\":2835:2839   */\n  0x20\n    /* \"#utility.yul\":2827:2833   */\n  dup8\n    /* \"#utility.yul\":2823:2840   */\n  add\n    /* \"#utility.yul\":2788:2854   */\n  tag_64\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2870:2886   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":2605:2892   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3255:3651   */\ntag_61:\n    /* \"#utility.yul\":3404:3406   */\n  0x20\n    /* \"#utility.yul\":3393:3402   */\n  dup2\n    /* \"#utility.yul\":3386:3407   */\n  mstore\n    /* \"#utility.yul\":3367:3371   */\n  0x00\n    /* \"#utility.yul\":3436:3442   */\n  dup3\n    /* \"#utility.yul\":3430:3443   */\n  mload\n    /* \"#utility.yul\":3479:3485   */\n  dup1\n    /* \"#utility.yul\":3474:3476   */\n  0x20\n    /* \"#utility.yul\":3463:3472   */\n  dup5\n    /* \"#utility.yul\":3459:3477   */\n  add\n    /* \"#utility.yul\":3452:3486   */\n  mstore\n    /* \"#utility.yul\":3495:3574   */\n  tag_93\n    /* \"#utility.yul\":3567:3573   */\n  dup2\n    /* \"#utility.yul\":3562:3564   */\n  0x40\n    /* \"#utility.yul\":3551:3560   */\n  dup6\n    /* \"#utility.yul\":3547:3565   */\n  add\n    /* \"#utility.yul\":3542:3544   */\n  0x20\n    /* \"#utility.yul\":3534:3540   */\n  dup8\n    /* \"#utility.yul\":3530:3545   */\n  add\n    /* \"#utility.yul\":3495:3574   */\n  tag_64\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3635:3637   */\n  0x1f\n    /* \"#utility.yul\":3614:3629   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3610:3639   */\n  and\n    /* \"#utility.yul\":3595:3640   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":3642:3644   */\n  0x40\n    /* \"#utility.yul\":3591:3645   */\n  add\n  swap3\n    /* \"#utility.yul\":3255:3651   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_65:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_16\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_17\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_18\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_19\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6757:6769  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_21\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6809:6815  target */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6817:6821  data */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6808  functionDelegateCall */\n      tag_22\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_21:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":2029:2033  slot */\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1511:1518  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n      tag_27\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4965  StorageSlot.getAddressSlot(_BEACON_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4848:4972  function _getBeacon() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1573  IBeacon(_getBeacon()).implementation */\n      and\n      0x5c60da1b\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1575  IBeacon(_getBeacon()).implementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1530:1575  return IBeacon(_getBeacon()).implementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_19:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_35\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_35:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7199:7211  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7224:7236  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7238:7261  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7271  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7284  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7285:7289  data */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_41\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_40)\n    tag_41:\n      0x60\n      swap2\n      pop\n    tag_40:\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_42\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7334:7340  target */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7342:7349  success */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7351:7361  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7363:7375  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n      tag_43\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_43:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7916  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_50\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1058:1060   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1040:1061   */\n      mstore\n        /* \"#utility.yul\":1097:1099   */\n      0x1d\n        /* \"#utility.yul\":1077:1095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1070:1100   */\n      mstore\n        /* \"#utility.yul\":1136:1167   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":1116:1134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1109:1168   */\n      mstore\n        /* \"#utility.yul\":1185:1203   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8208:8218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8201:8218  return returndata */\n      jump(tag_54)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_54\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8256  _revert */\n      tag_55\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_55:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:8997  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      tag_57\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n        /* \"#utility.yul\":14:304   */\n    tag_32:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_64:\n        /* \"#utility.yul\":179:195   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:255   */\n      dup2\n      and\n        /* \"#utility.yul\":214:256   */\n      dup2\n      eq\n        /* \"#utility.yul\":204:274   */\n      tag_21\n      jumpi\n        /* \"#utility.yul\":270:271   */\n      0x00\n        /* \"#utility.yul\":267:268   */\n      dup1\n        /* \"#utility.yul\":260:272   */\n      revert\n        /* \"#utility.yul\":309:559   */\n    tag_61:\n        /* \"#utility.yul\":394:395   */\n      0x00\n        /* \"#utility.yul\":404:517   */\n    tag_67:\n        /* \"#utility.yul\":418:424   */\n      dup4\n        /* \"#utility.yul\":415:416   */\n      dup2\n        /* \"#utility.yul\":412:425   */\n      lt\n        /* \"#utility.yul\":404:517   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":494:505   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":488:506   */\n      mload\n        /* \"#utility.yul\":475:486   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":468:507   */\n      mstore\n        /* \"#utility.yul\":440:442   */\n      0x20\n        /* \"#utility.yul\":433:443   */\n      add\n        /* \"#utility.yul\":404:517   */\n      jump(tag_67)\n    tag_69:\n      pop\n      pop\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":533:549   */\n      swap2\n      add\n        /* \"#utility.yul\":526:553   */\n      mstore\n        /* \"#utility.yul\":309:559   */\n      jump\t// out\n        /* \"#utility.yul\":564:851   */\n    tag_38:\n        /* \"#utility.yul\":693:696   */\n      0x00\n        /* \"#utility.yul\":731:737   */\n      dup3\n        /* \"#utility.yul\":725:738   */\n      mload\n        /* \"#utility.yul\":747:813   */\n      tag_71\n        /* \"#utility.yul\":806:812   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup5\n        /* \"#utility.yul\":794:798   */\n      0x20\n        /* \"#utility.yul\":786:792   */\n      dup8\n        /* \"#utility.yul\":782:799   */\n      add\n        /* \"#utility.yul\":747:813   */\n      tag_61\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":829:845   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":564:851   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1214:1610   */\n    tag_60:\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1352:1361   */\n      dup2\n        /* \"#utility.yul\":1345:1366   */\n      mstore\n        /* \"#utility.yul\":1326:1330   */\n      0x00\n        /* \"#utility.yul\":1395:1401   */\n      dup3\n        /* \"#utility.yul\":1389:1402   */\n      mload\n        /* \"#utility.yul\":1438:1444   */\n      dup1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1422:1431   */\n      dup5\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"#utility.yul\":1411:1445   */\n      mstore\n        /* \"#utility.yul\":1454:1533   */\n      tag_74\n        /* \"#utility.yul\":1526:1532   */\n      dup2\n        /* \"#utility.yul\":1521:1523   */\n      0x40\n        /* \"#utility.yul\":1510:1519   */\n      dup6\n        /* \"#utility.yul\":1506:1524   */\n      add\n        /* \"#utility.yul\":1501:1503   */\n      0x20\n        /* \"#utility.yul\":1493:1499   */\n      dup8\n        /* \"#utility.yul\":1489:1504   */\n      add\n        /* \"#utility.yul\":1454:1533   */\n      tag_61\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1594:1596   */\n      0x1f\n        /* \"#utility.yul\":1573:1588   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1569:1598   */\n      and\n        /* \"#utility.yul\":1554:1599   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1601:1603   */\n      0x40\n        /* \"#utility.yul\":1550:1604   */\n      add\n      swap3\n        /* \"#utility.yul\":1214:1610   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220bd4e0e82f8adc55fda1d31a950fb022ce4d66bbfe6f201a9215047f18fe9c2a464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_524": {
									"entryPoint": null,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_904": {
									"entryPoint": 987,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setBeacon_408": {
									"entryPoint": 256,
									"id": 408,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeBeaconToAndCall_446": {
									"entryPoint": 53,
									"id": 446,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@functionDelegateCall_792": {
									"entryPoint": 675,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_821": {
									"entryPoint": 737,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_967": {
									"entryPoint": 734,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_593": {
									"entryPoint": 719,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_860": {
									"entryPoint": 858,
									"id": 860,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3653:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:11"
															},
															"nodeType": "YulIf",
															"src": "115:70:11"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "394:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "404:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "413:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "408:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "473:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "498:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "503:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "494:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "494:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "517:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "522:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "513:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "513:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "507:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "507:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "487:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "487:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "487:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "434:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "431:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "445:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "447:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "456:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "452:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "447:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "427:3:11",
																"statements": []
															},
															"src": "423:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "372:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "377:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "382:6:11",
														"type": ""
													}
												],
												"src": "328:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "690:874:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "736:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "745:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "748:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "711:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "720:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "707:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "707:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "732:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "703:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:32:11"
															},
															"nodeType": "YulIf",
															"src": "700:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "761:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "771:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "771:40:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "761:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "820:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "844:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "855:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "834:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:25:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "824:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "868:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "886:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "890:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "878:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:18:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "872:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "923:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "932:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "935:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "925:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "925:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "925:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "911:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "919:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "908:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:14:11"
															},
															"nodeType": "YulIf",
															"src": "905:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "948:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "962:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "973:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "958:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "952:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1007:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1011:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1003:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1018:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "992:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:35:11"
															},
															"nodeType": "YulIf",
															"src": "989:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1053:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1069:2:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1063:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:9:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1057:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1095:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1097:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1097:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1097:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1087:2:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1091:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1084:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:10:11"
															},
															"nodeType": "YulIf",
															"src": "1081:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1126:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:7:11"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1130:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1152:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1166:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1156:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1184:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1206:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1230:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1234:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1226:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1226:13:11"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1241:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1222:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1246:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1218:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:31:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1251:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1214:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1188:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1314:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1316:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1316:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1316:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1273:10:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1285:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1270:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1270:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1293:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1305:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1290:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1290:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1267:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:46:11"
															},
															"nodeType": "YulIf",
															"src": "1264:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1356:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1391:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1376:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1440:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1449:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1442:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1442:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1417:2:11"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1421:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1413:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1413:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1426:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1409:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1409:20:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1431:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1406:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:33:11"
															},
															"nodeType": "YulIf",
															"src": "1403:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1504:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1508:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1500:11:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1517:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1525:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:15:11"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1530:2:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1465:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1465:68:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1465:68:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1542:16:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1552:6:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "648:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "659:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "671:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "679:6:11",
														"type": ""
													}
												],
												"src": "583:981:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:127:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1696:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1708:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1698:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1671:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1680:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1667:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1667:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:32:11"
															},
															"nodeType": "YulIf",
															"src": "1660:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1721:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1731:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:40:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1616:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1627:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1639:6:11",
														"type": ""
													}
												],
												"src": "1569:208:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1956:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1973:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1984:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2007:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2018:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1996:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2046:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2057:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:18:11"
																	},
																	{
																		"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2062:34:11",
																		"type": "",
																		"value": "ERC1967: new beacon is not a con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2035:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2035:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2117:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2113:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2113:18:11"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2133:7:11",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2150:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2162:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2173:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2150:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1933:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1947:4:11",
														"type": ""
													}
												],
												"src": "1782:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2379:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2390:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2413:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2424:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2429:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:18:11"
																	},
																	{
																		"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2468:34:11",
																		"type": "",
																		"value": "ERC1967: beacon implementation i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2441:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2523:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2534:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2519:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2519:18:11"
																	},
																	{
																		"hexValue": "73206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2539:18:11",
																		"type": "",
																		"value": "s not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2512:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2512:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2567:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2579:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2590:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2575:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2567:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2339:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2353:4:11",
														"type": ""
													}
												],
												"src": "2188:412:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2742:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2752:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2772:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2766:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2756:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2827:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2835:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2823:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2842:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2847:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2788:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2788:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2788:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2879:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2863:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2718:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2723:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2734:3:11",
														"type": ""
													}
												],
												"src": "2605:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3071:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3088:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3099:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3081:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3122:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3133:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3118:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3118:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3138:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3111:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3161:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3172:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3157:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3177:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3150:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3218:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3226:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3218:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3048:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3062:4:11",
														"type": ""
													}
												],
												"src": "2897:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3376:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3393:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3404:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3386:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3386:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3386:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3416:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3436:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3430:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3430:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3420:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3479:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3534:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3551:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3562:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3547:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3567:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3495:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:79:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3495:79:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3583:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3618:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3626:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3614:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3614:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3635:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3631:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3631:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3610:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3610:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3591:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3583:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3345:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3356:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3367:4:11",
														"type": ""
													}
												],
												"src": "3255:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1967: new beacon is not a con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC1967: beacon implementation i\")\n        mstore(add(headStart, 96), \"s not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516109003803806109008339810160408190526100229161045b565b61002e82826000610035565b5050610585565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e9919061051b565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d7919061051b565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108d9602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe9190610536565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b81526004016101699190610552565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b50506000910152565b6000806040838503121561046e57600080fd5b61047783610405565b60208401519092506001600160401b038082111561049457600080fd5b818501915085601f8301126104a857600080fd5b8151818111156104ba576104ba610421565b604051601f8201601f19908116603f011681019083821181831017156104e2576104e2610421565b816040528281528860208487010111156104fb57600080fd5b61050c836020830160208801610437565b80955050505050509250929050565b60006020828403121561052d57600080fd5b6102c882610405565b60008251610548818460208701610437565b9190910192915050565b6020815260008251806020840152610571816040850160208701610437565b601f01601f19169190910160400192915050565b610345806105946000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bd4e0e82f8adc55fda1d31a950fb022ce4d66bbfe6f201a9215047f18fe9c2a464736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x900 CODESIZE SUB DUP1 PUSH2 0x900 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x585 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x7F JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFB JUMPI PUSH2 0xF9 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x51B JUMP JUMPDEST DUP4 PUSH2 0x2A3 PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x113 DUP2 PUSH2 0x2CF PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E6 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x51B JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x169 JUMP JUMPDEST DUP1 PUSH2 0x282 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 PUSH1 0x0 SHL PUSH2 0x2DE PUSH1 0x20 SHL PUSH2 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8D9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x33E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x350 DUP7 DUP4 DUP4 DUP8 PUSH2 0x35A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3C9 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x3C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x169 JUMP JUMPDEST POP DUP2 PUSH2 0x3D3 JUMP JUMPDEST PUSH2 0x3D3 DUP4 DUP4 PUSH2 0x3DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3EB JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x552 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x452 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x43A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477 DUP4 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4BA PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4E2 JUMPI PUSH2 0x4E2 PUSH2 0x421 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50C DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x437 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C8 DUP3 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x548 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x571 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x345 DUP1 PUSH2 0x594 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x181 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x192 DUP7 DUP4 DUP4 DUP8 PUSH2 0x19C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x210 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x209 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x21A DUP4 DUP4 PUSH2 0x222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x232 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x290 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2AB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220BD4E0E DUP3 0xF8 0xAD 0xC5 0x5F 0xDA SAR BALANCE 0xA9 POP 0xFB MUL 0x2C 0xE4 0xD6 PUSH12 0xBFE6F201A9215047F18FE9C2 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ",
							"sourceMap": "580:1515:5:-:0;;;1060:116;;;;;;;;;;;;;;;;;;:::i;:::-;1125:44;1149:6;1157:4;1163:5;1125:23;:44::i;:::-;1060:116;;580:1515;;5728:313:3;5834:21;5845:9;5834:10;:21::i;:::-;5870:25;;-1:-1:-1;;;;;5870:25:3;;;;;;;;5923:1;5909:4;:11;:15;:28;;;;5928:9;5909:28;5905:130;;;5953:71;5990:9;-1:-1:-1;;;;;5982:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6019:4;5953:28;;;;;:71;;:::i;:::-;;5905:130;5728:313;;;:::o;5054:371::-;5119:29;5138:9;5119:18;;;;;:29;;:::i;:::-;5111:79;;;;-1:-1:-1;;;5111:79:3;;1984:2:11;5111:79:3;;;1966:21:11;2023:2;2003:18;;;1996:30;2062:34;2042:18;;;2035:62;-1:-1:-1;;;2113:18:11;;;2106:35;2158:19;;5111:79:3;;;;;;;;;5221:55;5248:9;-1:-1:-1;;;;;5240:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5221:18;;;;;:55;;:::i;:::-;5200:150;;;;-1:-1:-1;;;5200:150:3;;2390:2:11;5200:150:3;;;2372:21:11;2429:2;2409:18;;;2402:30;2468:34;2448:18;;;2441:62;-1:-1:-1;;;2519:18:11;;;2512:46;2575:19;;5200:150:3;2188:412:11;5200:150:3;5409:9;5360:40;4719:66;5387:12;;5360:26;;;;;:40;;:::i;:::-;:58;;-1:-1:-1;;;;;;5360:58:3;-1:-1:-1;;;;;5360:58:3;;;;;;;;;;-1:-1:-1;5054:371:3:o;6674:198:7:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:7:o;1412:320::-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;1859:190:9:-;2029:4;1859:190::o;7058:325:7:-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:7;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:7;;-1:-1:-1;7223:67:7;-1:-1:-1;7307:69:7;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;3099:2:11;8113:60:7;;;3081:21:11;3138:2;3118:18;;;3111:30;3177:31;3157:18;;;3150:59;3226:18;;8113:60:7;2897:353:11;8113:60:7;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;;:::i;14:177:11:-;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:11;552:16;;545:27;328:250::o;583:981::-;671:6;679;732:2;720:9;711:7;707:23;703:32;700:52;;;748:1;745;738:12;700:52;771:40;801:9;771:40;:::i;:::-;855:2;840:18;;834:25;761:50;;-1:-1:-1;;;;;;908:14:11;;;905:34;;;935:1;932;925:12;905:34;973:6;962:9;958:22;948:32;;1018:7;1011:4;1007:2;1003:13;999:27;989:55;;1040:1;1037;1030:12;989:55;1069:2;1063:9;1091:2;1087;1084:10;1081:36;;;1097:18;;:::i;:::-;1172:2;1166:9;1140:2;1226:13;;-1:-1:-1;;1222:22:11;;;1246:2;1218:31;1214:40;1202:53;;;1270:18;;;1290:22;;;1267:46;1264:72;;;1316:18;;:::i;:::-;1356:10;1352:2;1345:22;1391:2;1383:6;1376:18;1431:7;1426:2;1421;1417;1413:11;1409:20;1406:33;1403:53;;;1452:1;1449;1442:12;1403:53;1465:68;1530:2;1525;1517:6;1513:15;1508:2;1504;1500:11;1465:68;:::i;:::-;1552:6;1542:16;;;;;;;583:981;;;;;:::o;1569:208::-;1639:6;1692:2;1680:9;1671:7;1667:23;1663:32;1660:52;;;1708:1;1705;1698:12;1660:52;1731:40;1761:9;1731:40;:::i;2605:287::-;2734:3;2772:6;2766:13;2788:66;2847:6;2842:3;2835:4;2827:6;2823:17;2788:66;:::i;:::-;2870:16;;;;;2605:287;-1:-1:-1;;2605:287:11:o;3255:396::-;3404:2;3393:9;3386:21;3367:4;3436:6;3430:13;3479:6;3474:2;3463:9;3459:18;3452:34;3495:79;3567:6;3562:2;3551:9;3547:18;3542:2;3534:6;3530:15;3495:79;:::i;:::-;3635:2;3614:15;-1:-1:-1;;3610:29:11;3595:45;;;;3642:2;3591:54;;3255:396;-1:-1:-1;;3255:396:11:o;:::-;580:1515:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_485": {
									"entryPoint": null,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_498": {
									"entryPoint": null,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_458": {
									"entryPoint": 256,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_477": {
									"entryPoint": 23,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBeacon_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_549": {
									"entryPoint": 103,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_904": {
									"entryPoint": 546,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_792": {
									"entryPoint": 41,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_821": {
									"entryPoint": 292,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_967": {
									"entryPoint": 100,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_593": {
									"entryPoint": 85,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_860": {
									"entryPoint": 412,
									"id": 860,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1612:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:11"
															},
															"nodeType": "YulIf",
															"src": "105:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:11"
															},
															"nodeType": "YulIf",
															"src": "204:70:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:11",
														"type": ""
													}
												],
												"src": "14:290:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "375:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "385:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "394:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "389:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "479:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "484:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "475:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "475:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "503:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "494:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "494:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "488:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "488:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "468:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "468:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "468:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "415:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "418:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "412:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "426:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "428:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "437:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "433:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "428:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "408:3:11",
																"statements": []
															},
															"src": "404:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "537:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "542:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "533:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "551:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "526:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "526:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "353:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "358:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "363:6:11",
														"type": ""
													}
												],
												"src": "309:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "701:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "711:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "725:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "715:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "786:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "794:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "806:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "747:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "822:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "838:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "677:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "682:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "693:3:11",
														"type": ""
													}
												],
												"src": "564:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1030:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1047:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1040:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1040:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1070:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1120:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1131:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1136:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1109:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1200:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1177:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1007:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1021:4:11",
														"type": ""
													}
												],
												"src": "856:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1375:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1395:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1389:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1379:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1493:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1510:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1521:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1506:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1526:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1454:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:79:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:79:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1542:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1577:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1585:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1573:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1573:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1594:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1590:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1590:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1569:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1569:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1601:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1550:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1542:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:11",
														"type": ""
													}
												],
												"src": "1214:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220bd4e0e82f8adc55fda1d31a950fb022ce4d66bbfe6f201a9215047f18fe9c2a464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x181 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x192 DUP7 DUP4 DUP4 DUP8 PUSH2 0x19C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x210 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x209 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x21A DUP4 DUP4 PUSH2 0x222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x232 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x290 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2AB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220BD4E0E DUP3 0xF8 0xAD 0xC5 0x5F 0xDA SAR BALANCE 0xA9 POP 0xFB MUL 0x2C 0xE4 0xD6 PUSH12 0xBFE6F201A9215047F18FE9C2 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "580:1515:5:-:0;;;;;;2898:11:4;:9;:11::i;:::-;580:1515:5;;2675:11:4;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6674:198:7:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:7:o;1412:320::-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;1859:190:9:-;2029:4;1859:190::o;1444:138:5:-;1511:7;1545:12;4719:66:3;4919:46;-1:-1:-1;;;;;4919:46:3;;4848:124;1545:12:5;-1:-1:-1;;;;;1537:36:5;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:45;;1444:138;:::o;948:895:4:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7058:325:7;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:7;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;1058:2:11;8113:60:7;;;1040:21:11;1097:2;1077:18;;;1070:30;1136:31;1116:18;;;1109:59;1185:18;;8113:60:7;;;;;;;;;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;;:::i;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;309:250;394:1;404:113;418:6;415:1;412:13;404:113;;;494:11;;;488:18;475:11;;;468:39;440:2;433:10;404:113;;;-1:-1:-1;;551:1:11;533:16;;526:27;309:250::o;564:287::-;693:3;731:6;725:13;747:66;806:6;801:3;794:4;786:6;782:17;747:66;:::i;:::-;829:16;;;;;564:287;-1:-1:-1;;564:287:11:o;1214:396::-;1363:2;1352:9;1345:21;1326:4;1395:6;1389:13;1438:6;1433:2;1422:9;1418:18;1411:34;1454:79;1526:6;1521:2;1510:9;1506:18;1501:2;1493:6;1489:15;1454:79;:::i;:::-;1594:2;1573:15;-1:-1:-1;;1569:29:11;1554:45;;;;1601:2;1550:54;;1214:396;-1:-1:-1;;1214:396:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "167400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_beacon()": "infinite",
								"_implementation()": "infinite",
								"_setBeacon(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1060,
									"end": 1176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1149,
									"end": 1155,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1163,
									"end": 1168,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1125,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 5845,
									"end": 5854,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5834,
									"end": 5855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 3,
									"value": "1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "LOG2",
									"source": 3
								},
								{
									"begin": 5923,
									"end": 5924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5920,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5924,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 5990,
									"end": 5999,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "PUSH",
									"source": 3,
									"value": "5C60DA1B"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 5982,
									"end": 6017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6019,
									"end": 6023,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551626"
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5138,
									"end": 5147,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551627"
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 1986,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1966,
									"end": 1987,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2025,
									"name": "PUSH",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2003,
									"end": 2021,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1996,
									"end": 2026,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2062,
									"end": 2096,
									"name": "PUSH",
									"source": 11,
									"value": "455243313936373A206E657720626561636F6E206973206E6F74206120636F6E"
								},
								{
									"begin": 2042,
									"end": 2060,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 2042,
									"end": 2060,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2042,
									"end": 2060,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2035,
									"end": 2097,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2113,
									"end": 2131,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2113,
									"end": 2131,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2131,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2141,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2177,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2158,
									"end": 2177,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5248,
									"end": 5257,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "PUSH",
									"source": 3,
									"value": "5C60DA1B"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 5240,
									"end": 5275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551627"
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2390,
									"end": 2392,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2372,
									"end": 2393,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2429,
									"end": 2431,
									"name": "PUSH",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 2409,
									"end": 2427,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2409,
									"end": 2427,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2427,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2402,
									"end": 2432,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2502,
									"name": "PUSH",
									"source": 11,
									"value": "455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069"
								},
								{
									"begin": 2448,
									"end": 2466,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 2448,
									"end": 2466,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2448,
									"end": 2466,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2441,
									"end": 2503,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1CC81B9BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2519,
									"end": 2537,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2512,
									"end": 2558,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2594,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2575,
									"end": 2594,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2188,
									"end": 2600,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5409,
									"end": 5418,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 4719,
									"end": 4785,
									"name": "PUSH",
									"source": 3,
									"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
								},
								{
									"begin": 5387,
									"end": 5399,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5387,
									"end": 5399,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551628"
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5054,
									"end": 5425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6757,
									"end": 6769,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 6809,
									"end": 6815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH data",
									"source": 7,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 6788,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6865,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6674,
									"end": 6872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1732,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1859,
									"end": 2049,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1859,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2029,
									"end": 2033,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1859,
									"end": 2049,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7199,
									"end": 7211,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7224,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7238,
									"end": 7261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7265,
									"end": 7284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7289,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 7265,
									"end": 7290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DELEGATECALL",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7334,
									"end": 7340,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7363,
									"end": 7375,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7307,
									"end": 7333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7307,
									"end": 7376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7300,
									"end": 7376,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7058,
									"end": 7383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7863,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7879,
									"end": 7886,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7923,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7906,
									"end": 7928,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3099,
									"end": 3101,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3102,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3138,
									"end": 3140,
									"name": "PUSH",
									"source": 11,
									"value": "1D"
								},
								{
									"begin": 3118,
									"end": 3136,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3118,
									"end": 3136,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3118,
									"end": 3136,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3111,
									"end": 3141,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3177,
									"end": 3208,
									"name": "PUSH",
									"source": 11,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3157,
									"end": 3175,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3150,
									"end": 3209,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3226,
									"end": 3244,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3226,
									"end": 3244,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2897,
									"end": 3250,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8208,
									"end": 8218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 8257,
									"end": 8267,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8269,
									"end": 8281,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 8249,
									"end": 8282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 9001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9208,
									"end": 9218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9202,
									"end": 9219,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9279,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9251,
									"end": 9261,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9247,
									"end": 9249,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9243,
									"end": 9262,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9236,
									"end": 9280,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9331,
									"end": 9343,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9324,
									"end": 9344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 328,
									"end": 578,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 328,
									"end": 578,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 413,
									"end": 414,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 434,
									"end": 435,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 431,
									"end": 444,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 513,
									"end": 524,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 507,
									"end": 525,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 494,
									"end": 505,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 487,
									"end": 526,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 459,
									"end": 461,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 462,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 568,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 552,
									"end": 568,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 545,
									"end": 572,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 328,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 671,
									"end": 677,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 685,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 732,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 720,
									"end": 729,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 711,
									"end": 718,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 707,
									"end": 730,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 703,
									"end": 735,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 700,
									"end": 752,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 700,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 700,
									"end": 752,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 748,
									"end": 749,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 746,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 738,
									"end": 750,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 700,
									"end": 752,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 700,
									"end": 752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 771,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 771,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 771,
									"end": 811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 771,
									"end": 811,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 771,
									"end": 811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 855,
									"end": 857,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 840,
									"end": 858,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 840,
									"end": 858,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 834,
									"end": 859,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 761,
									"end": 811,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 761,
									"end": 811,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 908,
									"end": 922,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 905,
									"end": 939,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 905,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 905,
									"end": 939,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 935,
									"end": 936,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 933,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 925,
									"end": 937,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 905,
									"end": 939,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 905,
									"end": 939,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 973,
									"end": 979,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 962,
									"end": 971,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 958,
									"end": 980,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 948,
									"end": 980,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 948,
									"end": 980,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1018,
									"end": 1025,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1015,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1003,
									"end": 1016,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 999,
									"end": 1026,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1069,
									"end": 1071,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1063,
									"end": 1072,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1091,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1089,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1084,
									"end": 1094,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1081,
									"end": 1117,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1081,
									"end": 1117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 1081,
									"end": 1117,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1097,
									"end": 1115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1172,
									"end": 1174,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1175,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1140,
									"end": 1142,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1226,
									"end": 1239,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1226,
									"end": 1239,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1222,
									"end": 1244,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1244,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1244,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1246,
									"end": 1248,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 1218,
									"end": 1249,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1214,
									"end": 1254,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1255,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1255,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1255,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1267,
									"end": 1313,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1264,
									"end": 1336,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1264,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 1264,
									"end": 1336,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1316,
									"end": 1334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1352,
									"end": 1354,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 1367,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1383,
									"end": 1389,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1376,
									"end": 1394,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1431,
									"end": 1438,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1426,
									"end": 1428,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1423,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1419,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1413,
									"end": 1424,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1409,
									"end": 1429,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1406,
									"end": 1439,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1452,
									"end": 1453,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1442,
									"end": 1454,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1530,
									"end": 1532,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1517,
									"end": 1523,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1513,
									"end": 1528,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1510,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1504,
									"end": 1506,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1511,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1465,
									"end": 1533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1569,
									"end": 1777,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1569,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1639,
									"end": 1645,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1694,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1680,
									"end": 1689,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1667,
									"end": 1690,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1663,
									"end": 1695,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1708,
									"end": 1709,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1706,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1698,
									"end": 1710,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1731,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1761,
									"end": 1770,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1731,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1731,
									"end": 1771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2892,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 2605,
									"end": 2892,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2734,
									"end": 2737,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2778,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2766,
									"end": 2779,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 2847,
									"end": 2853,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2842,
									"end": 2845,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2835,
									"end": 2839,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2827,
									"end": 2833,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2854,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2788,
									"end": 2854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2854,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 2788,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2886,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2886,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2886,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2886,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2886,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2605,
									"end": 2892,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2605,
									"end": 2892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3651,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 3255,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3404,
									"end": 3406,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3393,
									"end": 3402,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3386,
									"end": 3407,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3367,
									"end": 3371,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3442,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3430,
									"end": 3443,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3479,
									"end": 3485,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3474,
									"end": 3476,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3463,
									"end": 3472,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3459,
									"end": 3477,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3452,
									"end": 3486,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3574,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3567,
									"end": 3573,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3562,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3551,
									"end": 3560,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3547,
									"end": 3565,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3544,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3534,
									"end": 3540,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3530,
									"end": 3545,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3574,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3495,
									"end": 3574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3574,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 3495,
									"end": 3574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3635,
									"end": 3637,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3614,
									"end": 3629,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3610,
									"end": 3639,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3595,
									"end": 3640,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3595,
									"end": 3640,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3595,
									"end": 3640,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3595,
									"end": 3640,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3642,
									"end": 3644,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3591,
									"end": 3645,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3591,
									"end": 3645,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3651,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3255,
									"end": 3651,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3255,
									"end": 3651,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 3255,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd4e0e82f8adc55fda1d31a950fb022ce4d66bbfe6f201a9215047f18fe9c2a464736f6c63430008110033",
									".code": [
										{
											"begin": 580,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6769,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH data",
											"source": 7,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6788,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6865,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 2049,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1859,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4719,
											"end": 4785,
											"name": "PUSH",
											"source": 3,
											"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "PUSH",
											"source": 5,
											"value": "5C60DA1B"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1537,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 7265,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DELEGATECALL",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7349,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7307,
											"end": 7376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7376,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7058,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1097,
											"end": 1099,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1167,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1168,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 304,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 179,
											"end": 195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 224,
											"end": 255,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 214,
											"end": 256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 256,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 204,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 270,
											"end": 271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 260,
											"end": 272,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 309,
											"end": 559,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 309,
											"end": 559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 394,
											"end": 395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 418,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 412,
											"end": 425,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 494,
											"end": 505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 494,
											"end": 505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 494,
											"end": 505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 488,
											"end": 506,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 475,
											"end": 486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 475,
											"end": 486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 475,
											"end": 486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 468,
											"end": 507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 533,
											"end": 549,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 526,
											"end": 553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 309,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 851,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 564,
											"end": 851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 725,
											"end": 738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 747,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 794,
											"end": 798,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 782,
											"end": 799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 747,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 747,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 747,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 747,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 564,
											"end": 851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 564,
											"end": 851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1610,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1214,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1345,
											"end": 1366,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1326,
											"end": 1330,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1454,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1569,
											"end": 1598,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1214,
											"end": 1610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/Context.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"Gemstone/Proxy/BeaconProxyNFTdynamic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201560f41789e08c24e79d82c75f206859921cb97a9bf35d4e03f100b0b66e8f6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201560f41789e08c24e79d82c75f206859921cb97a9bf35d4e03f100b0b66e8f6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH1 0xF4 OR DUP10 0xE0 DUP13 0x24 0xE7 SWAP14 DUP3 0xC7 0x5F KECCAK256 PUSH9 0x59921CB97A9BF35D4E SUB CALL STOP 0xB0 0xB6 PUSH15 0x8F6064736F6C634300081100330000 ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201560f41789e08c24e79d82c75f206859921cb97a9bf35d4e03f100b0b66e8f6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH1 0xF4 OR DUP10 0xE0 DUP13 0x24 0xE7 SWAP14 DUP3 0xC7 0x5F KECCAK256 PUSH9 0x59921CB97A9BF35D4E SUB CALL STOP 0xB0 0xB6 PUSH15 0x8F6064736F6C634300081100330000 ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201560f41789e08c24e79d82c75f206859921cb97a9bf35d4e03f100b0b66e8f6064736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/Context.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"Gemstone/Proxy/BeaconProxyNFTdynamic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ec9cdab26467794932ac2df58c66fe025d6230dc9ea7d74447ee90ac5328e93264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec9cdab26467794932ac2df58c66fe025d6230dc9ea7d74447ee90ac5328e93264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP13 0xDA 0xB2 PUSH5 0x67794932AC 0x2D CREATE2 DUP13 PUSH7 0xFE025D6230DC9E 0xA7 0xD7 DIFFICULTY SELFBALANCE 0xEE SWAP1 0xAC MSTORE8 0x28 0xE9 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1420:2685:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec9cdab26467794932ac2df58c66fe025d6230dc9ea7d74447ee90ac5328e93264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP13 0xDA 0xB2 PUSH5 0x67794932AC 0x2D CREATE2 DUP13 PUSH7 0xFE025D6230DC9E 0xA7 0xD7 DIFFICULTY SELFBALANCE 0xEE SWAP1 0xAC MSTORE8 0x28 0xE9 ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1420:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec9cdab26467794932ac2df58c66fe025d6230dc9ea7d74447ee90ac5328e93264736f6c63430008110033",
									".code": [
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/Context.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"Gemstone/Proxy/BeaconProxyNFTdynamic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Gemstone/Proxy/BeaconProxyNFTdynamic.sol": {
				"nftCollectionBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "identity",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":187:772  contract nftCollectionBeacon is BeaconProxy{... */\n  mstore(0x40, 0x80)\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":236:769  constructor(address beacon,string memory name,string memory symbol,address identity,address admin,address owner) BeaconProxy(beacon,\"\"){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":361:367  beacon */\n  dup6\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  tag_7\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1149:1155  beacon */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1157:1161  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1163:1168  false */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1148  _upgradeBeaconToAndCall */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":373:395  address implementation */\n  0x00\n  swap1\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":396:413  _implementation() */\n  tag_10\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":396:411  _implementation */\n  tag_11\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":396:413  _implementation() */\n  jump\t// in\ntag_10:\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":373:413  address implementation=_implementation() */\n  swap1\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":417:429  bool success */\n  0x00\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":435:449  implementation */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":435:462  implementation.delegatecall */\n  and\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":586:590  name */\n  dup8\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":608:614  symbol */\n  dup8\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":632:640  identity */\n  dup8\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":658:663  admin */\n  dup8\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":681:686  owner */\n  dup8\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":476:700  abi.encodeWithSignature(... */\n  add(0x24, mload(0x40))\n  tag_12\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  0x40\n  dup1\n  mload\n  not(0x1f)\n  dup2\n  dup5\n  sub\n  add\n  dup2\n  mstore\n  swap2\n  dup2\n  mstore\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  sub(shl(0xe0, 0x01), 0x01)\n  and\n  shl(0xe5, 0x06d876b5)\n  or\n  swap1\n  mstore\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":435:710  implementation.delegatecall(... */\n  mload\n  tag_14\n  swap2\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":476:700  abi.encodeWithSignature(... */\n  swap1\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":435:710  implementation.delegatecall(... */\n  tag_15\n  jump\t// in\ntag_14:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_18\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_17)\ntag_18:\n  0x60\n  swap2\n  pop\ntag_17:\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":416:710  (bool success, ) = implementation.delegatecall(... */\n  pop\n  swap1\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":728:735  success */\n  dup1\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":720:762  require(success, \"Initialization failed.\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3636:3638   */\n  0x20\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":720:762  require(success, \"Initialization failed.\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3618:3639   */\n  mstore\n    /* \"#utility.yul\":3675:3677   */\n  0x16\n    /* \"#utility.yul\":3655:3673   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3648:3678   */\n  mstore\n    /* \"#utility.yul\":3714:3738   */\n  0x496e697469616c697a6174696f6e206661696c65642e00000000000000000000\n    /* \"#utility.yul\":3694:3712   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3687:3739   */\n  mstore\n    /* \"#utility.yul\":3756:3774   */\n  0x64\n  add\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":720:762  require(success, \"Initialization failed.\") */\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":371:769  {... */\n  pop\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":236:769  constructor(address beacon,string memory name,string memory symbol,address identity,address admin,address owner) BeaconProxy(beacon,\"\"){... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":187:772  contract nftCollectionBeacon is BeaconProxy{... */\n  jump(tag_89)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\ntag_8:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  tag_24\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5845:5854  newBeacon */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5844  _setBeacon */\n  tag_25\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5870:5895  BeaconUpgraded(newBeacon) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5923:5924  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5913  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5920  data.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5924  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\n  dup1\n  tag_26\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5928:5937  forceCall */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\ntag_26:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  tag_28\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5990:5999  newBeacon */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6015  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6017  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_30\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_30:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":6019:6023  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:5981  Address.functionDelegateCall */\n  or(tag_0_10, shl(0x20, tag_33))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\ntag_27:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1511:1518  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n  tag_35\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1555  _getBeacon */\n  tag_36\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n  jump\t// in\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1573  IBeacon(_getBeacon()).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1575  IBeacon(_getBeacon()).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_38\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_38:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_39\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1530:1575  return IBeacon(_getBeacon()).implementation() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\ntag_25:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5119:5148  Address.isContract(newBeacon) */\n  tag_41\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5138:5147  newBeacon */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5119:5137  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_42))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5119:5148  Address.isContract(newBeacon) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4200:4202   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4182:4203   */\n  mstore\n    /* \"#utility.yul\":4239:4241   */\n  0x25\n    /* \"#utility.yul\":4219:4237   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4212:4242   */\n  mstore\n    /* \"#utility.yul\":4278:4312   */\n  0x455243313936373a206e657720626561636f6e206973206e6f74206120636f6e\n    /* \"#utility.yul\":4258:4276   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4251:4313   */\n  mstore\n  shl(0xda, 0x1d1c9858dd)\n    /* \"#utility.yul\":4329:4347   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4322:4357   */\n  mstore\n    /* \"#utility.yul\":4374:4393   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  tag_20\n    /* \"#utility.yul\":3998:4399   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\ntag_43:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\n  tag_46\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5248:5257  newBeacon */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5273  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5275  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_48\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_48:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_49\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5239  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_42))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_50\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4606:4608   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4588:4609   */\n  mstore\n    /* \"#utility.yul\":4645:4647   */\n  0x30\n    /* \"#utility.yul\":4625:4643   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4618:4648   */\n  mstore\n    /* \"#utility.yul\":4684:4718   */\n  0x455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069\n    /* \"#utility.yul\":4664:4682   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4657:4719   */\n  mstore\n  shl(0x82, 0x1cc81b9bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":4735:4753   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":4728:4774   */\n  mstore\n    /* \"#utility.yul\":4791:4810   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_20\n    /* \"#utility.yul\":4404:4816   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\ntag_50:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5409:5418  newBeacon */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5400  StorageSlot.getAddressSlot(_BEACON_SLOT) */\n  tag_53\n  0x00\n  dup1\n  mload\n  0x20\n  data_48bf63a2fc0cedde9effb3f5b74f519e781a8da221ed8e3253206f2b0a0d2f1f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5387:5399  _BEACON_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5386  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_54))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5400  StorageSlot.getAddressSlot(_BEACON_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5418  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_33:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6757:6769  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_56\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6809:6815  target */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6817:6821  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6808  functionDelegateCall */\n  tag_57\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_56:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4848:4972  function _getBeacon() internal view returns (address) {... */\ntag_36:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4893:4900  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4959  StorageSlot.getAddressSlot(_BEACON_SLOT) */\n  tag_59\n  0x00\n  dup1\n  mload\n  0x20\n  data_48bf63a2fc0cedde9effb3f5b74f519e781a8da221ed8e3253206f2b0a0d2f1f\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4946:4958  _BEACON_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4945  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_54))\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4959  StorageSlot.getAddressSlot(_BEACON_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_59:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4965  StorageSlot.getAddressSlot(_BEACON_SLOT).value */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4848:4972  function _getBeacon() internal view returns (address) {... */\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1725  account.code.length > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_54:\n    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":2029:2033  slot */\n  swap1\n    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\ntag_57:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7199:7211  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7224:7236  bool success */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7238:7261  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7271  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7284  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7285:7289  data */\n  dup6\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n  mload(0x40)\n  tag_63\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_63:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_66\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_65)\ntag_66:\n  0x60\n  swap2\n  pop\ntag_65:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_67\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7334:7340  target */\n  dup7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7363:7375  errorMessage */\n  dup8\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n  tag_68\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  jump\t// in\ntag_67:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\ntag_68:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7851:7863  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7879:7886  success */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n  iszero\n  tag_70\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7916  returndata */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7923  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7927:7928  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7928  returndata.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n  tag_73\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  dup6\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_73\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5023:5025   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5005:5026   */\n  mstore\n    /* \"#utility.yul\":5062:5064   */\n  0x1d\n    /* \"#utility.yul\":5042:5060   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5035:5065   */\n  mstore\n    /* \"#utility.yul\":5101:5132   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":5081:5099   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5074:5133   */\n  mstore\n    /* \"#utility.yul\":5150:5168   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_20\n    /* \"#utility.yul\":4821:5174   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\ntag_73:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8208:8218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8201:8218  return returndata */\n  jump(tag_77)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\ntag_70:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  tag_77\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8257:8267  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8269:8281  errorMessage */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8256  _revert */\n  tag_78\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  jump\t// in\ntag_77:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_78:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:8997  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:9001  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n  tag_80\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9208:9218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9202:9219  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9264:9279  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9251:9261  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9247:9249  32 */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9243:9262  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\ntag_80:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9331:9343  errorMessage */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9324:9344  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_83\n  jump\t// in\n    /* \"#utility.yul\":14:191   */\ntag_84:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_91:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_85:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:578   */\ntag_86:\n    /* \"#utility.yul\":413:414   */\n  0x00\n    /* \"#utility.yul\":423:536   */\ntag_94:\n    /* \"#utility.yul\":437:443   */\n  dup4\n    /* \"#utility.yul\":434:435   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  lt\n    /* \"#utility.yul\":423:536   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":513:524   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":507:525   */\n  mload\n    /* \"#utility.yul\":494:505   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":487:526   */\n  mstore\n    /* \"#utility.yul\":459:461   */\n  0x20\n    /* \"#utility.yul\":452:462   */\n  add\n    /* \"#utility.yul\":423:536   */\n  jump(tag_94)\ntag_96:\n  pop\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":552:568   */\n  swap2\n  add\n    /* \"#utility.yul\":545:572   */\n  mstore\n    /* \"#utility.yul\":328:578   */\n  jump\t// out\n    /* \"#utility.yul\":583:1282   */\ntag_87:\n    /* \"#utility.yul\":637:642   */\n  0x00\n    /* \"#utility.yul\":690:693   */\n  dup3\n    /* \"#utility.yul\":683:687   */\n  0x1f\n    /* \"#utility.yul\":675:681   */\n  dup4\n    /* \"#utility.yul\":671:688   */\n  add\n    /* \"#utility.yul\":667:694   */\n  slt\n    /* \"#utility.yul\":657:712   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":708:709   */\n  0x00\n    /* \"#utility.yul\":705:706   */\n  dup1\n    /* \"#utility.yul\":698:710   */\n  revert\n    /* \"#utility.yul\":657:712   */\ntag_98:\n    /* \"#utility.yul\":731:744   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":793:803   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":790:826   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":806:824   */\n  tag_100\n  tag_85\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":881:883   */\n  0x40\n    /* \"#utility.yul\":875:884   */\n  mload\n    /* \"#utility.yul\":849:851   */\n  0x1f\n    /* \"#utility.yul\":935:948   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":931:953   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":955:957   */\n  0x3f\n    /* \"#utility.yul\":927:958   */\n  add\n    /* \"#utility.yul\":923:963   */\n  and\n    /* \"#utility.yul\":911:964   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":979:997   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":999:1021   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":976:1022   */\n  or\n    /* \"#utility.yul\":973:1045   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1025:1043   */\n  tag_102\n  tag_85\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1065:1075   */\n  dup2\n    /* \"#utility.yul\":1061:1063   */\n  0x40\n    /* \"#utility.yul\":1054:1076   */\n  mstore\n    /* \"#utility.yul\":1100:1102   */\n  dup4\n    /* \"#utility.yul\":1092:1098   */\n  dup2\n    /* \"#utility.yul\":1085:1103   */\n  mstore\n    /* \"#utility.yul\":1146:1149   */\n  dup7\n    /* \"#utility.yul\":1139:1143   */\n  0x20\n    /* \"#utility.yul\":1134:1136   */\n  dup6\n    /* \"#utility.yul\":1126:1132   */\n  dup9\n    /* \"#utility.yul\":1122:1137   */\n  add\n    /* \"#utility.yul\":1118:1144   */\n  add\n    /* \"#utility.yul\":1115:1150   */\n  gt\n    /* \"#utility.yul\":1112:1167   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":1163:1164   */\n  0x00\n    /* \"#utility.yul\":1160:1161   */\n  dup1\n    /* \"#utility.yul\":1153:1165   */\n  revert\n    /* \"#utility.yul\":1112:1167   */\ntag_103:\n    /* \"#utility.yul\":1176:1252   */\n  tag_67\n    /* \"#utility.yul\":1249:1251   */\n  dup5\n    /* \"#utility.yul\":1242:1246   */\n  0x20\n    /* \"#utility.yul\":1234:1240   */\n  dup4\n    /* \"#utility.yul\":1230:1247   */\n  add\n    /* \"#utility.yul\":1223:1227   */\n  0x20\n    /* \"#utility.yul\":1215:1221   */\n  dup10\n    /* \"#utility.yul\":1211:1228   */\n  add\n    /* \"#utility.yul\":1176:1252   */\n  tag_86\n  jump\t// in\n    /* \"#utility.yul\":1287:2192   */\ntag_3:\n    /* \"#utility.yul\":1422:1428   */\n  0x00\n    /* \"#utility.yul\":1430:1436   */\n  dup1\n    /* \"#utility.yul\":1438:1444   */\n  0x00\n    /* \"#utility.yul\":1446:1452   */\n  dup1\n    /* \"#utility.yul\":1454:1460   */\n  0x00\n    /* \"#utility.yul\":1462:1468   */\n  dup1\n    /* \"#utility.yul\":1515:1518   */\n  0xc0\n    /* \"#utility.yul\":1503:1512   */\n  dup8\n    /* \"#utility.yul\":1494:1501   */\n  dup10\n    /* \"#utility.yul\":1490:1513   */\n  sub\n    /* \"#utility.yul\":1486:1519   */\n  slt\n    /* \"#utility.yul\":1483:1536   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1532:1533   */\n  0x00\n    /* \"#utility.yul\":1529:1530   */\n  dup1\n    /* \"#utility.yul\":1522:1534   */\n  revert\n    /* \"#utility.yul\":1483:1536   */\ntag_106:\n    /* \"#utility.yul\":1555:1595   */\n  tag_107\n    /* \"#utility.yul\":1585:1594   */\n  dup8\n    /* \"#utility.yul\":1555:1595   */\n  tag_84\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1639:1641   */\n  0x20\n    /* \"#utility.yul\":1624:1642   */\n  dup9\n  add\n    /* \"#utility.yul\":1618:1643   */\n  mload\n    /* \"#utility.yul\":1545:1595   */\n  swap1\n  swap7\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1692:1706   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1689:1723   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1719:1720   */\n  0x00\n    /* \"#utility.yul\":1716:1717   */\n  dup1\n    /* \"#utility.yul\":1709:1721   */\n  revert\n    /* \"#utility.yul\":1689:1723   */\ntag_108:\n    /* \"#utility.yul\":1742:1803   */\n  tag_109\n    /* \"#utility.yul\":1795:1802   */\n  dup11\n    /* \"#utility.yul\":1786:1792   */\n  dup4\n    /* \"#utility.yul\":1775:1784   */\n  dup12\n    /* \"#utility.yul\":1771:1793   */\n  add\n    /* \"#utility.yul\":1742:1803   */\n  tag_87\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1732:1803   */\n  swap7\n  pop\n    /* \"#utility.yul\":1849:1851   */\n  0x40\n    /* \"#utility.yul\":1838:1847   */\n  dup10\n    /* \"#utility.yul\":1834:1852   */\n  add\n    /* \"#utility.yul\":1828:1853   */\n  mload\n    /* \"#utility.yul\":1812:1853   */\n  swap2\n  pop\n    /* \"#utility.yul\":1878:1880   */\n  dup1\n    /* \"#utility.yul\":1868:1876   */\n  dup3\n    /* \"#utility.yul\":1865:1881   */\n  gt\n    /* \"#utility.yul\":1862:1898   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":1894:1895   */\n  0x00\n    /* \"#utility.yul\":1891:1892   */\n  dup1\n    /* \"#utility.yul\":1884:1896   */\n  revert\n    /* \"#utility.yul\":1862:1898   */\ntag_110:\n  pop\n    /* \"#utility.yul\":1917:1980   */\n  tag_111\n    /* \"#utility.yul\":1972:1979   */\n  dup10\n    /* \"#utility.yul\":1961:1969   */\n  dup3\n    /* \"#utility.yul\":1950:1959   */\n  dup11\n    /* \"#utility.yul\":1946:1970   */\n  add\n    /* \"#utility.yul\":1917:1980   */\n  tag_87\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1907:1980   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":1999:2048   */\n  tag_112\n    /* \"#utility.yul\":2044:2046   */\n  0x60\n    /* \"#utility.yul\":2033:2042   */\n  dup9\n    /* \"#utility.yul\":2029:2047   */\n  add\n    /* \"#utility.yul\":1999:2048   */\n  tag_84\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1989:2048   */\n  swap3\n  pop\n    /* \"#utility.yul\":2067:2117   */\n  tag_113\n    /* \"#utility.yul\":2112:2115   */\n  0x80\n    /* \"#utility.yul\":2101:2110   */\n  dup9\n    /* \"#utility.yul\":2097:2116   */\n  add\n    /* \"#utility.yul\":2067:2117   */\n  tag_84\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2057:2117   */\n  swap2\n  pop\n    /* \"#utility.yul\":2136:2186   */\n  tag_114\n    /* \"#utility.yul\":2181:2184   */\n  0xa0\n    /* \"#utility.yul\":2170:2179   */\n  dup9\n    /* \"#utility.yul\":2166:2185   */\n  add\n    /* \"#utility.yul\":2136:2186   */\n  tag_84\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2126:2186   */\n  swap1\n  pop\n    /* \"#utility.yul\":1287:2192   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":2197:2468   */\ntag_88:\n    /* \"#utility.yul\":2239:2242   */\n  0x00\n    /* \"#utility.yul\":2277:2282   */\n  dup2\n    /* \"#utility.yul\":2271:2283   */\n  mload\n    /* \"#utility.yul\":2304:2310   */\n  dup1\n    /* \"#utility.yul\":2299:2302   */\n  dup5\n    /* \"#utility.yul\":2292:2311   */\n  mstore\n    /* \"#utility.yul\":2320:2396   */\n  tag_116\n    /* \"#utility.yul\":2389:2395   */\n  dup2\n    /* \"#utility.yul\":2382:2386   */\n  0x20\n    /* \"#utility.yul\":2377:2380   */\n  dup7\n    /* \"#utility.yul\":2373:2387   */\n  add\n    /* \"#utility.yul\":2366:2370   */\n  0x20\n    /* \"#utility.yul\":2359:2364   */\n  dup7\n    /* \"#utility.yul\":2355:2371   */\n  add\n    /* \"#utility.yul\":2320:2396   */\n  tag_86\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2450:2452   */\n  0x1f\n    /* \"#utility.yul\":2429:2444   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2425:2454   */\n  and\n    /* \"#utility.yul\":2416:2455   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":2457:2461   */\n  0x20\n    /* \"#utility.yul\":2412:2462   */\n  add\n  swap3\n    /* \"#utility.yul\":2197:2468   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2473:3137   */\ntag_13:\n    /* \"#utility.yul\":2754:2757   */\n  0xa0\n    /* \"#utility.yul\":2743:2752   */\n  dup2\n    /* \"#utility.yul\":2736:2758   */\n  mstore\n    /* \"#utility.yul\":2717:2721   */\n  0x00\n    /* \"#utility.yul\":2781:2827   */\n  tag_118\n    /* \"#utility.yul\":2822:2825   */\n  0xa0\n    /* \"#utility.yul\":2811:2820   */\n  dup4\n    /* \"#utility.yul\":2807:2826   */\n  add\n    /* \"#utility.yul\":2799:2805   */\n  dup9\n    /* \"#utility.yul\":2781:2827   */\n  tag_88\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2875:2884   */\n  dup3\n    /* \"#utility.yul\":2867:2873   */\n  dup2\n    /* \"#utility.yul\":2863:2885   */\n  sub\n    /* \"#utility.yul\":2858:2860   */\n  0x20\n    /* \"#utility.yul\":2847:2856   */\n  dup5\n    /* \"#utility.yul\":2843:2861   */\n  add\n    /* \"#utility.yul\":2836:2886   */\n  mstore\n    /* \"#utility.yul\":2903:2936   */\n  tag_119\n    /* \"#utility.yul\":2929:2935   */\n  dup2\n    /* \"#utility.yul\":2921:2927   */\n  dup9\n    /* \"#utility.yul\":2903:2936   */\n  tag_88\n  jump\t// in\ntag_119:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3010:3025   */\n  swap7\n  dup8\n  and\n    /* \"#utility.yul\":3005:3007   */\n  0x40\n    /* \"#utility.yul\":2990:3008   */\n  dup6\n  add\n    /* \"#utility.yul\":2983:3026   */\n  mstore\n    /* \"#utility.yul\":3062:3077   */\n  swap5\n  dup7\n  and\n    /* \"#utility.yul\":3057:3059   */\n  0x60\n    /* \"#utility.yul\":3042:3060   */\n  dup5\n  add\n    /* \"#utility.yul\":3035:3078   */\n  mstore\n  pop\n  pop\n    /* \"#utility.yul\":3115:3130   */\n  swap3\n  and\n    /* \"#utility.yul\":3109:3112   */\n  0x80\n    /* \"#utility.yul\":3094:3113   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":3087:3131   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":2895:2936   */\n  swap3\n    /* \"#utility.yul\":2473:3137   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3142:3429   */\ntag_15:\n    /* \"#utility.yul\":3271:3274   */\n  0x00\n    /* \"#utility.yul\":3309:3315   */\n  dup3\n    /* \"#utility.yul\":3303:3316   */\n  mload\n    /* \"#utility.yul\":3325:3391   */\n  tag_121\n    /* \"#utility.yul\":3384:3390   */\n  dup2\n    /* \"#utility.yul\":3379:3382   */\n  dup5\n    /* \"#utility.yul\":3372:3376   */\n  0x20\n    /* \"#utility.yul\":3364:3370   */\n  dup8\n    /* \"#utility.yul\":3360:3377   */\n  add\n    /* \"#utility.yul\":3325:3391   */\n  tag_86\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3407:3423   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":3142:3429   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3785:3993   */\ntag_32:\n    /* \"#utility.yul\":3855:3861   */\n  0x00\n    /* \"#utility.yul\":3908:3910   */\n  0x20\n    /* \"#utility.yul\":3896:3905   */\n  dup3\n    /* \"#utility.yul\":3887:3894   */\n  dup5\n    /* \"#utility.yul\":3883:3906   */\n  sub\n    /* \"#utility.yul\":3879:3911   */\n  slt\n    /* \"#utility.yul\":3876:3928   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3924:3925   */\n  0x00\n    /* \"#utility.yul\":3921:3922   */\n  dup1\n    /* \"#utility.yul\":3914:3926   */\n  revert\n    /* \"#utility.yul\":3876:3928   */\ntag_124:\n    /* \"#utility.yul\":3947:3987   */\n  tag_56\n    /* \"#utility.yul\":3977:3986   */\n  dup3\n    /* \"#utility.yul\":3947:3987   */\n  tag_84\n  jump\t// in\n    /* \"#utility.yul\":5179:5399   */\ntag_83:\n    /* \"#utility.yul\":5328:5330   */\n  0x20\n    /* \"#utility.yul\":5317:5326   */\n  dup2\n    /* \"#utility.yul\":5310:5331   */\n  mstore\n    /* \"#utility.yul\":5291:5295   */\n  0x00\n    /* \"#utility.yul\":5348:5393   */\n  tag_56\n    /* \"#utility.yul\":5389:5391   */\n  0x20\n    /* \"#utility.yul\":5378:5387   */\n  dup4\n    /* \"#utility.yul\":5374:5392   */\n  add\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5348:5393   */\n  tag_88\n  jump\t// in\n    /* \"#utility.yul\":5179:5399   */\ntag_89:\n    /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":187:772  contract nftCollectionBeacon is BeaconProxy{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_48bf63a2fc0cedde9effb3f5b74f519e781a8da221ed8e3253206f2b0a0d2f1f a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":187:772  contract nftCollectionBeacon is BeaconProxy{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":187:772  contract nftCollectionBeacon is BeaconProxy{... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_16\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_17\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_18\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_19\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6757:6769  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_21\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6809:6815  target */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6817:6821  data */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6808  functionDelegateCall */\n      tag_22\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_21:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":2029:2033  slot */\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1511:1518  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n      tag_27\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4965  StorageSlot.getAddressSlot(_BEACON_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4848:4972  function _getBeacon() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1573  IBeacon(_getBeacon()).implementation */\n      and\n      0x5c60da1b\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1575  IBeacon(_getBeacon()).implementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1530:1575  return IBeacon(_getBeacon()).implementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_19:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_35\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_35:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7199:7211  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7224:7236  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7238:7261  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7271  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7284  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7285:7289  data */\n      dup6\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_41\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_40)\n    tag_41:\n      0x60\n      swap2\n      pop\n    tag_40:\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_42\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7334:7340  target */\n      dup7\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7342:7349  success */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7351:7361  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7363:7375  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n      tag_43\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_42:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_43:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7916  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_50\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1058:1060   */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1040:1061   */\n      mstore\n        /* \"#utility.yul\":1097:1099   */\n      0x1d\n        /* \"#utility.yul\":1077:1095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1070:1100   */\n      mstore\n        /* \"#utility.yul\":1136:1167   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":1116:1134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1109:1168   */\n      mstore\n        /* \"#utility.yul\":1185:1203   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8208:8218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8201:8218  return returndata */\n      jump(tag_54)\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_54\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8256  _revert */\n      tag_55\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_54:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_55:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:8997  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      tag_57\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n        /* \"#utility.yul\":14:304   */\n    tag_32:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_64:\n        /* \"#utility.yul\":179:195   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:255   */\n      dup2\n      and\n        /* \"#utility.yul\":214:256   */\n      dup2\n      eq\n        /* \"#utility.yul\":204:274   */\n      tag_21\n      jumpi\n        /* \"#utility.yul\":270:271   */\n      0x00\n        /* \"#utility.yul\":267:268   */\n      dup1\n        /* \"#utility.yul\":260:272   */\n      revert\n        /* \"#utility.yul\":309:559   */\n    tag_61:\n        /* \"#utility.yul\":394:395   */\n      0x00\n        /* \"#utility.yul\":404:517   */\n    tag_67:\n        /* \"#utility.yul\":418:424   */\n      dup4\n        /* \"#utility.yul\":415:416   */\n      dup2\n        /* \"#utility.yul\":412:425   */\n      lt\n        /* \"#utility.yul\":404:517   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":494:505   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":488:506   */\n      mload\n        /* \"#utility.yul\":475:486   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":468:507   */\n      mstore\n        /* \"#utility.yul\":440:442   */\n      0x20\n        /* \"#utility.yul\":433:443   */\n      add\n        /* \"#utility.yul\":404:517   */\n      jump(tag_67)\n    tag_69:\n      pop\n      pop\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":533:549   */\n      swap2\n      add\n        /* \"#utility.yul\":526:553   */\n      mstore\n        /* \"#utility.yul\":309:559   */\n      jump\t// out\n        /* \"#utility.yul\":564:851   */\n    tag_38:\n        /* \"#utility.yul\":693:696   */\n      0x00\n        /* \"#utility.yul\":731:737   */\n      dup3\n        /* \"#utility.yul\":725:738   */\n      mload\n        /* \"#utility.yul\":747:813   */\n      tag_71\n        /* \"#utility.yul\":806:812   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup5\n        /* \"#utility.yul\":794:798   */\n      0x20\n        /* \"#utility.yul\":786:792   */\n      dup8\n        /* \"#utility.yul\":782:799   */\n      add\n        /* \"#utility.yul\":747:813   */\n      tag_61\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":829:845   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":564:851   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1214:1610   */\n    tag_60:\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1352:1361   */\n      dup2\n        /* \"#utility.yul\":1345:1366   */\n      mstore\n        /* \"#utility.yul\":1326:1330   */\n      0x00\n        /* \"#utility.yul\":1395:1401   */\n      dup3\n        /* \"#utility.yul\":1389:1402   */\n      mload\n        /* \"#utility.yul\":1438:1444   */\n      dup1\n        /* \"#utility.yul\":1433:1435   */\n      0x20\n        /* \"#utility.yul\":1422:1431   */\n      dup5\n        /* \"#utility.yul\":1418:1436   */\n      add\n        /* \"#utility.yul\":1411:1445   */\n      mstore\n        /* \"#utility.yul\":1454:1533   */\n      tag_74\n        /* \"#utility.yul\":1526:1532   */\n      dup2\n        /* \"#utility.yul\":1521:1523   */\n      0x40\n        /* \"#utility.yul\":1510:1519   */\n      dup6\n        /* \"#utility.yul\":1506:1524   */\n      add\n        /* \"#utility.yul\":1501:1503   */\n      0x20\n        /* \"#utility.yul\":1493:1499   */\n      dup8\n        /* \"#utility.yul\":1489:1504   */\n      add\n        /* \"#utility.yul\":1454:1533   */\n      tag_61\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1594:1596   */\n      0x1f\n        /* \"#utility.yul\":1573:1588   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1569:1598   */\n      and\n        /* \"#utility.yul\":1554:1599   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1601:1603   */\n      0x40\n        /* \"#utility.yul\":1550:1604   */\n      add\n      swap3\n        /* \"#utility.yul\":1214:1610   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa26469706673582212205dbeacd0813a575ebf2adc79ac6de0793615de158053642df6de9170162298df64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1096": {
									"entryPoint": null,
									"id": 1096,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_524": {
									"entryPoint": null,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getBeacon_372": {
									"entryPoint": 1157,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_549": {
									"entryPoint": 580,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_904": {
									"entryPoint": 1495,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setBeacon_408": {
									"entryPoint": 697,
									"id": 408,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeBeaconToAndCall_446": {
									"entryPoint": 367,
									"id": 446,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@functionDelegateCall_792": {
									"entryPoint": 1110,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_821": {
									"entryPoint": 1232,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_967": {
									"entryPoint": 1229,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_593": {
									"entryPoint": 1214,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_860": {
									"entryPoint": 1359,
									"id": 860,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address_fromMemory": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_string": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5401:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:11"
															},
															"nodeType": "YulIf",
															"src": "115:70:11"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "394:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "404:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "413:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "408:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "473:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "498:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "503:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "494:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "494:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "517:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "522:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "513:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "513:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "507:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "507:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "487:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "487:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "487:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "434:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "431:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "445:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "447:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "456:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "452:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "447:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "427:3:11",
																"statements": []
															},
															"src": "423:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "372:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "377:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "382:6:11",
														"type": ""
													}
												],
												"src": "328:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "647:635:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "696:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "698:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "698:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "698:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "675:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "683:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "671:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "671:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "690:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "667:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "667:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "660:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:35:11"
															},
															"nodeType": "YulIf",
															"src": "657:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "721:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "737:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "731:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:13:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "725:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "753:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "771:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "775:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "767:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "767:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "763:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:18:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "757:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "804:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "806:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "806:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "806:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "796:2:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "800:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "793:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:10:11"
															},
															"nodeType": "YulIf",
															"src": "790:36:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "835:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:7:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "839:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "861:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "875:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "865:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "893:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "915:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "939:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "943:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "935:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "935:13:11"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "950:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "931:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "931:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "955:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "927:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "927:31:11"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "960:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "897:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1025:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "982:10:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "994:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "979:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "979:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1002:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "999:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "976:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:46:11"
															},
															"nodeType": "YulIf",
															"src": "973:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1065:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1092:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1100:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1085:18:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1151:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1163:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1153:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1153:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1153:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1126:6:11"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1134:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1122:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1122:15:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1139:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1118:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1118:26:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1146:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1115:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:35:11"
															},
															"nodeType": "YulIf",
															"src": "1112:55:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1223:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1234:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1242:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:17:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1249:2:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1176:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:76:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1176:76:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:15:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1270:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1261:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "629:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "637:5:11",
														"type": ""
													}
												],
												"src": "583:699:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1473:719:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1520:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1529:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1532:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1522:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1522:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1522:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1494:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1490:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1490:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1515:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:33:11"
															},
															"nodeType": "YulIf",
															"src": "1483:53:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1545:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1585:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1555:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:40:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1604:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1639:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1624:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1624:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1618:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:25:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1608:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1652:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1670:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1674:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1666:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:18:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1656:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1707:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1716:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1719:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1709:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1709:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1709:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1695:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1703:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1692:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1692:14:11"
															},
															"nodeType": "YulIf",
															"src": "1689:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1732:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1775:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1786:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1771:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1771:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1795:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1742:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:61:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1812:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1838:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1849:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1834:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1828:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:25:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1816:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1882:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1868:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1878:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1865:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:16:11"
															},
															"nodeType": "YulIf",
															"src": "1862:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1907:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1950:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1961:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1972:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1917:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:63:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1907:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1989:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2033:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2044:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2029:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2029:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1999:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:49:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2057:60:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2101:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2112:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2067:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2067:50:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2057:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2126:60:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2181:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2166:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2136:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:50:11"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1399:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1410:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1422:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1430:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1438:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1446:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1454:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1462:6:11",
														"type": ""
													}
												],
												"src": "1287:905:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:221:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2277:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2271:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2261:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2299:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2292:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2359:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2366:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2355:16:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2377:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2382:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2373:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2373:14:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2389:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2320:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:76:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2320:76:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2405:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2420:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2433:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2441:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2429:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2429:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2450:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2446:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2446:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2416:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:39:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2412:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2405:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2224:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2231:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2239:3:11",
														"type": ""
													}
												],
												"src": "2197:271:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2726:411:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2743:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2754:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2736:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2736:22:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2767:60:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2799:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2811:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2822:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2807:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2807:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2781:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:46:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2771:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2847:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2858:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2843:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "2867:6:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2836:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2836:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2895:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2921:6:11"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2929:6:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2903:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:33:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2895:4:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2945:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2963:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2968:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2972:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2949:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3014:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3022:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3010:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3046:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3057:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3042:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3042:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "3066:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3035:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3035:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3098:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3109:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3094:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3094:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3127:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3115:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3087:44:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2663:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2674:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2682:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2690:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2698:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2706:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2717:4:11",
														"type": ""
													}
												],
												"src": "2473:664:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3289:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3309:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3303:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3293:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3364:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3372:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3360:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3379:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3384:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3325:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3325:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3400:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3411:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3416:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3407:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3400:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3255:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3260:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3271:3:11",
														"type": ""
													}
												],
												"src": "3142:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3608:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3625:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3618:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3659:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3670:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3655:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3655:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3648:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3648:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3698:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3709:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3694:18:11"
																	},
																	{
																		"hexValue": "496e697469616c697a6174696f6e206661696c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3714:24:11",
																		"type": "",
																		"value": "Initialization failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3687:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3687:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3748:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3760:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3771:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3748:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3585:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3599:4:11",
														"type": ""
													}
												],
												"src": "3434:346:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3866:127:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3912:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3921:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3924:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3914:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3914:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3914:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3887:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3883:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:32:11"
															},
															"nodeType": "YulIf",
															"src": "3876:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3937:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3977:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3947:29:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:40:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3937:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3832:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3843:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3855:6:11",
														"type": ""
													}
												],
												"src": "3785:208:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4172:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4189:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4182:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4223:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4234:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4239:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4212:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:11"
																	},
																	{
																		"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4278:34:11",
																		"type": "",
																		"value": "ERC1967: new beacon is not a con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4251:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4251:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4333:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4344:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:18:11"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4349:7:11",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4322:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4366:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4378:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4389:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4366:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4149:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4163:4:11",
														"type": ""
													}
												],
												"src": "3998:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4578:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4595:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4606:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4588:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4629:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4640:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4625:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4625:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4645:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4618:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4618:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4668:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4679:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4664:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:18:11"
																	},
																	{
																		"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4684:34:11",
																		"type": "",
																		"value": "ERC1967: beacon implementation i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4657:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4657:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4739:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4750:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4735:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4735:18:11"
																	},
																	{
																		"hexValue": "73206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4755:18:11",
																		"type": "",
																		"value": "s not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4728:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4783:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4795:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4806:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4555:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4569:4:11",
														"type": ""
													}
												],
												"src": "4404:412:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4995:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5012:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5005:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5057:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5042:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5062:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5035:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5035:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5085:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5081:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5101:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5074:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5074:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5142:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5165:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5142:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4972:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4986:4:11",
														"type": ""
													}
												],
												"src": "4821:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5300:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5328:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5310:21:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5366:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5378:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5389:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5348:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5269:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5280:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5291:4:11",
														"type": ""
													}
												],
												"src": "5179:220:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 160)\n        let tail_1 := abi_encode_string(value0, add(headStart, 160))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Initialization failed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1967: new beacon is not a con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC1967: beacon implementation i\")\n        mstore(add(headStart, 96), \"s not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c0738038062000c078339810160408190526200003491620006e4565b856040518060200160405280600081525062000059828260006200016f60201b60201c565b50600090506200006862000244565b90506000816001600160a01b0316878787878760405160240162000091959493929190620007c6565b60408051601f198184030181529181526020820180516001600160e01b03166306d876b560e51b17905251620000c891906200081a565b600060405180830381855af49150503d806000811462000105576040519150601f19603f3d011682016040523d82523d6000602084013e6200010a565b606091505b5050905080620001615760405162461bcd60e51b815260206004820152601660248201527f496e697469616c697a6174696f6e206661696c65642e0000000000000000000060448201526064015b60405180910390fd5b50505050505050506200086b565b6200017a83620002b9565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a2600082511180620001bc5750805b156200023f576200023d836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022b919062000838565b836200045660201b620000291760201c565b505b505050565b60006200025062000485565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200028e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b4919062000838565b905090565b620002cf81620004be60201b620000551760201c565b6200032b5760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b606482015260840162000158565b620003a5816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200036e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000394919062000838565b620004be60201b620000551760201c565b6200040c5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b606482015260840162000158565b806200043560008051602062000bc083398151915260001b620004cd60201b620000641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606200047e838360405180606001604052806027815260200162000be060279139620004d0565b9392505050565b6000620004af60008051602062000bc083398151915260001b620004cd60201b620000641760201c565b546001600160a01b0316919050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b031685604051620004ef91906200081a565b600060405180830381855af49150503d80600081146200052c576040519150601f19603f3d011682016040523d82523d6000602084013e62000531565b606091505b50909250905062000545868383876200054f565b9695505050505050565b60608315620005c3578251600003620005bb576001600160a01b0385163b620005bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000158565b5081620005cf565b620005cf8383620005d7565b949350505050565b815115620005e85781518083602001fd5b8060405162461bcd60e51b815260040162000158919062000856565b80516001600160a01b03811681146200061c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620006545781810151838201526020016200063a565b50506000910152565b600082601f8301126200066f57600080fd5b81516001600160401b03808211156200068c576200068c62000621565b604051601f8301601f19908116603f01168101908282118183101715620006b757620006b762000621565b81604052838152866020858801011115620006d157600080fd5b6200054584602083016020890162000637565b60008060008060008060c08789031215620006fe57600080fd5b620007098762000604565b60208801519096506001600160401b03808211156200072757600080fd5b620007358a838b016200065d565b965060408901519150808211156200074c57600080fd5b506200075b89828a016200065d565b9450506200076c6060880162000604565b92506200077c6080880162000604565b91506200078c60a0880162000604565b90509295509295509295565b60008151808452620007b281602086016020860162000637565b601f01601f19169290920160200192915050565b60a081526000620007db60a083018862000798565b8281036020840152620007ef818862000798565b6001600160a01b03968716604085015294861660608401525050921660809092019190915292915050565b600082516200082e81846020870162000637565b9190910192915050565b6000602082840312156200084b57600080fd5b6200047e8262000604565b6020815260006200047e602083018462000798565b610345806200087b6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205dbeacd0813a575ebf2adc79ac6de0793615de158053642df6de9170162298df64736f6c63430008110033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC07 CODESIZE SUB DUP1 PUSH3 0xC07 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x6E4 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x59 DUP3 DUP3 PUSH1 0x0 PUSH3 0x16F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH3 0x68 PUSH3 0x244 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x91 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x7C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6D876B5 PUSH1 0xE5 SHL OR SWAP1 MSTORE MLOAD PUSH3 0xC8 SWAP2 SWAP1 PUSH3 0x81A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x105 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x10A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH3 0x161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A6174696F6E206661696C65642E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH3 0x86B JUMP JUMPDEST PUSH3 0x17A DUP4 PUSH3 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x1BC JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x23F JUMPI PUSH3 0x23D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x22B SWAP2 SWAP1 PUSH3 0x838 JUMP JUMPDEST DUP4 PUSH3 0x456 PUSH1 0x20 SHL PUSH3 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x250 PUSH3 0x485 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2B4 SWAP2 SWAP1 PUSH3 0x838 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2CF DUP2 PUSH3 0x4BE PUSH1 0x20 SHL PUSH3 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x158 JUMP JUMPDEST PUSH3 0x3A5 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x36E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x394 SWAP2 SWAP1 PUSH3 0x838 JUMP JUMPDEST PUSH3 0x4BE PUSH1 0x20 SHL PUSH3 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x158 JUMP JUMPDEST DUP1 PUSH3 0x435 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xBC0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x4CD PUSH1 0x20 SHL PUSH3 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x47E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xBE0 PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x4D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xBC0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x4CD PUSH1 0x20 SHL PUSH3 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x4EF SWAP2 SWAP1 PUSH3 0x81A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x52C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x531 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x545 DUP7 DUP4 DUP4 DUP8 PUSH3 0x54F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x5C3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH3 0x5BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH3 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x158 JUMP JUMPDEST POP DUP2 PUSH3 0x5CF JUMP JUMPDEST PUSH3 0x5CF DUP4 DUP4 PUSH3 0x5D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH3 0x5E8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x158 SWAP2 SWAP1 PUSH3 0x856 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x654 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x63A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x68C JUMPI PUSH3 0x68C PUSH3 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x6B7 JUMPI PUSH3 0x6B7 PUSH3 0x621 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x545 DUP5 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP10 ADD PUSH3 0x637 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x709 DUP8 PUSH3 0x604 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD SWAP1 SWAP7 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x735 DUP11 DUP4 DUP12 ADD PUSH3 0x65D JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x75B DUP10 DUP3 DUP11 ADD PUSH3 0x65D JUMP JUMPDEST SWAP5 POP POP PUSH3 0x76C PUSH1 0x60 DUP9 ADD PUSH3 0x604 JUMP JUMPDEST SWAP3 POP PUSH3 0x77C PUSH1 0x80 DUP9 ADD PUSH3 0x604 JUMP JUMPDEST SWAP2 POP PUSH3 0x78C PUSH1 0xA0 DUP9 ADD PUSH3 0x604 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x7B2 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x637 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH3 0x7DB PUSH1 0xA0 DUP4 ADD DUP9 PUSH3 0x798 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x7EF DUP2 DUP9 PUSH3 0x798 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x40 DUP6 ADD MSTORE SWAP5 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE POP POP SWAP3 AND PUSH1 0x80 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x82E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x637 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x84B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x47E DUP3 PUSH3 0x604 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH3 0x47E PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x798 JUMP JUMPDEST PUSH2 0x345 DUP1 PUSH3 0x87B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x181 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x192 DUP7 DUP4 DUP4 DUP8 PUSH2 0x19C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x210 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x209 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x21A DUP4 DUP4 PUSH2 0x222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x232 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x290 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2AB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212205DBEAC 0xD0 DUP2 GASPRICE JUMPI 0x5E 0xBF 0x2A 0xDC PUSH26 0xAC6DE0793615DE158053642DF6DE9170162298DF64736F6C6343 STOP ADDMOD GT STOP CALLER LOG3 CREATE 0xAD PUSH21 0xE5423AEBFD80D3EF4346578335A9A72AEAEE59FF6C 0xB3 PC 0x2B CALLDATALOAD SGT RETURNDATASIZE POP COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ",
							"sourceMap": "187:585:10:-:0;;;236:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;361:6;1060:116:5;;;;;;;;;;;;1125:44;1149:6;1157:4;1163:5;1125:23;;;:44;;:::i;:::-;-1:-1:-1;373:22:10::1;::::0;-1:-1:-1;396:17:10::1;:15;:17::i;:::-;373:40;;417:12;435:14;-1:-1:-1::0;;;;;435:27:10::1;586:4;608:6;632:8;658:5;681;476:224;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;476:224:10;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;476:224:10::1;-1:-1:-1::0;;;476:224:10::1;::::0;;435:275;::::1;::::0;476:224;435:275:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:294;;;728:7;720:42;;;::::0;-1:-1:-1;;;720:42:10;;3636:2:11;720:42:10::1;::::0;::::1;3618:21:11::0;3675:2;3655:18;;;3648:30;3714:24;3694:18;;;3687:52;3756:18;;720:42:10::1;;;;;;;;;371:398;;236:533:::0;;;;;;187:585;;5728:313:3;5834:21;5845:9;5834:10;:21::i;:::-;5870:25;;-1:-1:-1;;;;;5870:25:3;;;;;;;;5923:1;5909:4;:11;:15;:28;;;;5928:9;5909:28;5905:130;;;5953:71;5990:9;-1:-1:-1;;;;;5982:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6019:4;5953:28;;;;;:71;;:::i;:::-;;5905:130;5728:313;;;:::o;1444:138:5:-;1511:7;1545:12;:10;:12::i;:::-;-1:-1:-1;;;;;1537:36:5;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:45;;1444:138;:::o;5054:371:3:-;5119:29;5138:9;5119:18;;;;;:29;;:::i;:::-;5111:79;;;;-1:-1:-1;;;5111:79:3;;4200:2:11;5111:79:3;;;4182:21:11;4239:2;4219:18;;;4212:30;4278:34;4258:18;;;4251:62;-1:-1:-1;;;4329:18:11;;;4322:35;4374:19;;5111:79:3;3998:401:11;5111:79:3;5221:55;5248:9;-1:-1:-1;;;;;5240:33:3;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5221:18;;;;;:55;;:::i;:::-;5200:150;;;;-1:-1:-1;;;5200:150:3;;4606:2:11;5200:150:3;;;4588:21:11;4645:2;4625:18;;;4618:30;4684:34;4664:18;;;4657:62;-1:-1:-1;;;4735:18:11;;;4728:46;4791:19;;5200:150:3;4404:412:11;5200:150:3;5409:9;5360:40;-1:-1:-1;;;;;;;;;;;5387:12:3;;5360:26;;;;;:40;;:::i;:::-;:58;;-1:-1:-1;;;;;;5360:58:3;-1:-1:-1;;;;;5360:58:3;;;;;;;;;;-1:-1:-1;5054:371:3:o;6674:198:7:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:7:o;4848:124:3:-;4893:7;4919:40;-1:-1:-1;;;;;;;;;;;4946:12:3;;4919:26;;;;;:40;;:::i;:::-;:46;-1:-1:-1;;;;;4919:46:3;;4848:124;-1:-1:-1;4848:124:3:o;1412:320:7:-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;1859:190:9:-;2029:4;1859:190::o;7058:325:7:-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:7;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:7;;-1:-1:-1;7223:67:7;-1:-1:-1;7307:69:7;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;5023:2:11;8113:60:7;;;5005:21:11;5062:2;5042:18;;;5035:30;5101:31;5081:18;;;5074:59;5150:18;;8113:60:7;4821:353:11;8113:60:7;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;;:::i;14:177:11:-;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:11;552:16;;545:27;328:250::o;583:699::-;637:5;690:3;683:4;675:6;671:17;667:27;657:55;;708:1;705;698:12;657:55;731:13;;-1:-1:-1;;;;;793:10:11;;;790:36;;;806:18;;:::i;:::-;881:2;875:9;849:2;935:13;;-1:-1:-1;;931:22:11;;;955:2;927:31;923:40;911:53;;;979:18;;;999:22;;;976:46;973:72;;;1025:18;;:::i;:::-;1065:10;1061:2;1054:22;1100:2;1092:6;1085:18;1146:3;1139:4;1134:2;1126:6;1122:15;1118:26;1115:35;1112:55;;;1163:1;1160;1153:12;1112:55;1176:76;1249:2;1242:4;1234:6;1230:17;1223:4;1215:6;1211:17;1176:76;:::i;1287:905::-;1422:6;1430;1438;1446;1454;1462;1515:3;1503:9;1494:7;1490:23;1486:33;1483:53;;;1532:1;1529;1522:12;1483:53;1555:40;1585:9;1555:40;:::i;:::-;1639:2;1624:18;;1618:25;1545:50;;-1:-1:-1;;;;;;1692:14:11;;;1689:34;;;1719:1;1716;1709:12;1689:34;1742:61;1795:7;1786:6;1775:9;1771:22;1742:61;:::i;:::-;1732:71;;1849:2;1838:9;1834:18;1828:25;1812:41;;1878:2;1868:8;1865:16;1862:36;;;1894:1;1891;1884:12;1862:36;;1917:63;1972:7;1961:8;1950:9;1946:24;1917:63;:::i;:::-;1907:73;;;1999:49;2044:2;2033:9;2029:18;1999:49;:::i;:::-;1989:59;;2067:50;2112:3;2101:9;2097:19;2067:50;:::i;:::-;2057:60;;2136:50;2181:3;2170:9;2166:19;2136:50;:::i;:::-;2126:60;;1287:905;;;;;;;;:::o;2197:271::-;2239:3;2277:5;2271:12;2304:6;2299:3;2292:19;2320:76;2389:6;2382:4;2377:3;2373:14;2366:4;2359:5;2355:16;2320:76;:::i;:::-;2450:2;2429:15;-1:-1:-1;;2425:29:11;2416:39;;;;2457:4;2412:50;;2197:271;-1:-1:-1;;2197:271:11:o;2473:664::-;2754:3;2743:9;2736:22;2717:4;2781:46;2822:3;2811:9;2807:19;2799:6;2781:46;:::i;:::-;2875:9;2867:6;2863:22;2858:2;2847:9;2843:18;2836:50;2903:33;2929:6;2921;2903:33;:::i;:::-;-1:-1:-1;;;;;3010:15:11;;;3005:2;2990:18;;2983:43;3062:15;;;3057:2;3042:18;;3035:43;-1:-1:-1;;3115:15:11;;3109:3;3094:19;;;3087:44;;;;2895:41;2473:664;-1:-1:-1;;2473:664:11:o;3142:287::-;3271:3;3309:6;3303:13;3325:66;3384:6;3379:3;3372:4;3364:6;3360:17;3325:66;:::i;:::-;3407:16;;;;;3142:287;-1:-1:-1;;3142:287:11:o;3785:208::-;3855:6;3908:2;3896:9;3887:7;3883:23;3879:32;3876:52;;;3924:1;3921;3914:12;3876:52;3947:40;3977:9;3947:40;:::i;5179:220::-;5328:2;5317:9;5310:21;5291:4;5348:45;5389:2;5378:9;5374:18;5366:6;5348:45;:::i;5179:220::-;187:585:10;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_485": {
									"entryPoint": null,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_498": {
									"entryPoint": null,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_458": {
									"entryPoint": 256,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_477": {
									"entryPoint": 23,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBeacon_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_549": {
									"entryPoint": 103,
									"id": 549,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_904": {
									"entryPoint": 546,
									"id": 904,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_792": {
									"entryPoint": 41,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_821": {
									"entryPoint": 292,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_967": {
									"entryPoint": 100,
									"id": 967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_593": {
									"entryPoint": 85,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_860": {
									"entryPoint": 412,
									"id": 860,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1612:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:11"
															},
															"nodeType": "YulIf",
															"src": "105:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:11"
															},
															"nodeType": "YulIf",
															"src": "204:70:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:11",
														"type": ""
													}
												],
												"src": "14:290:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "375:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "385:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "394:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "389:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "479:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "484:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "475:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "475:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "503:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "494:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "494:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "488:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "488:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "468:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "468:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "468:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "415:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "418:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "412:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "426:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "428:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "437:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "433:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "428:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "408:3:11",
																"statements": []
															},
															"src": "404:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "537:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "542:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "533:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "551:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "526:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "526:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "353:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "358:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "363:6:11",
														"type": ""
													}
												],
												"src": "309:250:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "701:150:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "711:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "725:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "715:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "786:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "794:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:17:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "806:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "747:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "747:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "747:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "822:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "833:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "838:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "677:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "682:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "693:3:11",
														"type": ""
													}
												],
												"src": "564:287:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1030:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1047:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1040:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1040:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1070:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1120:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1131:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:11"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1136:31:11",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1109:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1200:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1177:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1007:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1021:4:11",
														"type": ""
													}
												],
												"src": "856:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:275:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1375:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1395:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1389:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1379:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1411:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1493:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1489:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1510:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1521:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1506:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1506:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1526:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1454:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:79:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:79:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1542:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1577:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1585:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1573:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1573:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1594:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1590:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1590:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1569:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1569:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1601:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1550:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1542:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1304:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:11",
														"type": ""
													}
												],
												"src": "1214:396:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205dbeacd0813a575ebf2adc79ac6de0793615de158053642df6de9170162298df64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2E9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x24C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x11F JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x181 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x192 DUP7 DUP4 DUP4 DUP8 PUSH2 0x19C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x210 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x209 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x209 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x21A DUP4 DUP4 PUSH2 0x222 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x232 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x290 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2AB DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D4 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212205DBEAC 0xD0 DUP2 GASPRICE JUMPI 0x5E 0xBF 0x2A 0xDC PUSH26 0xAC6DE0793615DE158053642DF6DE9170162298DF64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:585:10:-:0;;;;;;2898:11:4;:9;:11::i;:::-;187:585:10;;2675:11:4;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6674:198:7:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:7:o;1412:320::-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;1859:190:9:-;2029:4;1859:190::o;1444:138:5:-;1511:7;1545:12;4719:66:3;4919:46;-1:-1:-1;;;;;4919:46:3;;4848:124;1545:12:5;-1:-1:-1;;;;;1537:36:5;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:45;;1444:138;:::o;948:895:4:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7058:325:7;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:7;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;1058:2:11;8113:60:7;;;1040:21:11;1097:2;1077:18;;;1070:30;1136:31;1116:18;;;1109:59;1185:18;;8113:60:7;;;;;;;;;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;;:::i;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;309:250;394:1;404:113;418:6;415:1;412:13;404:113;;;494:11;;;488:18;475:11;;;468:39;440:2;433:10;404:113;;;-1:-1:-1;;551:1:11;533:16;;526:27;309:250::o;564:287::-;693:3;731:6;725:13;747:66;806:6;801:3;794:4;786:6;782:17;747:66;:::i;:::-;829:16;;;;;564:287;-1:-1:-1;;564:287:11:o;1214:396::-;1363:2;1352:9;1345:21;1326:4;1395:6;1389:13;1438:6;1433:2;1422:9;1418:18;1411:34;1454:79;1526:6;1521:2;1510:9;1506:18;1501:2;1493:6;1489:15;1454:79;:::i;:::-;1594:2;1573:15;-1:-1:-1;;1569:29:11;1554:45;;;;1601:2;1550:54;;1214:396;-1:-1:-1;;1214:396:11:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "167400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 236,
									"end": 769,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 236,
									"end": 769,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 361,
									"end": 367,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1155,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1163,
									"end": 1168,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 373,
									"end": 395,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 396,
									"end": 413,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 396,
									"end": 411,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 396,
									"end": 413,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 396,
									"end": 413,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 396,
									"end": 413,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 373,
									"end": 413,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 373,
									"end": 413,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 417,
									"end": 429,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 449,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 435,
									"end": 462,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 586,
									"end": 590,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 608,
									"end": 614,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 632,
									"end": 640,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 658,
									"end": 663,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 681,
									"end": 686,
									"modifierDepth": 1,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 476,
									"end": 700,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6D876B5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 476,
									"end": 700,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 435,
									"end": 710,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 476,
									"end": 700,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 435,
									"end": 710,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DELEGATECALL",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "RETURNDATACOPY",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 435,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 416,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 416,
									"end": 710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 416,
									"end": 710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 728,
									"end": 735,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 720,
									"end": 762,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 720,
									"end": 762,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3636,
									"end": 3638,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 720,
									"end": 762,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3618,
									"end": 3639,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3675,
									"end": 3677,
									"name": "PUSH",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 3655,
									"end": 3673,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3655,
									"end": 3673,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3655,
									"end": 3673,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3648,
									"end": 3678,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3714,
									"end": 3738,
									"name": "PUSH",
									"source": 11,
									"value": "496E697469616C697A6174696F6E206661696C65642E00000000000000000000"
								},
								{
									"begin": 3694,
									"end": 3712,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3694,
									"end": 3712,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3694,
									"end": 3712,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3687,
									"end": 3739,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3756,
									"end": 3774,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 3756,
									"end": 3774,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 720,
									"end": 762,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 371,
									"end": 769,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 236,
									"end": 769,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 5845,
									"end": 5854,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5834,
									"end": 5855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 3,
									"value": "1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "LOG2",
									"source": 3
								},
								{
									"begin": 5923,
									"end": 5924,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5920,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5924,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 5990,
									"end": 5999,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "PUSH",
									"source": 3,
									"value": "5C60DA1B"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5982,
									"end": 6017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6019,
									"end": 6023,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551626"
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5728,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1444,
									"end": 1582,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1444,
									"end": 1582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1511,
									"end": 1518,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 1557,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1545,
									"end": 1555,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1545,
									"end": 1557,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1557,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1545,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1537,
									"end": 1573,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1573,
									"name": "PUSH",
									"source": 5,
									"value": "5C60DA1B"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "GAS",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "STATICCALL",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "RETURNDATACOPY",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "RETURNDATASIZE",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1537,
									"end": 1575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1537,
									"end": 1575,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1530,
									"end": 1575,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1530,
									"end": 1575,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1444,
									"end": 1582,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1444,
									"end": 1582,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 5138,
									"end": 5147,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551627"
								},
								{
									"begin": 5119,
									"end": 5137,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 5119,
									"end": 5148,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4200,
									"end": 4202,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4182,
									"end": 4203,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4239,
									"end": 4241,
									"name": "PUSH",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 4219,
									"end": 4237,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4219,
									"end": 4237,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4219,
									"end": 4237,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4278,
									"end": 4312,
									"name": "PUSH",
									"source": 11,
									"value": "455243313936373A206E657720626561636F6E206973206E6F74206120636F6E"
								},
								{
									"begin": 4258,
									"end": 4276,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4258,
									"end": 4276,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4258,
									"end": 4276,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4251,
									"end": 4313,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4329,
									"end": 4347,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4329,
									"end": 4347,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4329,
									"end": 4347,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4322,
									"end": 4357,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4374,
									"end": 4393,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 4374,
									"end": 4393,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3998,
									"end": 4399,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 5248,
									"end": 5257,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "PUSH",
									"source": 3,
									"value": "5C60DA1B"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "STATICCALL",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 5240,
									"end": 5275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551627"
								},
								{
									"begin": 5221,
									"end": 5239,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4606,
									"end": 4608,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4588,
									"end": 4609,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4645,
									"end": 4647,
									"name": "PUSH",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4625,
									"end": 4643,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4625,
									"end": 4643,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4625,
									"end": 4643,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4618,
									"end": 4648,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4684,
									"end": 4718,
									"name": "PUSH",
									"source": 11,
									"value": "455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069"
								},
								{
									"begin": 4664,
									"end": 4682,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4664,
									"end": 4682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4664,
									"end": 4682,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4657,
									"end": 4719,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1CC81B9BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4735,
									"end": 4753,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4735,
									"end": 4753,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4735,
									"end": 4753,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 4774,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4791,
									"end": 4810,
									"name": "PUSH",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 4791,
									"end": 4810,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4404,
									"end": 4816,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5409,
									"end": 5418,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "53"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "48BF63A2FC0CEDDE9EFFB3F5B74F519E781A8DA221ED8E3253206F2B0A0D2F1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5387,
									"end": 5399,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5387,
									"end": 5399,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551628"
								},
								{
									"begin": 5360,
									"end": 5386,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "tag",
									"source": 3,
									"value": "53"
								},
								{
									"begin": 5360,
									"end": 5400,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5054,
									"end": 5425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6757,
									"end": 6769,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6809,
									"end": 6815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH data",
									"source": 7,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 6788,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6865,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6674,
									"end": 6872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4972,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 4848,
									"end": 4972,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4893,
									"end": 4900,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4919,
									"end": 4959,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "48BF63A2FC0CEDDE9EFFB3F5B74F519E781A8DA221ED8E3253206F2B0A0D2F1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 4946,
									"end": 4958,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 4958,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4945,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 4919,
									"end": 4945,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4919,
									"end": 4945,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4945,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551628"
								},
								{
									"begin": 4919,
									"end": 4945,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4959,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4919,
									"end": 4959,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4959,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4959,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 4919,
									"end": 4959,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4965,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4919,
									"end": 4965,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4919,
									"end": 4965,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 4848,
									"end": 4972,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4848,
									"end": 4972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1732,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1859,
									"end": 2049,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1859,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2029,
									"end": 2033,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1859,
									"end": 2049,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7199,
									"end": 7211,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7224,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7238,
									"end": 7261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7265,
									"end": 7284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7289,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 7265,
									"end": 7290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DELEGATECALL",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7334,
									"end": 7340,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7363,
									"end": 7375,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7307,
									"end": 7333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7307,
									"end": 7376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7300,
									"end": 7376,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7058,
									"end": 7383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7863,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7879,
									"end": 7886,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7923,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7906,
									"end": 7928,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5023,
									"end": 5025,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5005,
									"end": 5026,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5062,
									"end": 5064,
									"name": "PUSH",
									"source": 11,
									"value": "1D"
								},
								{
									"begin": 5042,
									"end": 5060,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5042,
									"end": 5060,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5042,
									"end": 5060,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5035,
									"end": 5065,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5101,
									"end": 5132,
									"name": "PUSH",
									"source": 11,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 5081,
									"end": 5099,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 5081,
									"end": 5099,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5081,
									"end": 5099,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5074,
									"end": 5133,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5150,
									"end": 5168,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5150,
									"end": 5168,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4821,
									"end": 5174,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8208,
									"end": 8218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8257,
									"end": 8267,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8269,
									"end": 8281,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8249,
									"end": 8282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 9001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9208,
									"end": 9218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9202,
									"end": 9219,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9279,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9251,
									"end": 9261,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9247,
									"end": 9249,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9243,
									"end": 9262,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9236,
									"end": 9280,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9331,
									"end": 9343,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 9324,
									"end": 9344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 328,
									"end": 578,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 328,
									"end": 578,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 413,
									"end": 414,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 434,
									"end": 435,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 431,
									"end": 444,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 513,
									"end": 524,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 507,
									"end": 525,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 494,
									"end": 505,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 487,
									"end": 526,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 459,
									"end": 461,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 462,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 568,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 552,
									"end": 568,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 545,
									"end": 572,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 328,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 583,
									"end": 1282,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 583,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 637,
									"end": 642,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 690,
									"end": 693,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 683,
									"end": 687,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 675,
									"end": 681,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 671,
									"end": 688,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 657,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 657,
									"end": 712,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 708,
									"end": 709,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 706,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 698,
									"end": 710,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 657,
									"end": 712,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 657,
									"end": 712,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 731,
									"end": 744,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 731,
									"end": 744,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 793,
									"end": 803,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 793,
									"end": 803,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 793,
									"end": 803,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 790,
									"end": 826,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 790,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 790,
									"end": 826,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 806,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 806,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 806,
									"end": 824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 806,
									"end": 824,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 806,
									"end": 824,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 881,
									"end": 883,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 875,
									"end": 884,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 849,
									"end": 851,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 935,
									"end": 948,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 935,
									"end": 948,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 931,
									"end": 953,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 931,
									"end": 953,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 955,
									"end": 957,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 927,
									"end": 958,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 923,
									"end": 963,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 911,
									"end": 964,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 911,
									"end": 964,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 911,
									"end": 964,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 979,
									"end": 997,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 979,
									"end": 997,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 979,
									"end": 997,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 999,
									"end": 1021,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1022,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 973,
									"end": 1045,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 973,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 973,
									"end": 1045,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 1025,
									"end": 1043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 1025,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1065,
									"end": 1075,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1063,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1102,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1085,
									"end": 1103,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1146,
									"end": 1149,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1139,
									"end": 1143,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1126,
									"end": 1132,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1137,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1118,
									"end": 1144,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1150,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1163,
									"end": 1164,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1160,
									"end": 1161,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1153,
									"end": 1165,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 1112,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1176,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1249,
									"end": 1251,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1234,
									"end": 1240,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1230,
									"end": 1247,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1223,
									"end": 1227,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1215,
									"end": 1221,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1211,
									"end": 1228,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1176,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 1176,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1422,
									"end": 1428,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1430,
									"end": 1436,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1438,
									"end": 1444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1452,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1454,
									"end": 1460,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1468,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1515,
									"end": 1518,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 1503,
									"end": 1512,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1494,
									"end": 1501,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1513,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1519,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1483,
									"end": 1536,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1483,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 1483,
									"end": 1536,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1532,
									"end": 1533,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1522,
									"end": 1534,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1483,
									"end": 1536,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 1483,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1595,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 1585,
									"end": 1594,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1595,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 1555,
									"end": 1595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1555,
									"end": 1595,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 1555,
									"end": 1595,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1639,
									"end": 1641,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1624,
									"end": 1642,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1624,
									"end": 1642,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1618,
									"end": 1643,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1545,
									"end": 1595,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1545,
									"end": 1595,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1692,
									"end": 1706,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1692,
									"end": 1706,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1692,
									"end": 1706,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1723,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1723,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 1689,
									"end": 1723,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1719,
									"end": 1720,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1721,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1723,
									"name": "tag",
									"source": 11,
									"value": "108"
								},
								{
									"begin": 1689,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 1795,
									"end": 1802,
									"name": "DUP11",
									"source": 11
								},
								{
									"begin": 1786,
									"end": 1792,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1775,
									"end": 1784,
									"name": "DUP12",
									"source": 11
								},
								{
									"begin": 1771,
									"end": 1793,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 1742,
									"end": 1803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 1742,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1803,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1803,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1849,
									"end": 1851,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1838,
									"end": 1847,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1852,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1853,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1812,
									"end": 1853,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1812,
									"end": 1853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1878,
									"end": 1880,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1868,
									"end": 1876,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1881,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1898,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1898,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 1862,
									"end": 1898,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1894,
									"end": 1895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1891,
									"end": 1892,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1896,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1898,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 1862,
									"end": 1898,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1898,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1980,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 1972,
									"end": 1979,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 1961,
									"end": 1969,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1950,
									"end": 1959,
									"name": "DUP11",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 1970,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1980,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 1917,
									"end": 1980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1980,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 1917,
									"end": 1980,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1907,
									"end": 1980,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1907,
									"end": 1980,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1907,
									"end": 1980,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1999,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 2044,
									"end": 2046,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2033,
									"end": 2042,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1999,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 1999,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1999,
									"end": 2048,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 1999,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1989,
									"end": 2048,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1989,
									"end": 2048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2067,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 2112,
									"end": 2115,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2110,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2116,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2067,
									"end": 2117,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2067,
									"end": 2117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2067,
									"end": 2117,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 2067,
									"end": 2117,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2057,
									"end": 2117,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2057,
									"end": 2117,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2136,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 2181,
									"end": 2184,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 2170,
									"end": 2179,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2185,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2136,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 2136,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2136,
									"end": 2186,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 2136,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2126,
									"end": 2186,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2126,
									"end": 2186,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 2192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2197,
									"end": 2468,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2197,
									"end": 2468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2239,
									"end": 2242,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2282,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2271,
									"end": 2283,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2304,
									"end": 2310,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2299,
									"end": 2302,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2311,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 2389,
									"end": 2395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2382,
									"end": 2386,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2377,
									"end": 2380,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2373,
									"end": 2387,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2366,
									"end": 2370,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2359,
									"end": 2364,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2355,
									"end": 2371,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 2320,
									"end": 2396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2450,
									"end": 2452,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2429,
									"end": 2444,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 2454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2416,
									"end": 2455,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2416,
									"end": 2455,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2416,
									"end": 2455,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2416,
									"end": 2455,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2457,
									"end": 2461,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2412,
									"end": 2462,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2412,
									"end": 2462,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2197,
									"end": 2468,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2197,
									"end": 2468,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2473,
									"end": 3137,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2473,
									"end": 3137,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2754,
									"end": 2757,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 2743,
									"end": 2752,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2736,
									"end": 2758,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2717,
									"end": 2721,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2781,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 2822,
									"end": 2825,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 2811,
									"end": 2820,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2807,
									"end": 2826,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2799,
									"end": 2805,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2781,
									"end": 2827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2827,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 2781,
									"end": 2827,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2875,
									"end": 2884,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2867,
									"end": 2873,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2863,
									"end": 2885,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2858,
									"end": 2860,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2856,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2843,
									"end": 2861,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2836,
									"end": 2886,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2903,
									"end": 2936,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 2929,
									"end": 2935,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2921,
									"end": 2927,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 2903,
									"end": 2936,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 2903,
									"end": 2936,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2903,
									"end": 2936,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 2903,
									"end": 2936,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3010,
									"end": 3025,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 3010,
									"end": 3025,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3010,
									"end": 3025,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3005,
									"end": 3007,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2990,
									"end": 3008,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2990,
									"end": 3008,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2983,
									"end": 3026,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3062,
									"end": 3077,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3062,
									"end": 3077,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3062,
									"end": 3077,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3057,
									"end": 3059,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 3042,
									"end": 3060,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3042,
									"end": 3060,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3035,
									"end": 3078,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3115,
									"end": 3130,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3115,
									"end": 3130,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3109,
									"end": 3112,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3094,
									"end": 3113,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3094,
									"end": 3113,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3094,
									"end": 3113,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3131,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3131,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3131,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3087,
									"end": 3131,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2895,
									"end": 2936,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2473,
									"end": 3137,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2473,
									"end": 3137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3142,
									"end": 3429,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3142,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3309,
									"end": 3315,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 3384,
									"end": 3390,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3379,
									"end": 3382,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3372,
									"end": 3376,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3364,
									"end": 3370,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3360,
									"end": 3377,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3391,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 3325,
									"end": 3391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3325,
									"end": 3391,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 3325,
									"end": 3391,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3423,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3423,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3423,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3423,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3423,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3142,
									"end": 3429,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3142,
									"end": 3429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3785,
									"end": 3993,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 3785,
									"end": 3993,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3910,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 3905,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3887,
									"end": 3894,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3883,
									"end": 3906,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3879,
									"end": 3911,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 3876,
									"end": 3928,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3876,
									"end": 3928,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 3876,
									"end": 3928,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3924,
									"end": 3925,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3921,
									"end": 3922,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3914,
									"end": 3926,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3876,
									"end": 3928,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 3876,
									"end": 3928,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3947,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 3977,
									"end": 3986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3947,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 3947,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5399,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 5179,
									"end": 5399,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5328,
									"end": 5330,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5317,
									"end": 5326,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5310,
									"end": 5331,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5291,
									"end": 5295,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5348,
									"end": 5393,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 5389,
									"end": 5391,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5378,
									"end": 5387,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5348,
									"end": 5393,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 5348,
									"end": 5393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5179,
									"end": 5399,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 5179,
									"end": 5399,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 187,
									"end": 772,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 772,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205dbeacd0813a575ebf2adc79ac6de0793615de158053642df6de9170162298df64736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 772,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 187,
											"end": 772,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 187,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 772,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 772,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 187,
											"end": 772,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6769,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH data",
											"source": 7,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6788,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6865,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 2049,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1859,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1859,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4719,
											"end": 4785,
											"name": "PUSH",
											"source": 3,
											"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4848,
											"end": 4972,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "PUSH",
											"source": 5,
											"value": "5C60DA1B"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1537,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 7265,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DELEGATECALL",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7349,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7307,
											"end": 7376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7376,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7058,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1097,
											"end": 1099,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1167,
											"name": "PUSH",
											"source": 11,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1168,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 304,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 179,
											"end": 195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 224,
											"end": 255,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 214,
											"end": 256,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 256,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 204,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 270,
											"end": 271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 260,
											"end": 272,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 309,
											"end": 559,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 309,
											"end": 559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 394,
											"end": 395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 418,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 412,
											"end": 425,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 494,
											"end": 505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 494,
											"end": 505,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 494,
											"end": 505,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 488,
											"end": 506,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 475,
											"end": 486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 475,
											"end": 486,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 475,
											"end": 486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 468,
											"end": 507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 404,
											"end": 517,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 404,
											"end": 517,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 533,
											"end": 549,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 526,
											"end": 553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 309,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 851,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 564,
											"end": 851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 693,
											"end": 696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 725,
											"end": 738,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 747,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 794,
											"end": 798,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 782,
											"end": 799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 747,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 747,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 747,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 747,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 829,
											"end": 845,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 564,
											"end": 851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 564,
											"end": 851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1610,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1214,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1345,
											"end": 1366,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1326,
											"end": 1330,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1433,
											"end": 1435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1506,
											"end": 1524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 1454,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1454,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1573,
											"end": 1588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1569,
											"end": 1598,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1214,
											"end": 1610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1214,
											"end": 1610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"48BF63A2FC0CEDDE9EFFB3F5B74F519E781A8DA221ED8E3253206F2B0A0D2F1F": "a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50",
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/Context.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"Gemstone/Proxy/BeaconProxyNFTdynamic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":\"nftCollectionBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"Gemstone/Proxy/BeaconProxyNFTdynamic.sol\":{\"keccak256\":\"0xbd51c8d3f1df69fd8c2b65eeb51f5926165de34198aa29481a1c4191e6878ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21432a1c9024949fa5dea73fac05717c0cf0938376e9184d23721f7b4eebf901\",\"dweb:/ipfs/QmNbVaiDVudtCo21hGYb3JoNdqhq7g4i4Ww7BvYVPk3Z5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.9.6/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							935
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 936,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 935,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								935
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:1",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC1967",
							"nameLocation": "276:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "291:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 120,
									"name": "Upgraded",
									"nameLocation": "370:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "395:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "379:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:32:1"
									},
									"src": "364:47:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 127,
									"name": "AdminChanged",
									"nameLocation": "495:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "516:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "508:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "539:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "531:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:41:1"
									},
									"src": "489:60:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "555:59:1",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 132,
									"name": "BeaconUpgraded",
									"nameLocation": "625:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "656:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "640:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:24:1"
									},
									"src": "619:45:1"
								}
							],
							"scope": 134,
							"src": "266:400:1",
							"usedErrors": []
						}
					],
					"src": "107:560:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							143
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 136,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:2",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "352:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "376:438:2",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "828:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "867:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:2"
									},
									"scope": 143,
									"src": "819:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 144,
							"src": "342:536:2",
							"usedErrors": []
						}
					],
					"src": "113:766:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							905
						],
						"ERC1967Upgrade": [
							447
						],
						"IBeacon": [
							575
						],
						"IERC1822Proxiable": [
							143
						],
						"IERC1967": [
							133
						],
						"StorageSlot": [
							1045
						]
					},
					"id": 448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 576,
							"src": "141:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 134,
							"src": "173:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 144,
							"src": "213:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 906,
							"src": "259:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 448,
							"sourceUnit": 1046,
							"src": "293:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "IERC1967",
										"nameLocations": [
											"553:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 133,
										"src": "553:8:3"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "553:8:3"
								}
							],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "332:184:3",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 447,
							"linearizedBaseContracts": [
								447,
								133
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "535:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "672:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "647:108:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 154,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "689:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "762:214:3",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 160,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1007:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "981:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 158,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1030:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "1237:78:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 168,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "1281:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 166,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "1254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1266:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "1254:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$941_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1254:48:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1303:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 940,
													"src": "1254:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 165,
												"id": 171,
												"nodeType": "Return",
												"src": "1247:61:3"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1103:67:3",
										"text": " @dev Returns the current implementation address."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1184:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:2:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1228:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:9:3"
									},
									"scope": 447,
									"src": "1175:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1469:196:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 182,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 176,
																	"src": "1506:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 180,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1487:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$905_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1495:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 593,
																"src": "1487:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1487:37:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1479:95:3"
											},
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 190,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "1611:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 187,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "1584:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1596:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "1584:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$941_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1584:48:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1633:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 940,
														"src": "1584:54:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 193,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1641:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1584:74:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1584:74:3"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1321:80:3",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1415:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1442:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1434:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:27:3"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:3"
									},
									"scope": 447,
									"src": "1406:259:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1827:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1856:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1837:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1837:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 208,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "1898:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1889:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "EmitStatement",
												"src": "1884:32:3"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1671:95:3",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1780:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1799:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1791:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:27:3"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:3"
									},
									"scope": 447,
									"src": "1771:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "2155:167:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "2176:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 222,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2165:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "2165:29:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 226,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2208:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2208:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2208:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 230,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "2227:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2208:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 240,
												"nodeType": "IfStatement",
												"src": "2204:112:3",
												"trueBody": {
													"id": 239,
													"nodeType": "Block",
													"src": "2238:78:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 235,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2281:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 236,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "2300:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 232,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "2252:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$905_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2260:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "2252:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2252:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "2252:53:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1929:123:3",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2066:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2092:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2084:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2111:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2111:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2135:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "2130:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2130:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:62:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:3"
									},
									"scope": 447,
									"src": "2057:265:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "2596:820:3",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 254,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2937:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 252,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "2910:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2922:14:3",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 978,
															"src": "2910:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$944_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2910:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$944_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2953:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 943,
													"src": "2910:48:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "3028:382:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 277,
																		"nodeType": "Block",
																		"src": "3122:115:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 273,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 271,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 268,
																								"src": "3148:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 272,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 160,
																								"src": "3156:20:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3148:28:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 274,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3178:43:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 270,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3140:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 275,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3140:82:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 276,
																				"nodeType": "ExpressionStatement",
																				"src": "3140:82:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 278,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 269,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 268,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3116:4:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 278,
																				"src": "3108:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 267,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3108:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3107:14:3"
																	},
																	"src": "3099:138:3"
																},
																{
																	"block": {
																		"id": 283,
																		"nodeType": "Block",
																		"src": "3244:89:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3269:48:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 279,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3262:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3262:56:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 282,
																				"nodeType": "ExpressionStatement",
																				"src": "3262:56:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 284,
																	"nodeType": "TryCatchClause",
																	"src": "3238:95:3"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 263,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 245,
																				"src": "3064:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 262,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "3046:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$143_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3046:36:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$143",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3083:13:3",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 142,
																	"src": "3046:50:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3046:52:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 285,
															"nodeType": "TryStatement",
															"src": "3042:291:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 287,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "3364:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 288,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3383:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 289,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "3389:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 286,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3346:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3346:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "3346:53:3"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "2906:504:3",
												"trueBody": {
													"id": 261,
													"nodeType": "Block",
													"src": "2960:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 258,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "2993:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 257,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "2974:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 260,
															"nodeType": "ExpressionStatement",
															"src": "2974:37:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "2328:161:3",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2503:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2533:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2525:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2552:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2576:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "2571:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:62:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:3"
									},
									"scope": 447,
									"src": "2494:922:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "3422:189:3",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 299,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3642:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "3616:106:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 297,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3616:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 298,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3656:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "3837:69:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 307,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "3881:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 305,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "3854:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3866:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "3854:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$941_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3854:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3894:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 940,
													"src": "3854:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 304,
												"id": 310,
												"nodeType": "Return",
												"src": "3847:52:3"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3729:50:3",
										"text": " @dev Returns the current admin."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "3793:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3802:2:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3828:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:9:3"
									},
									"scope": 447,
									"src": "3784:122:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "4033:156:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "4051:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4071:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4063:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 320,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4063:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4063:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4051:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4043:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "4043:73:3"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 331,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "4153:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 328,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "4126:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4138:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "4126:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$941_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4126:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4166:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 940,
														"src": "4126:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 334,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "4174:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4126:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "4126:56:3"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "3912:71:3",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3997:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4015:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4007:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:18:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4033:0:3"
									},
									"scope": 447,
									"src": "3988:201:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "4349:86:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 345,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "4377:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4377:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4390:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 344,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "4364:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4364:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "EmitStatement",
												"src": "4359:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4419:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "4409:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "4409:19:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "4195:100:3",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4309:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4330:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4322:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:18:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4349:0:3"
									},
									"scope": 447,
									"src": "4300:135:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "4441:232:3",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 359,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "4704:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 447,
									"src": "4678:107:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 357,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4678:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4719:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "4902:70:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 367,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4946:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 365,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "4919:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4931:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 967,
															"src": "4919:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$941_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:40:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4960:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 940,
													"src": "4919:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 370,
												"nodeType": "Return",
												"src": "4912:53:3"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "4792:51:3",
										"text": " @dev Returns the current beacon."
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "4857:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4867:2:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "4893:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:9:3"
									},
									"scope": 447,
									"src": "4848:124:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "5101:324:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 381,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "5138:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 379,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "5119:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$905_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5127:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 593,
																"src": "5119:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5119:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5150:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5111:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "5111:79:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 390,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 375,
																					"src": "5248:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 389,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 575,
																				"src": "5240:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$575_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5240:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$575",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5259:14:3",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 574,
																		"src": "5240:33:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5240:35:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 387,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "5221:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$905_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5229:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 593,
																"src": "5221:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:55:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5200:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:150:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "5200:150:3"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 401,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "5387:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 398,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "5360:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1045_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5372:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "5360:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$941_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5360:40:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5401:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 940,
														"src": "5360:46:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 404,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "5409:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5360:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "5360:58:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "4978:71:3",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5063:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5082:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "5074:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:19:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5101:0:3"
									},
									"scope": 447,
									"src": "5054:371:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "5824:217:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 419,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5845:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 418,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "5834:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "5834:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 423,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5885:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "5870:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "EmitStatement",
												"src": "5865:30:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 426,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5909:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5914:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5909:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5923:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5909:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 430,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "5928:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5909:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "5905:130:3",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "5939:96:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 436,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 411,
																						"src": "5990:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 435,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 575,
																					"src": "5982:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$575_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5982:18:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$575",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6001:14:3",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 574,
																			"src": "5982:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5982:35:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 440,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "6019:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 432,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 905,
																		"src": "5953:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$905_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5961:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 792,
																	"src": "5953:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5953:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "5953:71:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "5431:292:3",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "5737:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5769:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5761:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5761:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5793:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5780:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "5804:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5799:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5799:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5760:54:3"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5824:0:3"
									},
									"scope": 447,
									"src": "5728:313:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 448,
							"src": "517:5526:3",
							"usedErrors": []
						}
					],
					"src": "116:5928:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 449,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 450,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:4",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Proxy",
							"nameLocation": "741:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "1008:835:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1027:810:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:4"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:60:4"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:4"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:59:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:4"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1681:66:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1768:59:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:4"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1760:67:4",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1614:6:4"
															},
															"nodeType": "YulSwitch",
															"src": "1607:220:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 453,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:4",
														"valueSize": 1
													}
												],
												"id": 456,
												"nodeType": "InlineAssembly",
												"src": "1018:819:4"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:4",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "967:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:4"
									},
									"scope": 499,
									"src": "948:895:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:4",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2085:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:4"
									},
									"scope": 499,
									"src": "2027:67:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2360:72:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2370:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 472,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2407:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 471,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2397:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:4"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:4",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:4"
									},
									"scope": 499,
									"src": "2322:110:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2665:28:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 481,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2675:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:4"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:4",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 485,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:4"
									},
									"scope": 499,
									"src": "2629:64:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2888:28:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2898:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:4",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 493,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:4"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:4"
									},
									"scope": 499,
									"src": "2853:63:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "3242:2:4",
										"statements": []
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:4",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:4"
									},
									"scope": 499,
									"src": "3198:46:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "723:2523:4",
							"usedErrors": []
						}
					],
					"src": "99:3148:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
					"exportedSymbols": {
						"Address": [
							905
						],
						"BeaconProxy": [
							565
						],
						"ERC1967Upgrade": [
							447
						],
						"IBeacon": [
							575
						],
						"IERC1822Proxiable": [
							143
						],
						"IERC1967": [
							133
						],
						"Proxy": [
							499
						],
						"StorageSlot": [
							1045
						]
					},
					"id": 566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 566,
							"sourceUnit": 576,
							"src": "137:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 503,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 566,
							"sourceUnit": 500,
							"src": "161:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
							"file": "../ERC1967/ERC1967Upgrade.sol",
							"id": 504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 566,
							"sourceUnit": 448,
							"src": "184:39:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 506,
										"name": "Proxy",
										"nameLocations": [
											"604:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "604:5:5"
									},
									"id": 507,
									"nodeType": "InheritanceSpecifier",
									"src": "604:5:5"
								},
								{
									"baseName": {
										"id": 508,
										"name": "ERC1967Upgrade",
										"nameLocations": [
											"611:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 447,
										"src": "611:14:5"
									},
									"id": 509,
									"nodeType": "InheritanceSpecifier",
									"src": "611:14:5"
								}
							],
							"canonicalName": "BeaconProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 505,
								"nodeType": "StructuredDocumentation",
								"src": "225:354:5",
								"text": " @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 565,
							"linearizedBaseContracts": [
								565,
								447,
								133,
								499
							],
							"name": "BeaconProxy",
							"nameLocation": "589:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "1115:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "beacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "1149:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "1157:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1163:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 517,
														"name": "_upgradeBeaconToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "1125:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1125:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "1125:44:5"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "632:423:5",
										"text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
									},
									"id": 524,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1080:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1072:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1101:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1088:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1088:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:35:5"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:0:5"
									},
									"scope": 565,
									"src": "1060:116:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1305:36:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 530,
														"name": "_getBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1322:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "1315:19:5"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1182:59:5",
										"text": " @dev Returns the current beacon address."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beacon",
									"nameLocation": "1255:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:2:5"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "1296:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:9:5"
									},
									"scope": 565,
									"src": "1246:95:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										464
									],
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "1520:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 542,
																		"name": "_getBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1545:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1545:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 541,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "1537:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$575_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1537:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$575",
																"typeString": "contract IBeacon"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1559:14:5",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 574,
														"src": "1537:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1537:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 540,
												"id": 547,
												"nodeType": "Return",
												"src": "1530:45:5"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1347:92:5",
										"text": " @dev Returns the current implementation address of the associated beacon."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1453:15:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1493:8:5"
									},
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:2:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 565,
									"src": "1444:138:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "2032:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "beacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2066:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2074:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2080:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 557,
														"name": "_upgradeBeaconToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2042:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "2042:44:5"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "1588:367:5",
										"text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "1969:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1988:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1980:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2009:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1996:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1996:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:35:5"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:5"
									},
									"scope": 565,
									"src": "1960:133:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 566,
							"src": "580:1515:5",
							"usedErrors": []
						}
					],
					"src": "112:1984:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							575
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 568,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:6",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 575,
							"linearizedBaseContracts": [
								575
							],
							"name": "IBeacon",
							"nameLocation": "208:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "222:162:6",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "398:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:6"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "438:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:9:6"
									},
									"scope": 575,
									"src": "389:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 576,
							"src": "198:251:6",
							"usedErrors": []
						}
					],
					"src": "93:357:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.9.6/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							905
						]
					},
					"id": 906,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 578,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 905,
							"linearizedBaseContracts": [
								905
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "1478:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "1702:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 585,
												"id": 591,
												"nodeType": "Return",
												"src": "1695:30:7"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1432:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:7"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1472:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:7"
									},
									"scope": 905,
									"src": "1412:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "2718:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 604,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		],
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 602,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 607,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "2761:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:7"
											},
											{
												"assignments": [
													613,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 626,
														"src": "2813:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 612,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 614,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "2831:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "2853:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:7"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2666:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2693:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:7"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:7"
									},
									"scope": 905,
									"src": "2647:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "3790:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3829:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "3837:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 637,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															685,
															729
														],
														"referencedDeclaration": 729,
														"src": "3807:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 643,
												"nodeType": "Return",
												"src": "3800:79:7"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3723:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3739:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:7"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3776:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:7"
									},
									"scope": 905,
									"src": "3701:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4255:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4294:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4302:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 661,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "4311:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 657,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															685,
															729
														],
														"referencedDeclaration": 729,
														"src": "4272:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 656,
												"id": 663,
												"nodeType": "Return",
												"src": "4265:59:7"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4139:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4163:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4190:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:7"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4241:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:7"
									},
									"scope": 905,
									"src": "4108:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "4806:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4845:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4853:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 680,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4859:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 677,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															685,
															729
														],
														"referencedDeclaration": 729,
														"src": "4823:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 676,
												"id": 683,
												"nodeType": "Return",
												"src": "4816:94:7"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4724:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4740:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4759:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4792:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:7"
									},
									"scope": 905,
									"src": "4693:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "5344:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 702,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		],
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 700,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 705,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "5387:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:7"
											},
											{
												"assignments": [
													711,
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 711,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 728,
														"src": "5446:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 710,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 728,
														"src": "5460:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 712,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [
														{
															"id": 718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "5513:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 714,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "5487:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 716,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "5506:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5562:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5570:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 724,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "5579:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 725,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5591:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 721,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "5535:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 698,
												"id": 727,
												"nodeType": "Return",
												"src": "5528:76:7"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "5205:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "5229:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "5256:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "5279:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:7"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "5330:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:7"
									},
									"scope": 905,
									"src": "5165:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5888:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5924:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5932:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 739,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															746,
															775
														],
														"referencedDeclaration": 775,
														"src": "5905:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 738,
												"id": 744,
												"nodeType": "Return",
												"src": "5898:80:7"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "5816:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "5832:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:7"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "5874:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:7"
									},
									"scope": 905,
									"src": "5788:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "6327:168:7",
										"statements": [
											{
												"assignments": [
													759,
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "6338:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 774,
														"src": "6352:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 760,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 764,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "6397:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 762,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "6379:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "6446:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "6454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 770,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "6463:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 771,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "6475:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 767,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "6419:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 757,
												"id": 773,
												"nodeType": "Return",
												"src": "6412:76:7"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6206:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6230:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6257:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 752,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:7"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "6313:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:7"
									},
									"scope": 905,
									"src": "6169:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "6771:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "6809:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "6817:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 785,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															792,
															821
														],
														"referencedDeclaration": 821,
														"src": "6788:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 784,
												"id": 790,
												"nodeType": "Return",
												"src": "6781:84:7"
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6720:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:7"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "6757:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:7"
									},
									"scope": 905,
									"src": "6674:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "7213:170:7",
										"statements": [
											{
												"assignments": [
													805,
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "7224:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 804,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "7238:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 806,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"id": 810,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "7285:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 808,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "7265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "7334:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "7342:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 816,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "7351:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 817,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "7363:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 813,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "7307:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 803,
												"id": 819,
												"nodeType": "Return",
												"src": "7300:76:7"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7097:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7121:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7148:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:7"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7199:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:7"
									},
									"scope": 905,
									"src": "7058:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "7865:434:7",
										"statements": [
											{
												"condition": {
													"id": 835,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 826,
													"src": "7879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "8235:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 853,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "8257:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 854,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "8269:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 852,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "8249:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 856,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:7"
														}
													]
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "7875:418:7",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "7888:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 836,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "7906:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 848,
															"nodeType": "IfStatement",
															"src": "7902:286:7",
															"trueBody": {
																"id": 847,
																"nodeType": "Block",
																"src": "7930:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 842,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 824,
																							"src": "8132:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 841,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 593,
																						"src": "8121:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 844,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 840,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 846,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 849,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "8208:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 834,
															"id": 850,
															"nodeType": "Return",
															"src": "8201:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7716:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7740:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7762:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7795:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:7"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7851:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:7"
									},
									"scope": 905,
									"src": "7671:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "8680:135:7",
										"statements": [
											{
												"condition": {
													"id": 872,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 863,
													"src": "8694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "8751:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 877,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "8773:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 878,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "8785:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 876,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "8765:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:7"
														}
													]
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "8690:119:7",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "8703:42:7",
													"statements": [
														{
															"expression": {
																"id": 873,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "8724:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 871,
															"id": 874,
															"nodeType": "Return",
															"src": "8717:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "8555:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "8577:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "8610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:7"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "8666:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:7"
									},
									"scope": 905,
									"src": "8520:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "8904:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 891,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "8980:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 901,
													"nodeType": "Block",
													"src": "9310:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 898,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "9331:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 897,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 900,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:7"
														}
													]
												},
												"id": 902,
												"nodeType": "IfStatement",
												"src": "8976:379:7",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "9003:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 886,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 886,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:7",
																	"valueSize": 1
																}
															],
															"id": 895,
															"nodeType": "InlineAssembly",
															"src": "9152:142:7"
														}
													]
												}
											}
										]
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "8838:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 885,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "8863:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:7"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:7"
									},
									"scope": 905,
									"src": "8821:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 906,
							"src": "194:9169:7",
							"usedErrors": []
						}
					],
					"src": "101:9263:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@4.9.6/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							935
						]
					},
					"id": 936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 907,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 908,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 935,
							"linearizedBaseContracts": [
								935
							],
							"name": "Context",
							"nameLocation": "641:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "717:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 913,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 912,
												"id": 915,
												"nodeType": "Return",
												"src": "727:17:8"
											}
										]
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:8"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "708:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:8"
									},
									"scope": 935,
									"src": "655:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "824:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 922,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 921,
												"id": 924,
												"nodeType": "Return",
												"src": "834:15:8"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:8"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "808:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:8"
									},
									"scope": 935,
									"src": "757:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "934:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 930,
												"id": 932,
												"nodeType": "Return",
												"src": "944:8:8"
											}
										]
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:8"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "925:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:8"
									},
									"scope": 935,
									"src": "862:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 936,
							"src": "623:338:8",
							"usedErrors": []
						}
					],
					"src": "101:861:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1045
						]
					},
					"id": 1046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 1045,
							"linearizedBaseContracts": [
								1045
							],
							"name": "StorageSlot",
							"nameLocation": "1428:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 941,
									"members": [
										{
											"constant": false,
											"id": 940,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1483:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 941,
											"src": "1475:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 939,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1475:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1453:11:9",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "1446:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 944,
									"members": [
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1535:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 944,
											"src": "1530:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 942,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1508:11:9",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "1501:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "1582:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 945,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1560:11:9",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "1553:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 950,
									"members": [
										{
											"constant": false,
											"id": 949,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1645:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 950,
											"src": "1637:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 948,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1615:11:9",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "1608:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 953,
									"members": [
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1698:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 953,
											"src": "1691:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 951,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1691:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1670:10:9",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "1663:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 956,
									"members": [
										{
											"constant": false,
											"id": 955,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1749:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 956,
											"src": "1743:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 954,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1743:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1723:9:9",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "1716:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "1943:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2005:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2029:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 963,
														"isOffset": false,
														"isSlot": true,
														"src": "2019:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "2029:4:9",
														"valueSize": 1
													}
												],
												"id": 965,
												"nodeType": "InlineAssembly",
												"src": "1996:47:9"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1767:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1868:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1891:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1883:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 958,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:14:9"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1940:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "1920:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 961,
														"name": "AddressSlot",
														"nameLocations": [
															"1920:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 941,
														"src": "1920:11:9"
													},
													"referencedDeclaration": 941,
													"src": "1920:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$941_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:23:9"
									},
									"scope": 1045,
									"src": "1859:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2231:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2293:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2307:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2317:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": true,
														"src": "2307:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 970,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:4:9",
														"valueSize": 1
													}
												],
												"id": 976,
												"nodeType": "InlineAssembly",
												"src": "2284:47:9"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "2055:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2156:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2179:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2171:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 969,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:14:9"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2228:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2208:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$944_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 973,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 972,
														"name": "BooleanSlot",
														"nameLocations": [
															"2208:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 944,
														"src": "2208:11:9"
													},
													"referencedDeclaration": 944,
													"src": "2208:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$944_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:23:9"
									},
									"scope": 1045,
									"src": "2147:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "2519:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2581:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2605:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 985,
														"isOffset": false,
														"isSlot": true,
														"src": "2595:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 981,
														"isOffset": false,
														"isSlot": false,
														"src": "2605:4:9",
														"valueSize": 1
													}
												],
												"id": 987,
												"nodeType": "InlineAssembly",
												"src": "2572:47:9"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "2343:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2467:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "2459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 980,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:14:9"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2516:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "2496:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$947_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 984,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 983,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2496:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 947,
														"src": "2496:11:9"
													},
													"referencedDeclaration": 947,
													"src": "2496:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$947_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:23:9"
									},
									"scope": 1045,
									"src": "2435:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "2807:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2869:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2893:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": true,
														"src": "2883:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 992,
														"isOffset": false,
														"isSlot": false,
														"src": "2893:4:9",
														"valueSize": 1
													}
												],
												"id": 998,
												"nodeType": "InlineAssembly",
												"src": "2860:47:9"
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "2631:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2732:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2755:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2747:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 991,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:14:9"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2804:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "2784:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$950_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 994,
														"name": "Uint256Slot",
														"nameLocations": [
															"2784:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 950,
														"src": "2784:11:9"
													},
													"referencedDeclaration": 950,
													"src": "2784:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$950_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:23:9"
									},
									"scope": 1045,
									"src": "2723:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "3092:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3154:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3168:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3178:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1007,
														"isOffset": false,
														"isSlot": true,
														"src": "3168:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1003,
														"isOffset": false,
														"isSlot": false,
														"src": "3178:4:9",
														"valueSize": 1
													}
												],
												"id": 1009,
												"nodeType": "InlineAssembly",
												"src": "3145:47:9"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "2919:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3019:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3041:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "3033:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:14:9"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3089:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "3070:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$953_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1006,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1005,
														"name": "StringSlot",
														"nameLocations": [
															"3070:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "3070:10:9"
													},
													"referencedDeclaration": 953,
													"src": "3070:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$953_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:22:9"
									},
									"scope": 1045,
									"src": "3010:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "3400:112:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3462:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3476:20:9",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3486:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1018,
														"isOffset": false,
														"isSlot": true,
														"src": "3476:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1014,
														"isOffset": false,
														"isSlot": true,
														"src": "3486:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1020,
												"nodeType": "InlineAssembly",
												"src": "3453:53:9"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "3204:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3319:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3348:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3333:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1013,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3333:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:22:9"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3397:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "3378:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$953_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1016,
														"name": "StringSlot",
														"nameLocations": [
															"3378:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 953,
														"src": "3378:10:9"
													},
													"referencedDeclaration": 953,
													"src": "3378:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$953_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:9"
									},
									"scope": 1045,
									"src": "3310:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "3688:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3774:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1029,
														"isOffset": false,
														"isSlot": true,
														"src": "3764:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1025,
														"isOffset": false,
														"isSlot": false,
														"src": "3774:4:9",
														"valueSize": 1
													}
												],
												"id": 1031,
												"nodeType": "InlineAssembly",
												"src": "3741:47:9"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "3518:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3617:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3638:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3630:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1024,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:14:9"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3685:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "3667:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$956_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1027,
														"name": "BytesSlot",
														"nameLocations": [
															"3667:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 956,
														"src": "3667:9:9"
													},
													"referencedDeclaration": 956,
													"src": "3667:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$956_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:21:9"
									},
									"scope": 1045,
									"src": "3608:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "3991:112:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4053:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:20:9",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4077:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1040,
														"isOffset": false,
														"isSlot": true,
														"src": "4067:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1036,
														"isOffset": false,
														"isSlot": true,
														"src": "4077:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1042,
												"nodeType": "InlineAssembly",
												"src": "4044:53:9"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "3800:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3913:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3940:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3926:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:21:9"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3988:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3970:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$956_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1039,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1038,
														"name": "BytesSlot",
														"nameLocations": [
															"3970:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 956,
														"src": "3970:9:9"
													},
													"referencedDeclaration": 956,
													"src": "3970:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$956_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:21:9"
									},
									"scope": 1045,
									"src": "3904:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1046,
							"src": "1420:2685:9",
							"usedErrors": []
						}
					],
					"src": "193:3913:9"
				},
				"id": 9
			},
			"Gemstone/Proxy/BeaconProxyNFTdynamic.sol": {
				"ast": {
					"absolutePath": "Gemstone/Proxy/BeaconProxyNFTdynamic.sol",
					"exportedSymbols": {
						"Address": [
							905
						],
						"BeaconProxy": [
							565
						],
						"Context": [
							935
						],
						"ERC1967Upgrade": [
							447
						],
						"IBeacon": [
							575
						],
						"IERC1822Proxiable": [
							143
						],
						"IERC1967": [
							133
						],
						"Ownable": [
							112
						],
						"Proxy": [
							499
						],
						"StorageSlot": [
							1045
						],
						"nftCollectionBeacon": [
							1097
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
							"file": "@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 566,
							"src": "57:69:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.9.6/access/Ownable.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 113,
							"src": "127:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1050,
										"name": "BeaconProxy",
										"nameLocations": [
											"219:11:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 565,
										"src": "219:11:10"
									},
									"id": 1051,
									"nodeType": "InheritanceSpecifier",
									"src": "219:11:10"
								}
							],
							"canonicalName": "nftCollectionBeacon",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097,
								565,
								447,
								133,
								499
							],
							"name": "nftCollectionBeacon",
							"nameLocation": "196:19:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "371:398:10",
										"statements": [
											{
												"assignments": [
													1071
												],
												"declarations": [
													{
														"constant": false,
														"id": 1071,
														"mutability": "mutable",
														"name": "implementation",
														"nameLocation": "381:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "373:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "373:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1072,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															549
														],
														"referencedDeclaration": 549,
														"src": "396:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "396:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "373:40:10"
											},
											{
												"assignments": [
													1076,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "422:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "417:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1075,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "417:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1089,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "696e697469616c697a6528737472696e672c737472696e672c616464726573732c616464726573732c6164647265737329",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "517:51:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_db0ed6a04fe2c1749d33e22c76507a2661e152a12ca72c3f22fb18d7e5a7e4e8",
																		"typeString": "literal_string \"initialize(string,string,address,address,address)\""
																	},
																	"value": "initialize(string,string,address,address,address)"
																},
																{
																	"id": 1082,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "586:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1083,
																	"name": "symbol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "608:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1084,
																	"name": "identity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "632:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1085,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "658:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "681:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_db0ed6a04fe2c1749d33e22c76507a2661e152a12ca72c3f22fb18d7e5a7e4e8",
																		"typeString": "literal_string \"initialize(string,string,address,address,address)\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1079,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "476:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "480:19:10",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "476:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "476:224:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1077,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "435:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "450:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "435:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "435:275:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "416:294:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "728:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a6174696f6e206661696c65642e",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "737:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																"typeString": "literal_string \"Initialization failed.\""
															},
															"value": "Initialization failed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84817bd958e2e6d9a7351828ba5fd352a3aaf3cf97a67f6d55271e39a5b3e2ad",
																"typeString": "literal_string \"Initialization failed.\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "720:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "720:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "720:42:10"
											}
										]
									},
									"id": 1096,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1066,
													"name": "beacon",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1053,
													"src": "361:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"hexValue": "",
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "368:2:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 1068,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1065,
												"name": "BeaconProxy",
												"nameLocations": [
													"349:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 565,
												"src": "349:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "349:22:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "256:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "248:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "277:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "263:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "263:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "296:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "282:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "282:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "311:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "303:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "328:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "320:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "342:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "334:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:101:10"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:10"
									},
									"scope": 1097,
									"src": "236:533:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1098,
							"src": "187:585:10",
							"usedErrors": []
						}
					],
					"src": "32:742:10"
				},
				"id": 10
			}
		}
	}
}