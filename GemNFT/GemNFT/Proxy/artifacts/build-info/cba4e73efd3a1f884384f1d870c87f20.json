{
	"id": "cba4e73efd3a1f884384f1d870c87f20",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"GemNFT/Proxy/BeaconProxyNFTfactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\nimport  \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\";\n\ncontract nftCollectionBeacon is BeaconProxy{\n    constructor(address beacon) BeaconProxy(beacon,\"\"){}\n\n}"
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../Proxy.sol\";\nimport \"../ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  tag_5\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1149:1155  beacon */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1157:1161  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1163:1168  false */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1148  _upgradeBeaconToAndCall */\n  tag_6\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  jump(tag_64)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\ntag_6:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  tag_9\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5845:5854  newBeacon */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5844  _setBeacon */\n  tag_10\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5870:5895  BeaconUpgraded(newBeacon) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5923:5924  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5913  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5920  data.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5924  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\n  dup1\n  tag_11\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5928:5937  forceCall */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\ntag_11:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  tag_13\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5990:5999  newBeacon */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6015  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6017  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":6019:6023  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:5981  Address.functionDelegateCall */\n  tag_18\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\ntag_10:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  dup2\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1767:1769   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1749:1770   */\n  mstore\n    /* \"#utility.yul\":1806:1808   */\n  0x25\n    /* \"#utility.yul\":1786:1804   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1779:1809   */\n  mstore\n    /* \"#utility.yul\":1845:1879   */\n  0x455243313936373a206e657720626561636f6e206973206e6f74206120636f6e\n    /* \"#utility.yul\":1825:1843   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1818:1880   */\n  mstore\n  shl(0xda, 0x1d1c9858dd)\n    /* \"#utility.yul\":1896:1914   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1889:1924   */\n  mstore\n    /* \"#utility.yul\":1941:1960   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\n  tag_25\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5248:5257  newBeacon */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5273  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5275  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_27\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_27:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_28\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1725  account.code.length > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\ntag_25:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_29\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2173:2175   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2155:2176   */\n  mstore\n    /* \"#utility.yul\":2212:2214   */\n  0x30\n    /* \"#utility.yul\":2192:2210   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2185:2215   */\n  mstore\n    /* \"#utility.yul\":2251:2285   */\n  0x455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069\n    /* \"#utility.yul\":2231:2249   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2224:2286   */\n  mstore\n  shl(0x82, 0x1cc81b9bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":2302:2320   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2295:2341   */\n  mstore\n    /* \"#utility.yul\":2358:2377   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_23\n    /* \"#utility.yul\":1971:2383   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\ntag_29:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5418  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_18:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6757:6769  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_35\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6809:6815  target */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6817:6821  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6808  functionDelegateCall */\n  tag_36\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\ntag_36:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7199:7211  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7224:7236  bool success */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7238:7261  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7271  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7284  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7285:7289  data */\n  dup6\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_44\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_43)\ntag_44:\n  0x60\n  swap2\n  pop\ntag_43:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_45\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7334:7340  target */\n  dup7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7363:7375  errorMessage */\n  dup8\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n  tag_46\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\ntag_46:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7851:7863  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7879:7886  success */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7916  returndata */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7923  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7927:7928  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7928  returndata.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n  tag_51\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  dup6\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2896:2898   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2878:2899   */\n  mstore\n    /* \"#utility.yul\":2935:2937   */\n  0x1d\n    /* \"#utility.yul\":2915:2933   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2908:2938   */\n  mstore\n    /* \"#utility.yul\":2974:3005   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":2954:2972   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2947:3006   */\n  mstore\n    /* \"#utility.yul\":3023:3041   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_23\n    /* \"#utility.yul\":2694:3047   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\ntag_51:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8208:8218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8201:8218  return returndata */\n  jump(tag_55)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\ntag_48:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  tag_55\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8257:8267  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8269:8281  errorMessage */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8256  _revert */\n  tag_56\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  jump\t// in\ntag_55:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_56:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:8997  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:9001  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n  tag_58\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9208:9218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9202:9219  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9264:9279  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9251:9261  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9247:9249  32 */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9243:9262  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\ntag_58:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9331:9343  errorMessage */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9324:9344  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":14:191   */\ntag_62:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_66:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_63:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1347   */\ntag_2:\n    /* \"#utility.yul\":416:422   */\n  0x00\n    /* \"#utility.yul\":424:430   */\n  dup1\n    /* \"#utility.yul\":477:479   */\n  0x40\n    /* \"#utility.yul\":465:474   */\n  dup4\n    /* \"#utility.yul\":456:463   */\n  dup6\n    /* \"#utility.yul\":452:475   */\n  sub\n    /* \"#utility.yul\":448:480   */\n  slt\n    /* \"#utility.yul\":445:497   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":493:494   */\n  0x00\n    /* \"#utility.yul\":490:491   */\n  dup1\n    /* \"#utility.yul\":483:495   */\n  revert\n    /* \"#utility.yul\":445:497   */\ntag_69:\n    /* \"#utility.yul\":516:556   */\n  tag_70\n    /* \"#utility.yul\":546:555   */\n  dup4\n    /* \"#utility.yul\":516:556   */\n  tag_62\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":600:602   */\n  0x20\n    /* \"#utility.yul\":585:603   */\n  dup5\n  add\n    /* \"#utility.yul\":579:604   */\n  mload\n    /* \"#utility.yul\":506:556   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":616:646   */\n  dup2\n  gt\n    /* \"#utility.yul\":613:663   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":659:660   */\n  0x00\n    /* \"#utility.yul\":656:657   */\n  dup1\n    /* \"#utility.yul\":649:661   */\n  revert\n    /* \"#utility.yul\":613:663   */\ntag_71:\n    /* \"#utility.yul\":682:704   */\n  dup4\n  add\n    /* \"#utility.yul\":735:739   */\n  0x1f\n    /* \"#utility.yul\":727:740   */\n  dup2\n  add\n    /* \"#utility.yul\":723:750   */\n  dup6\n  sgt\n    /* \"#utility.yul\":713:768   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":764:765   */\n  0x00\n    /* \"#utility.yul\":761:762   */\n  dup1\n    /* \"#utility.yul\":754:766   */\n  revert\n    /* \"#utility.yul\":713:768   */\ntag_72:\n    /* \"#utility.yul\":791:800   */\n  dup1\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":812:842   */\n  dup2\n  gt\n    /* \"#utility.yul\":809:865   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":845:863   */\n  tag_74\n  tag_63\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":894:896   */\n  0x40\n    /* \"#utility.yul\":888:897   */\n  mload\n    /* \"#utility.yul\":986:988   */\n  0x1f\n    /* \"#utility.yul\":948:965   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":944:975   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":977:979   */\n  0x3f\n    /* \"#utility.yul\":940:980   */\n  add\n    /* \"#utility.yul\":936:990   */\n  and\n    /* \"#utility.yul\":924:991   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1006:1040   */\n  dup2\n  gt\n    /* \"#utility.yul\":1042:1064   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":1003:1065   */\n  or\n    /* \"#utility.yul\":1000:1088   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1068:1086   */\n  tag_76\n  tag_63\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1104:1106   */\n  0x40\n    /* \"#utility.yul\":1097:1119   */\n  mstore\n    /* \"#utility.yul\":1128:1150   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":1169:1184   */\n  dup3\n  dup3\n  add\n    /* \"#utility.yul\":1186:1188   */\n  0x20\n    /* \"#utility.yul\":1165:1189   */\n  add\n    /* \"#utility.yul\":1162:1199   */\n  dup8\n  lt\n    /* \"#utility.yul\":1159:1216   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1159:1216   */\ntag_77:\n    /* \"#utility.yul\":1261:1267   */\n  dup2\n    /* \"#utility.yul\":1256:1258   */\n  0x20\n    /* \"#utility.yul\":1252:1254   */\n  dup5\n    /* \"#utility.yul\":1248:1259   */\n  add\n    /* \"#utility.yul\":1243:1245   */\n  0x20\n    /* \"#utility.yul\":1235:1241   */\n  dup4\n    /* \"#utility.yul\":1231:1246   */\n  add\n    /* \"#utility.yul\":1225:1268   */\n  mcopy\n    /* \"#utility.yul\":1314:1315   */\n  0x00\n    /* \"#utility.yul\":1309:1311   */\n  0x20\n    /* \"#utility.yul\":1300:1306   */\n  dup4\n    /* \"#utility.yul\":1292:1298   */\n  dup4\n    /* \"#utility.yul\":1288:1307   */\n  add\n    /* \"#utility.yul\":1284:1312   */\n  add\n    /* \"#utility.yul\":1277:1316   */\n  mstore\n    /* \"#utility.yul\":1335:1341   */\n  dup1\n    /* \"#utility.yul\":1325:1341   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":328:1347   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1352:1560   */\ntag_17:\n    /* \"#utility.yul\":1422:1428   */\n  0x00\n    /* \"#utility.yul\":1475:1477   */\n  0x20\n    /* \"#utility.yul\":1463:1472   */\n  dup3\n    /* \"#utility.yul\":1454:1461   */\n  dup5\n    /* \"#utility.yul\":1450:1473   */\n  sub\n    /* \"#utility.yul\":1446:1478   */\n  slt\n    /* \"#utility.yul\":1443:1495   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1491:1492   */\n  0x00\n    /* \"#utility.yul\":1488:1489   */\n  dup1\n    /* \"#utility.yul\":1481:1493   */\n  revert\n    /* \"#utility.yul\":1443:1495   */\ntag_79:\n    /* \"#utility.yul\":1514:1554   */\n  tag_35\n    /* \"#utility.yul\":1544:1553   */\n  dup3\n    /* \"#utility.yul\":1514:1554   */\n  tag_62\n  jump\t// in\n    /* \"#utility.yul\":2388:2689   */\ntag_41:\n    /* \"#utility.yul\":2517:2520   */\n  0x00\n    /* \"#utility.yul\":2555:2561   */\n  dup3\n    /* \"#utility.yul\":2549:2562   */\n  mload\n    /* \"#utility.yul\":2601:2607   */\n  dup1\n    /* \"#utility.yul\":2594:2598   */\n  0x20\n    /* \"#utility.yul\":2586:2592   */\n  dup6\n    /* \"#utility.yul\":2582:2599   */\n  add\n    /* \"#utility.yul\":2577:2580   */\n  dup5\n    /* \"#utility.yul\":2571:2608   */\n  mcopy\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2627:2643   */\n  swap3\n  add\n    /* \"#utility.yul\":2652:2665   */\n  swap2\n  dup3\n  mstore\n  pop\n    /* \"#utility.yul\":2627:2643   */\n  swap2\n    /* \"#utility.yul\":2388:2689   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3052:3470   */\ntag_61:\n    /* \"#utility.yul\":3201:3203   */\n  0x20\n    /* \"#utility.yul\":3190:3199   */\n  dup2\n    /* \"#utility.yul\":3183:3204   */\n  mstore\n    /* \"#utility.yul\":3164:3168   */\n  0x00\n    /* \"#utility.yul\":3233:3239   */\n  dup3\n    /* \"#utility.yul\":3227:3240   */\n  mload\n    /* \"#utility.yul\":3276:3282   */\n  dup1\n    /* \"#utility.yul\":3271:3273   */\n  0x20\n    /* \"#utility.yul\":3260:3269   */\n  dup5\n    /* \"#utility.yul\":3256:3274   */\n  add\n    /* \"#utility.yul\":3249:3283   */\n  mstore\n    /* \"#utility.yul\":3335:3341   */\n  dup1\n    /* \"#utility.yul\":3330:3332   */\n  0x20\n    /* \"#utility.yul\":3322:3328   */\n  dup6\n    /* \"#utility.yul\":3318:3333   */\n  add\n    /* \"#utility.yul\":3313:3315   */\n  0x40\n    /* \"#utility.yul\":3302:3311   */\n  dup6\n    /* \"#utility.yul\":3298:3316   */\n  add\n    /* \"#utility.yul\":3292:3342   */\n  mcopy\n    /* \"#utility.yul\":3391:3392   */\n  0x00\n    /* \"#utility.yul\":3386:3388   */\n  0x40\n    /* \"#utility.yul\":3377:3383   */\n  dup3\n    /* \"#utility.yul\":3366:3375   */\n  dup6\n    /* \"#utility.yul\":3362:3384   */\n  add\n    /* \"#utility.yul\":3358:3389   */\n  add\n    /* \"#utility.yul\":3351:3393   */\n  mstore\n    /* \"#utility.yul\":3461:3463   */\n  0x40\n    /* \"#utility.yul\":3454:3456   */\n  0x1f\n    /* \"#utility.yul\":3450:3457   */\n  not\n    /* \"#utility.yul\":3445:3447   */\n  0x1f\n    /* \"#utility.yul\":3437:3443   */\n  dup4\n    /* \"#utility.yul\":3433:3448   */\n  add\n    /* \"#utility.yul\":3429:3458   */\n  and\n    /* \"#utility.yul\":3418:3427   */\n  dup5\n    /* \"#utility.yul\":3414:3459   */\n  add\n    /* \"#utility.yul\":3410:3464   */\n  add\n    /* \"#utility.yul\":3402:3464   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":3052:3470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_64:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":580:2095  contract BeaconProxy is Proxy, ERC1967Upgrade {... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_13\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_14\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_15\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_14:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_16\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_13:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1511:1518  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n      tag_19\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4965  StorageSlot.getAddressSlot(_BEACON_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4848:4972  function _getBeacon() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n    tag_19:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1573  IBeacon(_getBeacon()).implementation */\n      and\n      0x5c60da1b\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1575  IBeacon(_getBeacon()).implementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1530:1575  return IBeacon(_getBeacon()).implementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_27\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_27:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"#utility.yul\":14:304   */\n    tag_24:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_34:\n        /* \"#utility.yul\":179:195   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:255   */\n      dup2\n      and\n        /* \"#utility.yul\":214:256   */\n      dup2\n      eq\n        /* \"#utility.yul\":204:274   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":270:271   */\n      0x00\n        /* \"#utility.yul\":267:268   */\n      dup1\n        /* \"#utility.yul\":260:272   */\n      revert\n        /* \"#utility.yul\":204:274   */\n    tag_35:\n        /* \"#utility.yul\":293:298   */\n      swap4\n        /* \"#utility.yul\":14:304   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122015e9752820a52ddad21ef1f500522b2d534f78d3ff8a2ec43d2d9ffadb796b6264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_791": {
									"entryPoint": 916,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setBeacon_295": {
									"entryPoint": 241,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeBeaconToAndCall_333": {
									"entryPoint": 52,
									"id": 333,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@functionDelegateCall_679": {
									"entryPoint": 627,
									"id": 679,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_708": {
									"entryPoint": 671,
									"id": 708,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_747": {
									"entryPoint": 788,
									"id": 747,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3472:9",
										"nodeType": "YulBlock",
										"src": "0:3472:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:9",
													"nodeType": "YulBlock",
													"src": "74:117:9",
													"statements": [
														{
															"nativeSrc": "84:22:9",
															"nodeType": "YulAssignment",
															"src": "84:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:9"
																},
																"nativeSrc": "93:13:9",
																"nodeType": "YulFunctionCall",
																"src": "93:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:9",
																"nodeType": "YulBlock",
																"src": "169:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:9",
																					"nodeType": "YulLiteral",
																					"src": "178:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:9",
																					"nodeType": "YulLiteral",
																					"src": "181:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:9"
																			},
																			"nativeSrc": "171:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:9"
																		},
																		"nativeSrc": "171:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:9",
																										"nodeType": "YulLiteral",
																										"src": "154:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:9",
																										"nodeType": "YulLiteral",
																										"src": "159:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:9"
																								},
																								"nativeSrc": "150:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:9",
																								"nodeType": "YulLiteral",
																								"src": "163:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:9"
																						},
																						"nativeSrc": "146:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:9"
																				},
																				"nativeSrc": "135:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:9"
																		},
																		"nativeSrc": "125:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:9"
																},
																"nativeSrc": "118:50:9",
																"nodeType": "YulFunctionCall",
																"src": "118:50:9"
															},
															"nativeSrc": "115:70:9",
															"nodeType": "YulIf",
															"src": "115:70:9"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:9",
														"nodeType": "YulTypedName",
														"src": "53:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:9",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "14:177:9"
											},
											{
												"body": {
													"nativeSrc": "228:95:9",
													"nodeType": "YulBlock",
													"src": "228:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:9",
																		"nodeType": "YulLiteral",
																		"src": "245:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:9",
																				"nodeType": "YulLiteral",
																				"src": "252:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:9",
																				"nodeType": "YulLiteral",
																				"src": "257:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:9"
																		},
																		"nativeSrc": "248:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:9"
																},
																"nativeSrc": "238:31:9",
																"nodeType": "YulFunctionCall",
																"src": "238:31:9"
															},
															"nativeSrc": "238:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:9",
																		"nodeType": "YulLiteral",
																		"src": "285:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:9",
																		"nodeType": "YulLiteral",
																		"src": "288:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:9"
																},
																"nativeSrc": "278:15:9",
																"nodeType": "YulFunctionCall",
																"src": "278:15:9"
															},
															"nativeSrc": "278:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:9",
																		"nodeType": "YulLiteral",
																		"src": "309:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:9",
																		"nodeType": "YulLiteral",
																		"src": "312:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:9"
																},
																"nativeSrc": "302:15:9",
																"nodeType": "YulFunctionCall",
																"src": "302:15:9"
															},
															"nativeSrc": "302:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:9",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:9"
											},
											{
												"body": {
													"nativeSrc": "435:912:9",
													"nodeType": "YulBlock",
													"src": "435:912:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "481:16:9",
																"nodeType": "YulBlock",
																"src": "481:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "490:1:9",
																					"nodeType": "YulLiteral",
																					"src": "490:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "493:1:9",
																					"nodeType": "YulLiteral",
																					"src": "493:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "483:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:6:9"
																			},
																			"nativeSrc": "483:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "483:12:9"
																		},
																		"nativeSrc": "483:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "483:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "456:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "465:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "465:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "452:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "452:3:9"
																		},
																		"nativeSrc": "452:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "452:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "477:2:9",
																		"nodeType": "YulLiteral",
																		"src": "477:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "448:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "448:3:9"
																},
																"nativeSrc": "448:32:9",
																"nodeType": "YulFunctionCall",
																"src": "448:32:9"
															},
															"nativeSrc": "445:52:9",
															"nodeType": "YulIf",
															"src": "445:52:9"
														},
														{
															"nativeSrc": "506:50:9",
															"nodeType": "YulAssignment",
															"src": "506:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "546:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "546:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "516:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "516:29:9"
																},
																"nativeSrc": "516:40:9",
																"nodeType": "YulFunctionCall",
																"src": "516:40:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "506:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:9"
																}
															]
														},
														{
															"nativeSrc": "565:39:9",
															"nodeType": "YulVariableDeclaration",
															"src": "565:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "589:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "589:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "600:2:9",
																				"nodeType": "YulLiteral",
																				"src": "600:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "585:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "585:3:9"
																		},
																		"nativeSrc": "585:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "585:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "579:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "579:5:9"
																},
																"nativeSrc": "579:25:9",
																"nodeType": "YulFunctionCall",
																"src": "579:25:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "569:6:9",
																	"nodeType": "YulTypedName",
																	"src": "569:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "647:16:9",
																"nodeType": "YulBlock",
																"src": "647:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "656:1:9",
																					"nodeType": "YulLiteral",
																					"src": "656:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "659:1:9",
																					"nodeType": "YulLiteral",
																					"src": "659:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "649:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "649:6:9"
																			},
																			"nativeSrc": "649:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "649:12:9"
																		},
																		"nativeSrc": "649:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "649:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "619:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "619:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "635:2:9",
																						"nodeType": "YulLiteral",
																						"src": "635:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "639:1:9",
																						"nodeType": "YulLiteral",
																						"src": "639:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "631:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:9"
																				},
																				"nativeSrc": "631:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "631:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "643:1:9",
																				"nodeType": "YulLiteral",
																				"src": "643:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "627:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:9"
																		},
																		"nativeSrc": "627:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "627:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "616:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "616:2:9"
																},
																"nativeSrc": "616:30:9",
																"nodeType": "YulFunctionCall",
																"src": "616:30:9"
															},
															"nativeSrc": "613:50:9",
															"nodeType": "YulIf",
															"src": "613:50:9"
														},
														{
															"nativeSrc": "672:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "672:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "686:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "686:9:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "697:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "682:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:9"
																},
																"nativeSrc": "682:22:9",
																"nodeType": "YulFunctionCall",
																"src": "682:22:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "676:2:9",
																	"nodeType": "YulTypedName",
																	"src": "676:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "752:16:9",
																"nodeType": "YulBlock",
																"src": "752:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "761:1:9",
																					"nodeType": "YulLiteral",
																					"src": "761:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "764:1:9",
																					"nodeType": "YulLiteral",
																					"src": "764:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "754:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "754:6:9"
																			},
																			"nativeSrc": "754:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "754:12:9"
																		},
																		"nativeSrc": "754:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "754:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "731:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "731:2:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "735:4:9",
																						"nodeType": "YulLiteral",
																						"src": "735:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "727:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "727:3:9"
																				},
																				"nativeSrc": "727:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "727:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "742:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "742:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "723:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:9"
																		},
																		"nativeSrc": "723:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "723:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "716:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:9"
																},
																"nativeSrc": "716:35:9",
																"nodeType": "YulFunctionCall",
																"src": "716:35:9"
															},
															"nativeSrc": "713:55:9",
															"nodeType": "YulIf",
															"src": "713:55:9"
														},
														{
															"nativeSrc": "777:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "777:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "797:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "797:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "791:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:5:9"
																},
																"nativeSrc": "791:9:9",
																"nodeType": "YulFunctionCall",
																"src": "791:9:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "781:6:9",
																	"nodeType": "YulTypedName",
																	"src": "781:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "843:22:9",
																"nodeType": "YulBlock",
																"src": "843:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "845:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "845:16:9"
																			},
																			"nativeSrc": "845:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "845:18:9"
																		},
																		"nativeSrc": "845:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "845:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "815:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "815:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "831:2:9",
																						"nodeType": "YulLiteral",
																						"src": "831:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "835:1:9",
																						"nodeType": "YulLiteral",
																						"src": "835:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "827:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "827:3:9"
																				},
																				"nativeSrc": "827:10:9",
																				"nodeType": "YulFunctionCall",
																				"src": "827:10:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "839:1:9",
																				"nodeType": "YulLiteral",
																				"src": "839:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "823:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "823:3:9"
																		},
																		"nativeSrc": "823:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "823:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "812:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:9"
																},
																"nativeSrc": "812:30:9",
																"nodeType": "YulFunctionCall",
																"src": "812:30:9"
															},
															"nativeSrc": "809:56:9",
															"nodeType": "YulIf",
															"src": "809:56:9"
														},
														{
															"nativeSrc": "874:23:9",
															"nodeType": "YulVariableDeclaration",
															"src": "874:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "894:2:9",
																		"nodeType": "YulLiteral",
																		"src": "894:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "888:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "888:5:9"
																},
																"nativeSrc": "888:9:9",
																"nodeType": "YulFunctionCall",
																"src": "888:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "878:6:9",
																	"nodeType": "YulTypedName",
																	"src": "878:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "906:85:9",
															"nodeType": "YulVariableDeclaration",
															"src": "906:85:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "928:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "928:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "952:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "952:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "960:4:9",
																										"nodeType": "YulLiteral",
																										"src": "960:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "948:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "948:3:9"
																								},
																								"nativeSrc": "948:17:9",
																								"nodeType": "YulFunctionCall",
																								"src": "948:17:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "971:2:9",
																										"nodeType": "YulLiteral",
																										"src": "971:2:9",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "967:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "967:3:9"
																								},
																								"nativeSrc": "967:7:9",
																								"nodeType": "YulFunctionCall",
																								"src": "967:7:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "944:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "944:3:9"
																						},
																						"nativeSrc": "944:31:9",
																						"nodeType": "YulFunctionCall",
																						"src": "944:31:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "977:2:9",
																						"nodeType": "YulLiteral",
																						"src": "977:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "940:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:9"
																				},
																				"nativeSrc": "940:40:9",
																				"nodeType": "YulFunctionCall",
																				"src": "940:40:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "986:2:9",
																						"nodeType": "YulLiteral",
																						"src": "986:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "982:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "982:3:9"
																				},
																				"nativeSrc": "982:7:9",
																				"nodeType": "YulFunctionCall",
																				"src": "982:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "936:3:9"
																		},
																		"nativeSrc": "936:54:9",
																		"nodeType": "YulFunctionCall",
																		"src": "936:54:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "924:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "924:3:9"
																},
																"nativeSrc": "924:67:9",
																"nodeType": "YulFunctionCall",
																"src": "924:67:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "910:10:9",
																	"nodeType": "YulTypedName",
																	"src": "910:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1066:22:9",
																"nodeType": "YulBlock",
																"src": "1066:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1068:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1068:16:9"
																			},
																			"nativeSrc": "1068:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1068:18:9"
																		},
																		"nativeSrc": "1068:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1068:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1009:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1009:10:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1029:2:9",
																								"nodeType": "YulLiteral",
																								"src": "1029:2:9",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1033:1:9",
																								"nodeType": "YulLiteral",
																								"src": "1033:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1025:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1025:3:9"
																						},
																						"nativeSrc": "1025:10:9",
																						"nodeType": "YulFunctionCall",
																						"src": "1025:10:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1037:1:9",
																						"nodeType": "YulLiteral",
																						"src": "1037:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1021:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1021:3:9"
																				},
																				"nativeSrc": "1021:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1021:18:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1006:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1006:2:9"
																		},
																		"nativeSrc": "1006:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1006:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1045:10:9",
																				"nodeType": "YulIdentifier",
																				"src": "1045:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1057:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1042:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1042:2:9"
																		},
																		"nativeSrc": "1042:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1042:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1003:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1003:2:9"
																},
																"nativeSrc": "1003:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1003:62:9"
															},
															"nativeSrc": "1000:88:9",
															"nodeType": "YulIf",
															"src": "1000:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1104:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1104:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1108:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1108:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1097:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:9"
																},
																"nativeSrc": "1097:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1097:22:9"
															},
															"nativeSrc": "1097:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1097:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1135:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1135:6:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1143:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1143:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1128:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:9"
																},
																"nativeSrc": "1128:22:9",
																"nodeType": "YulFunctionCall",
																"src": "1128:22:9"
															},
															"nativeSrc": "1128:22:9",
															"nodeType": "YulExpressionStatement",
															"src": "1128:22:9"
														},
														{
															"body": {
																"nativeSrc": "1200:16:9",
																"nodeType": "YulBlock",
																"src": "1200:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1209:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1212:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1202:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:9"
																			},
																			"nativeSrc": "1202:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:9"
																		},
																		"nativeSrc": "1202:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1173:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "1173:2:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1177:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1177:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1169:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1169:3:9"
																				},
																				"nativeSrc": "1169:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:15:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1186:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1186:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1165:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1165:3:9"
																		},
																		"nativeSrc": "1165:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1165:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1191:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "1191:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1162:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1162:2:9"
																},
																"nativeSrc": "1162:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1162:37:9"
															},
															"nativeSrc": "1159:57:9",
															"nodeType": "YulIf",
															"src": "1159:57:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1235:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1235:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1243:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1231:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:9"
																		},
																		"nativeSrc": "1231:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1231:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "1252:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1252:2:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1256:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1256:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1248:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1248:3:9"
																		},
																		"nativeSrc": "1248:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1248:11:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1261:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1261:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1225:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1225:5:9"
																},
																"nativeSrc": "1225:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1225:43:9"
															},
															"nativeSrc": "1225:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "1225:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1292:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1292:6:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1300:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1288:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1288:3:9"
																				},
																				"nativeSrc": "1288:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1288:19:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1309:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1309:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1284:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1284:3:9"
																		},
																		"nativeSrc": "1284:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1284:28:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1314:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1314:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:9"
																},
																"nativeSrc": "1277:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1277:39:9"
															},
															"nativeSrc": "1277:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "1277:39:9"
														},
														{
															"nativeSrc": "1325:16:9",
															"nodeType": "YulAssignment",
															"src": "1325:16:9",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1335:6:9",
																"nodeType": "YulIdentifier",
																"src": "1335:6:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1325:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "328:1019:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "393:9:9",
														"nodeType": "YulTypedName",
														"src": "393:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "404:7:9",
														"nodeType": "YulTypedName",
														"src": "404:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "416:6:9",
														"nodeType": "YulTypedName",
														"src": "416:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "424:6:9",
														"nodeType": "YulTypedName",
														"src": "424:6:9",
														"type": ""
													}
												],
												"src": "328:1019:9"
											},
											{
												"body": {
													"nativeSrc": "1433:127:9",
													"nodeType": "YulBlock",
													"src": "1433:127:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1479:16:9",
																"nodeType": "YulBlock",
																"src": "1479:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1488:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1488:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1491:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1481:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1481:6:9"
																			},
																			"nativeSrc": "1481:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1481:12:9"
																		},
																		"nativeSrc": "1481:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1481:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1454:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1454:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1463:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1450:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1450:3:9"
																		},
																		"nativeSrc": "1450:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1450:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1475:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1475:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1446:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:9"
																},
																"nativeSrc": "1446:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1446:32:9"
															},
															"nativeSrc": "1443:52:9",
															"nodeType": "YulIf",
															"src": "1443:52:9"
														},
														{
															"nativeSrc": "1504:50:9",
															"nodeType": "YulAssignment",
															"src": "1504:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1544:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1544:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1514:29:9",
																	"nodeType": "YulIdentifier",
																	"src": "1514:29:9"
																},
																"nativeSrc": "1514:40:9",
																"nodeType": "YulFunctionCall",
																"src": "1514:40:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1504:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1504:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "1352:208:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1399:9:9",
														"nodeType": "YulTypedName",
														"src": "1399:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1410:7:9",
														"nodeType": "YulTypedName",
														"src": "1410:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1422:6:9",
														"nodeType": "YulTypedName",
														"src": "1422:6:9",
														"type": ""
													}
												],
												"src": "1352:208:9"
											},
											{
												"body": {
													"nativeSrc": "1739:227:9",
													"nodeType": "YulBlock",
													"src": "1739:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1756:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1756:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1767:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1749:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:9"
																},
																"nativeSrc": "1749:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1749:21:9"
															},
															"nativeSrc": "1749:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1749:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1790:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1801:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1801:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1786:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:9"
																		},
																		"nativeSrc": "1786:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1806:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1779:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1779:6:9"
																},
																"nativeSrc": "1779:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1779:30:9"
															},
															"nativeSrc": "1779:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1779:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1829:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1829:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1840:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1840:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1825:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:9"
																		},
																		"nativeSrc": "1825:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:18:9"
																	},
																	{
																		"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e",
																		"kind": "string",
																		"nativeSrc": "1845:34:9",
																		"nodeType": "YulLiteral",
																		"src": "1845:34:9",
																		"type": "",
																		"value": "ERC1967: new beacon is not a con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1818:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:9"
																},
																"nativeSrc": "1818:62:9",
																"nodeType": "YulFunctionCall",
																"src": "1818:62:9"
															},
															"nativeSrc": "1818:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "1818:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1900:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1911:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1911:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1896:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:9"
																		},
																		"nativeSrc": "1896:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1896:18:9"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nativeSrc": "1916:7:9",
																		"nodeType": "YulLiteral",
																		"src": "1916:7:9",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1889:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:9"
																},
																"nativeSrc": "1889:35:9",
																"nodeType": "YulFunctionCall",
																"src": "1889:35:9"
															},
															"nativeSrc": "1889:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "1889:35:9"
														},
														{
															"nativeSrc": "1933:27:9",
															"nodeType": "YulAssignment",
															"src": "1933:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1945:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1945:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1956:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1941:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1941:3:9"
																},
																"nativeSrc": "1941:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1941:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1933:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1933:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1565:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1716:9:9",
														"nodeType": "YulTypedName",
														"src": "1716:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1730:4:9",
														"nodeType": "YulTypedName",
														"src": "1730:4:9",
														"type": ""
													}
												],
												"src": "1565:401:9"
											},
											{
												"body": {
													"nativeSrc": "2145:238:9",
													"nodeType": "YulBlock",
													"src": "2145:238:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2162:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2162:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2173:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2173:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2155:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:9"
																},
																"nativeSrc": "2155:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2155:21:9"
															},
															"nativeSrc": "2155:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2155:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2196:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2196:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2207:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2207:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2192:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:9"
																		},
																		"nativeSrc": "2192:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2192:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2185:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2185:6:9"
																},
																"nativeSrc": "2185:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2185:30:9"
															},
															"nativeSrc": "2185:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2185:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2235:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2235:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2246:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2246:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2231:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2231:3:9"
																		},
																		"nativeSrc": "2231:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2231:18:9"
																	},
																	{
																		"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069",
																		"kind": "string",
																		"nativeSrc": "2251:34:9",
																		"nodeType": "YulLiteral",
																		"src": "2251:34:9",
																		"type": "",
																		"value": "ERC1967: beacon implementation i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2224:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:9"
																},
																"nativeSrc": "2224:62:9",
																"nodeType": "YulFunctionCall",
																"src": "2224:62:9"
															},
															"nativeSrc": "2224:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "2224:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2306:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2306:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2317:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2317:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2302:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:9"
																		},
																		"nativeSrc": "2302:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:18:9"
																	},
																	{
																		"hexValue": "73206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2322:18:9",
																		"nodeType": "YulLiteral",
																		"src": "2322:18:9",
																		"type": "",
																		"value": "s not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2295:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:9"
																},
																"nativeSrc": "2295:46:9",
																"nodeType": "YulFunctionCall",
																"src": "2295:46:9"
															},
															"nativeSrc": "2295:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "2295:46:9"
														},
														{
															"nativeSrc": "2350:27:9",
															"nodeType": "YulAssignment",
															"src": "2350:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2362:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2362:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2373:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2373:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2358:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:3:9"
																},
																"nativeSrc": "2358:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2350:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2350:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1971:412:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2122:9:9",
														"nodeType": "YulTypedName",
														"src": "2122:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2136:4:9",
														"nodeType": "YulTypedName",
														"src": "2136:4:9",
														"type": ""
													}
												],
												"src": "1971:412:9"
											},
											{
												"body": {
													"nativeSrc": "2525:164:9",
													"nodeType": "YulBlock",
													"src": "2525:164:9",
													"statements": [
														{
															"nativeSrc": "2535:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2535:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2555:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2555:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2549:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2549:5:9"
																},
																"nativeSrc": "2549:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2549:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2539:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2539:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2577:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2577:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2586:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2586:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2594:4:9",
																				"nodeType": "YulLiteral",
																				"src": "2594:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2582:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:9"
																		},
																		"nativeSrc": "2582:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2601:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2601:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2571:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2571:5:9"
																},
																"nativeSrc": "2571:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2571:37:9"
															},
															"nativeSrc": "2571:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2571:37:9"
														},
														{
															"nativeSrc": "2617:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2617:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2631:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2631:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2636:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2636:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:9"
																},
																"nativeSrc": "2627:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2627:16:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2621:2:9",
																	"nodeType": "YulTypedName",
																	"src": "2621:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2659:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "2659:2:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2663:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2663:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:9"
																},
																"nativeSrc": "2652:13:9",
																"nodeType": "YulFunctionCall",
																"src": "2652:13:9"
															},
															"nativeSrc": "2652:13:9",
															"nodeType": "YulExpressionStatement",
															"src": "2652:13:9"
														},
														{
															"nativeSrc": "2674:9:9",
															"nodeType": "YulAssignment",
															"src": "2674:9:9",
															"value": {
																"name": "_1",
																"nativeSrc": "2681:2:9",
																"nodeType": "YulIdentifier",
																"src": "2681:2:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2674:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "2388:301:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2501:3:9",
														"nodeType": "YulTypedName",
														"src": "2501:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2506:6:9",
														"nodeType": "YulTypedName",
														"src": "2506:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2517:3:9",
														"nodeType": "YulTypedName",
														"src": "2517:3:9",
														"type": ""
													}
												],
												"src": "2388:301:9"
											},
											{
												"body": {
													"nativeSrc": "2868:179:9",
													"nodeType": "YulBlock",
													"src": "2868:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2885:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2885:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2896:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2878:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:9"
																},
																"nativeSrc": "2878:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2878:21:9"
															},
															"nativeSrc": "2878:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "2878:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2919:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2919:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2930:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2930:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2915:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:9"
																		},
																		"nativeSrc": "2915:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2908:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:9"
																},
																"nativeSrc": "2908:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2908:30:9"
															},
															"nativeSrc": "2908:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "2908:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2958:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2958:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2969:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2969:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2954:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2954:3:9"
																		},
																		"nativeSrc": "2954:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2954:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2974:31:9",
																		"nodeType": "YulLiteral",
																		"src": "2974:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2947:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:9"
																},
																"nativeSrc": "2947:59:9",
																"nodeType": "YulFunctionCall",
																"src": "2947:59:9"
															},
															"nativeSrc": "2947:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "2947:59:9"
														},
														{
															"nativeSrc": "3015:26:9",
															"nodeType": "YulAssignment",
															"src": "3015:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3027:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3038:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3038:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3023:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3023:3:9"
																},
																"nativeSrc": "3023:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3023:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3015:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3015:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2694:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2845:9:9",
														"nodeType": "YulTypedName",
														"src": "2845:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2859:4:9",
														"nodeType": "YulTypedName",
														"src": "2859:4:9",
														"type": ""
													}
												],
												"src": "2694:353:9"
											},
											{
												"body": {
													"nativeSrc": "3173:297:9",
													"nodeType": "YulBlock",
													"src": "3173:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3190:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3190:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3201:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3201:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:9"
																},
																"nativeSrc": "3183:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3183:21:9"
															},
															"nativeSrc": "3183:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "3183:21:9"
														},
														{
															"nativeSrc": "3213:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3213:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3233:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3227:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3227:5:9"
																},
																"nativeSrc": "3227:13:9",
																"nodeType": "YulFunctionCall",
																"src": "3227:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3217:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3217:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3260:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3260:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3271:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3271:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3256:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:9"
																		},
																		"nativeSrc": "3256:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3276:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3249:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:9"
																},
																"nativeSrc": "3249:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3249:34:9"
															},
															"nativeSrc": "3249:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3249:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3302:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3302:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3313:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3313:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3298:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3298:3:9"
																		},
																		"nativeSrc": "3298:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3298:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3322:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3322:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3330:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3330:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3318:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3318:3:9"
																		},
																		"nativeSrc": "3318:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3318:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3335:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3335:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "3292:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3292:5:9"
																},
																"nativeSrc": "3292:50:9",
																"nodeType": "YulFunctionCall",
																"src": "3292:50:9"
															},
															"nativeSrc": "3292:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "3292:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3366:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3366:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3377:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3377:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3362:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3362:3:9"
																				},
																				"nativeSrc": "3362:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3362:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3386:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3386:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3358:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:9"
																		},
																		"nativeSrc": "3358:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3391:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3391:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3351:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3351:6:9"
																},
																"nativeSrc": "3351:42:9",
																"nodeType": "YulFunctionCall",
																"src": "3351:42:9"
															},
															"nativeSrc": "3351:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "3351:42:9"
														},
														{
															"nativeSrc": "3402:62:9",
															"nodeType": "YulAssignment",
															"src": "3402:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3418:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3418:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3437:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "3437:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3445:2:9",
																								"nodeType": "YulLiteral",
																								"src": "3445:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3433:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3433:3:9"
																						},
																						"nativeSrc": "3433:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3433:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3454:2:9",
																								"nodeType": "YulLiteral",
																								"src": "3454:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "3450:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "3450:3:9"
																						},
																						"nativeSrc": "3450:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "3450:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3429:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:9"
																				},
																				"nativeSrc": "3429:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3429:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3414:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3414:3:9"
																		},
																		"nativeSrc": "3414:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3414:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3461:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3410:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3410:3:9"
																},
																"nativeSrc": "3410:54:9",
																"nodeType": "YulFunctionCall",
																"src": "3410:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3402:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3402:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3052:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3142:9:9",
														"nodeType": "YulTypedName",
														"src": "3142:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3153:6:9",
														"nodeType": "YulTypedName",
														"src": "3153:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3164:4:9",
														"nodeType": "YulTypedName",
														"src": "3164:4:9",
														"type": ""
													}
												],
												"src": "3052:418:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        mcopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1967: new beacon is not a con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC1967: beacon implementation i\")\n        mstore(add(headStart, 96), \"s not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052604051610687380380610687833981016040819052610022916103ed565b61002d82825f610034565b5050610513565b61003d836100f1565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e905f90a25f8251118061007c5750805b156100ec576100ea836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100e491906104af565b83610273565b505b505050565b6001600160a01b0381163b61015b5760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101cd816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101be91906104af565b6001600160a01b03163b151590565b6102325760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610152565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b606061029883836040518060600160405280602781526020016106606027913961029f565b9392505050565b60605f80856001600160a01b0316856040516102bb91906104c8565b5f60405180830381855af49150503d805f81146102f3576040519150601f19603f3d011682016040523d82523d5f602084013e6102f8565b606091505b50909250905061030a86838387610314565b9695505050505050565b606083156103825782515f0361037b576001600160a01b0385163b61037b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610152565b508161038c565b61038c8383610394565b949350505050565b8151156103a45781518083602001fd5b8060405162461bcd60e51b815260040161015291906104de565b80516001600160a01b03811681146103d4575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156103fe575f80fd5b610407836103be565b60208401519092506001600160401b03811115610422575f80fd5b8301601f81018513610432575f80fd5b80516001600160401b0381111561044b5761044b6103d9565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610479576104796103d9565b604052818152828201602001871015610490575f80fd5b8160208401602083015e5f602083830101528093505050509250929050565b5f602082840312156104bf575f80fd5b610298826103be565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b610140806105205f395ff3fe60806040523661001357610011610017565b005b6100115b610027610022610029565b6100bf565b565b5f61005b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ba91906100dd565b905090565b365f80375f80365f845af43d5f803e8080156100d9573d5ff35b3d5ffd5b5f602082840312156100ed575f80fd5b81516001600160a01b0381168114610103575f80fd5b939250505056fea264697066735822122015e9752820a52ddad21ef1f500522b2d534f78d3ff8a2ec43d2d9ffadb796b6264736f6c634300081a0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x687 CODESIZE SUB DUP1 PUSH2 0x687 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x2D DUP3 DUP3 PUSH0 PUSH2 0x34 JUMP JUMPDEST POP POP PUSH2 0x513 JUMP JUMPDEST PUSH2 0x3D DUP4 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH0 SWAP1 LOG2 PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x7C JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xEC JUMPI PUSH2 0xEA DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST DUP4 PUSH2 0x273 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x15B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x152 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x298 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x660 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x29F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x4C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x30A DUP7 DUP4 DUP4 DUP8 PUSH2 0x314 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x382 JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x37B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x152 JUMP JUMPDEST POP DUP2 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x38C DUP4 DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3A4 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x4DE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x407 DUP4 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x422 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x44B JUMPI PUSH2 0x44B PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x479 JUMPI PUSH2 0x479 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x298 DUP3 PUSH2 0x3BE JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140 DUP1 PUSH2 0x520 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x29 JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5B PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE9 PUSH22 0x2820A52DDAD21EF1F500522B2D534F78D3FF8A2EC43D 0x2D SWAP16 STATICCALL 0xDB PUSH26 0x6B6264736F6C634300081A0033416464726573733A206C6F772D PUSH13 0x6576656C2064656C6567617465 KECCAK256 PUSH4 0x616C6C20 PUSH7 0x61696C65640000 ",
							"sourceMap": "580:1515:4:-:0;;;1060:116;;;;;;;;;;;;;;;;;;:::i;:::-;1125:44;1149:6;1157:4;1163:5;1125:23;:44::i;:::-;1060:116;;580:1515;;5728:313:2;5834:21;5845:9;5834:10;:21::i;:::-;5870:25;;-1:-1:-1;;;;;5870:25:2;;;;;;;;5923:1;5909:4;:11;:15;:28;;;;5928:9;5909:28;5905:130;;;5953:71;5990:9;-1:-1:-1;;;;;5982:33:2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6019:4;5953:28;:71::i;:::-;;5905:130;5728:313;;;:::o;5054:371::-;-1:-1:-1;;;;;1702:19:6;;;5111:79:2;;;;-1:-1:-1;;;5111:79:2;;1767:2:9;5111:79:2;;;1749:21:9;1806:2;1786:18;;;1779:30;1845:34;1825:18;;;1818:62;-1:-1:-1;;;1896:18:9;;;1889:35;1941:19;;5111:79:2;;;;;;;;;5221:55;5248:9;-1:-1:-1;;;;;5240:33:2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1702:19:6;;:23;;;1412:320;5221:55:2;5200:150;;;;-1:-1:-1;;;5200:150:2;;2173:2:9;5200:150:2;;;2155:21:9;2212:2;2192:18;;;2185:30;2251:34;2231:18;;;2224:62;-1:-1:-1;;;2302:18:9;;;2295:46;2358:19;;5200:150:2;1971:412:9;5200:150:2;4719:66;5360:58;;-1:-1:-1;;;;;;5360:58:2;-1:-1:-1;;;;;5360:58:2;;;;;;;;;;5054:371::o;6674:198:6:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:6:o;7058:325::-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:6;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:6;;-1:-1:-1;7223:67:6;-1:-1:-1;7307:69:6;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:6:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:6;;;8113:60;;;;-1:-1:-1;;;8113:60:6;;2896:2:9;8113:60:6;;;2878:21:9;2935:2;2915:18;;;2908:30;2974:31;2954:18;;;2947:59;3023:18;;8113:60:6;2694:353:9;8113:60:6;-1:-1:-1;8208:10:6;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:6;;;;;;;;:::i;14:177:9:-;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1019;416:6;424;477:2;465:9;456:7;452:23;448:32;445:52;;;493:1;490;483:12;445:52;516:40;546:9;516:40;:::i;:::-;600:2;585:18;;579:25;506:50;;-1:-1:-1;;;;;;616:30:9;;613:50;;;659:1;656;649:12;613:50;682:22;;735:4;727:13;;723:27;-1:-1:-1;713:55:9;;764:1;761;754:12;713:55;791:9;;-1:-1:-1;;;;;812:30:9;;809:56;;;845:18;;:::i;:::-;894:2;888:9;986:2;948:17;;-1:-1:-1;;944:31:9;;;977:2;940:40;936:54;924:67;;-1:-1:-1;;;;;1006:34:9;;1042:22;;;1003:62;1000:88;;;1068:18;;:::i;:::-;1104:2;1097:22;1128;;;1169:15;;;1186:2;1165:24;1162:37;-1:-1:-1;1159:57:9;;;1212:1;1209;1202:12;1159:57;1261:6;1256:2;1252;1248:11;1243:2;1235:6;1231:15;1225:43;1314:1;1309:2;1300:6;1292;1288:19;1284:28;1277:39;1335:6;1325:16;;;;;328:1019;;;;;:::o;1352:208::-;1422:6;1475:2;1463:9;1454:7;1450:23;1446:32;1443:52;;;1491:1;1488;1481:12;1443:52;1514:40;1544:9;1514:40;:::i;2388:301::-;2517:3;2555:6;2549:13;2601:6;2594:4;2586:6;2582:17;2577:3;2571:37;2663:1;2627:16;;2652:13;;;-1:-1:-1;2627:16:9;2388:301;-1:-1:-1;2388:301:9:o;3052:418::-;3201:2;3190:9;3183:21;3164:4;3233:6;3227:13;3276:6;3271:2;3260:9;3256:18;3249:34;3335:6;3330:2;3322:6;3318:15;3313:2;3302:9;3298:18;3292:50;3391:1;3386:2;3377:6;3366:9;3362:22;3358:31;3351:42;3461:2;3454;3450:7;3445:2;3437:6;3433:15;3429:29;3418:9;3414:45;3410:54;3402:62;;;3052:418;;;;:::o;:::-;580:1515:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_345": {
									"entryPoint": 191,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_364": {
									"entryPoint": 23,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBeacon_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_436": {
									"entryPoint": 41,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:9",
										"nodeType": "YulBlock",
										"src": "0:306:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:9",
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:9",
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:9",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:9",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nativeSrc": "143:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nativeSrc": "143:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nativeSrc": "112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nativeSrc": "108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nativeSrc": "105:52:9",
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nativeSrc": "166:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nativeSrc": "179:16:9",
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:9",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:9",
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:9",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:9",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nativeSrc": "260:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nativeSrc": "260:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:9",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:9",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nativeSrc": "239:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:9",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nativeSrc": "235:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nativeSrc": "224:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nativeSrc": "214:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nativeSrc": "207:50:9",
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nativeSrc": "204:70:9",
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nativeSrc": "283:15:9",
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:9",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:9",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:9",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:9",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b610027610022610029565b6100bf565b565b5f61005b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ba91906100dd565b905090565b365f80375f80365f845af43d5f803e8080156100d9573d5ff35b3d5ffd5b5f602082840312156100ed575f80fd5b81516001600160a01b0381168114610103575f80fd5b939250505056fea264697066735822122015e9752820a52ddad21ef1f500522b2d534f78d3ff8a2ec43d2d9ffadb796b6264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x29 JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5B PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xE9 PUSH22 0x2820A52DDAD21EF1F500522B2D534F78D3FF8A2EC43D 0x2D SWAP16 STATICCALL 0xDB PUSH26 0x6B6264736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "580:1515:4:-:0;;;;;;2898:11:3;:9;:11::i;:::-;580:1515:4;;2675:11:3;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;1444:138:4:-;1511:7;1545:12;4719:66:2;4919:46;-1:-1:-1;;;;;4919:46:2;;4848:124;1545:12:4;-1:-1:-1;;;;;1537:36:4;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:45;;1444:138;:::o;948:895:3:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;14:290:9;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "64000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_beacon()": "infinite",
								"_implementation()": "infinite",
								"_setBeacon(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1060,
									"end": 1176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1149,
									"end": 1155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1163,
									"end": 1168,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1125,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 5845,
									"end": 5854,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 5834,
									"end": 5855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 2,
									"value": "1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 5923,
									"end": 5924,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5920,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5924,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5990,
									"end": 5999,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "PUSH",
									"source": 2,
									"value": "5C60DA1B"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 5982,
									"end": 6017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6019,
									"end": 6023,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 5953,
									"end": 6024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1767,
									"end": 1769,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1749,
									"end": 1770,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "PUSH",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1786,
									"end": 1804,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1786,
									"end": 1804,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1786,
									"end": 1804,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1779,
									"end": 1809,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1845,
									"end": 1879,
									"name": "PUSH",
									"source": 9,
									"value": "455243313936373A206E657720626561636F6E206973206E6F74206120636F6E"
								},
								{
									"begin": 1825,
									"end": 1843,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1825,
									"end": 1843,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1843,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1880,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1914,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1896,
									"end": 1914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 1914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1924,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1941,
									"end": 1960,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1941,
									"end": 1960,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 5248,
									"end": 5257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "PUSH",
									"source": 2,
									"value": "5C60DA1B"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 5240,
									"end": 5275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2173,
									"end": 2175,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2155,
									"end": 2176,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2212,
									"end": 2214,
									"name": "PUSH",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2192,
									"end": 2210,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2192,
									"end": 2210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2210,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2185,
									"end": 2215,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2285,
									"name": "PUSH",
									"source": 9,
									"value": "455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069"
								},
								{
									"begin": 2231,
									"end": 2249,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2231,
									"end": 2249,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2231,
									"end": 2249,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1CC81B9BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2302,
									"end": 2320,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 2302,
									"end": 2320,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2302,
									"end": 2320,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2295,
									"end": 2341,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2358,
									"end": 2377,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2358,
									"end": 2377,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1971,
									"end": 2383,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4719,
									"end": 4785,
									"name": "PUSH",
									"source": 2,
									"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5054,
									"end": 5425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6757,
									"end": 6769,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 6809,
									"end": 6815,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6817,
									"end": 6821,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH data",
									"source": 6,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 6788,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6781,
									"end": 6865,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6674,
									"end": 6872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7199,
									"end": 7211,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7224,
									"end": 7236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7238,
									"end": 7261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7265,
									"end": 7284,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7285,
									"end": 7289,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 7265,
									"end": 7290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DELEGATECALL",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7334,
									"end": 7340,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7375,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 7307,
									"end": 7333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7307,
									"end": 7376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7300,
									"end": 7376,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7058,
									"end": 7383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7851,
									"end": 7863,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7879,
									"end": 7886,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7906,
									"end": 7916,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7906,
									"end": 7923,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7906,
									"end": 7928,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2898,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2878,
									"end": 2899,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2935,
									"end": 2937,
									"name": "PUSH",
									"source": 9,
									"value": "1D"
								},
								{
									"begin": 2915,
									"end": 2933,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2915,
									"end": 2933,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2915,
									"end": 2933,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2908,
									"end": 2938,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2974,
									"end": 3005,
									"name": "PUSH",
									"source": 9,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 2954,
									"end": 2972,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2954,
									"end": 2972,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2954,
									"end": 2972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2947,
									"end": 3006,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3023,
									"end": 3041,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3023,
									"end": 3041,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2694,
									"end": 3047,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8208,
									"end": 8218,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 8257,
									"end": 8267,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8269,
									"end": 8281,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 8249,
									"end": 8282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8980,
									"end": 9001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9208,
									"end": 9218,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9202,
									"end": 9219,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9264,
									"end": 9279,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9251,
									"end": 9261,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9247,
									"end": 9249,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9243,
									"end": 9262,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9236,
									"end": 9280,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9331,
									"end": 9343,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 9324,
									"end": 9344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 416,
									"end": 422,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 430,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 477,
									"end": 479,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 465,
									"end": 474,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 456,
									"end": 463,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 452,
									"end": 475,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 445,
									"end": 497,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 445,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 445,
									"end": 497,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 493,
									"end": 494,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 491,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 483,
									"end": 495,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 445,
									"end": 497,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 445,
									"end": 497,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 516,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 546,
									"end": 555,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 516,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 516,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 516,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 516,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 600,
									"end": 602,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 585,
									"end": 603,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 585,
									"end": 603,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 579,
									"end": 604,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 506,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 506,
									"end": 556,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 616,
									"end": 646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 616,
									"end": 646,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 613,
									"end": 663,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 613,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 613,
									"end": 663,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 659,
									"end": 660,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 657,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 649,
									"end": 661,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 613,
									"end": 663,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 613,
									"end": 663,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 682,
									"end": 704,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 682,
									"end": 704,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 735,
									"end": 739,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 727,
									"end": 740,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 727,
									"end": 740,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 723,
									"end": 750,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SGT",
									"source": -1
								},
								{
									"begin": 713,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 713,
									"end": 768,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 762,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 754,
									"end": 766,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 713,
									"end": 768,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 713,
									"end": 768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 791,
									"end": 800,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 791,
									"end": 800,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 812,
									"end": 842,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 812,
									"end": 842,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 809,
									"end": 865,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 809,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 809,
									"end": 865,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 845,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 845,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 845,
									"end": 863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 863,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 845,
									"end": 863,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 894,
									"end": 896,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 888,
									"end": 897,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 986,
									"end": 988,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 948,
									"end": 965,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 948,
									"end": 965,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 944,
									"end": 975,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 944,
									"end": 975,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 944,
									"end": 975,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 977,
									"end": 979,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 940,
									"end": 980,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 936,
									"end": 990,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 924,
									"end": 991,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 924,
									"end": 991,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1006,
									"end": 1040,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1006,
									"end": 1040,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1042,
									"end": 1064,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1042,
									"end": 1064,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1042,
									"end": 1064,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1003,
									"end": 1065,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1088,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 1000,
									"end": 1088,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1068,
									"end": 1086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 1068,
									"end": 1086,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1106,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 1119,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1150,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1150,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1150,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1184,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1184,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1184,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1186,
									"end": 1188,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1165,
									"end": 1189,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1199,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1159,
									"end": 1216,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 1159,
									"end": 1216,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1216,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 1159,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1267,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1258,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1254,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1248,
									"end": 1259,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1243,
									"end": 1245,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1235,
									"end": 1241,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1225,
									"end": 1268,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1314,
									"end": 1315,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1311,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1300,
									"end": 1306,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1288,
									"end": 1307,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1284,
									"end": 1312,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1316,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1341,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1341,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1341,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1341,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1341,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 328,
									"end": 1347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1352,
									"end": 1560,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1352,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1428,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1475,
									"end": 1477,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1454,
									"end": 1461,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1446,
									"end": 1478,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1443,
									"end": 1495,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1443,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1443,
									"end": 1495,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1491,
									"end": 1492,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1488,
									"end": 1489,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1481,
									"end": 1493,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1443,
									"end": 1495,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1443,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1544,
									"end": 1553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1514,
									"end": 1554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2388,
									"end": 2689,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2388,
									"end": 2689,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2520,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2601,
									"end": 2607,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2586,
									"end": 2592,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2582,
									"end": 2599,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2577,
									"end": 2580,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2571,
									"end": 2608,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2643,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2627,
									"end": 2643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2652,
									"end": 2665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2652,
									"end": 2665,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2652,
									"end": 2665,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2627,
									"end": 2643,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2388,
									"end": 2689,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2388,
									"end": 2689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3201,
									"end": 3203,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3190,
									"end": 3199,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3204,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3164,
									"end": 3168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3233,
									"end": 3239,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3240,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3276,
									"end": 3282,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3271,
									"end": 3273,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3260,
									"end": 3269,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3256,
									"end": 3274,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3249,
									"end": 3283,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3335,
									"end": 3341,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3330,
									"end": 3332,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3322,
									"end": 3328,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3318,
									"end": 3333,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3313,
									"end": 3315,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3302,
									"end": 3311,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3316,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3292,
									"end": 3342,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 3391,
									"end": 3392,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3386,
									"end": 3388,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3377,
									"end": 3383,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3366,
									"end": 3375,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3362,
									"end": 3384,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3358,
									"end": 3389,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3351,
									"end": 3393,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3461,
									"end": 3463,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3454,
									"end": 3456,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3450,
									"end": 3457,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3445,
									"end": 3447,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3433,
									"end": 3448,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3458,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3418,
									"end": 3427,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3414,
									"end": 3459,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3464,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3464,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3402,
									"end": 3464,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3052,
									"end": 3470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 2095,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015e9752820a52ddad21ef1f500522b2d534f78d3ff8a2ec43d2d9ffadb796b6264736f6c634300081a0033",
									".code": [
										{
											"begin": 580,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4719,
											"end": 4785,
											"name": "PUSH",
											"source": 2,
											"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "5C60DA1B"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1537,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14,
											"end": 304,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 214,
											"end": 256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 256,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 272,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 274,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 293,
											"end": 298,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"GemNFT/Proxy/BeaconProxyNFTfactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220677c1d4d23a9fe92282601cbac75fb45f8a2e2e16923e2f66bd0b6128349462c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220677c1d4d23a9fe92282601cbac75fb45f8a2e2e16923e2f66bd0b6128349462c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x7C1D4D23A9FE9228 0x26 ADD 0xCB 0xAC PUSH22 0xFB45F8A2E2E16923E2F66BD0B6128349462C64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220677c1d4d23a9fe92282601cbac75fb45f8a2e2e16923e2f66bd0b6128349462c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x7C1D4D23A9FE9228 0x26 ADD 0xCB 0xAC PUSH22 0xFB45F8A2E2E16923E2F66BD0B6128349462C64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220677c1d4d23a9fe92282601cbac75fb45f8a2e2e16923e2f66bd0b6128349462c64736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"GemNFT/Proxy/BeaconProxyNFTfactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9a3771e501e54bba1b6ebd441d4d95df78c2be039006f7b21ee03ff6960679264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e9a3771e501e54bba1b6ebd441d4d95df78c2be039006f7b21ee03ff6960679264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG3 PUSH24 0x1E501E54BBA1B6EBD441D4D95DF78C2BE039006F7B21EE03 SELFDESTRUCT PUSH10 0x60679264736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1420:2685:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e9a3771e501e54bba1b6ebd441d4d95df78c2be039006f7b21ee03ff6960679264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG3 PUSH24 0x1E501E54BBA1B6EBD441D4D95DF78C2BE039006F7B21EE03 SELFDESTRUCT PUSH10 0x60679264736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1420:2685:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9a3771e501e54bba1b6ebd441d4d95df78c2be039006f7b21ee03ff6960679264736f6c634300081a0033",
									".code": [
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"GemNFT/Proxy/BeaconProxyNFTfactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GemNFT/Proxy/BeaconProxyNFTfactory.sol": {
				"nftCollectionBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":128:232  contract nftCollectionBeacon is BeaconProxy{... */\n  mstore(0x40, 0x80)\n    /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":177:229  constructor(address beacon) BeaconProxy(beacon,\"\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":217:223  beacon */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  tag_7\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1149:1155  beacon */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1157:1161  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1163:1168  false */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1148  _upgradeBeaconToAndCall */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1125:1169  _upgradeBeaconToAndCall(beacon, data, false) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1060:1176  constructor(address beacon, bytes memory data) payable {... */\n  pop\n  pop\n    /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":177:229  constructor(address beacon) BeaconProxy(beacon,\"\"){} */\n  pop\n    /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":128:232  contract nftCollectionBeacon is BeaconProxy{... */\n  jump(tag_64)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\ntag_8:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  tag_12\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5845:5854  newBeacon */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5844  _setBeacon */\n  tag_13\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5834:5855  _setBeacon(newBeacon) */\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5870:5895  BeaconUpgraded(newBeacon) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5923:5924  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5913  data */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5920  data.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5924  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\n  dup1\n  tag_14\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5928:5937  forceCall */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5909:5937  data.length > 0 || forceCall */\ntag_14:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  tag_16\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5990:5999  newBeacon */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6015  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5982:6017  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_18\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_18:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_19\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":6019:6023  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:5981  Address.functionDelegateCall */\n  tag_20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5953:6024  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5905:6035  if (data.length > 0 || forceCall) {... */\ntag_15:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5728:6041  function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\ntag_13:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  dup2\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x25\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:623   */\n  0x455243313936373a206e657720626561636f6e206973206e6f74206120636f6e\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:624   */\n  mstore\n  shl(0xda, 0x1d1c9858dd)\n    /* \"#utility.yul\":640:658   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":633:668   */\n  mstore\n    /* \"#utility.yul\":685:704   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5111:5190  require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\") */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\n  tag_27\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5248:5257  newBeacon */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5273  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5240:5275  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_29\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_29:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_30\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1725  account.code.length > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5221:5276  Address.isContract(IBeacon(newBeacon).implementation()) */\ntag_27:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":917:919   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":899:920   */\n  mstore\n    /* \"#utility.yul\":956:958   */\n  0x30\n    /* \"#utility.yul\":936:954   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":929:959   */\n  mstore\n    /* \"#utility.yul\":995:1029   */\n  0x455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069\n    /* \"#utility.yul\":975:993   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":968:1030   */\n  mstore\n  shl(0x82, 0x1cc81b9bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":1046:1064   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1039:1085   */\n  mstore\n    /* \"#utility.yul\":1102:1121   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\n  tag_25\n    /* \"#utility.yul\":715:1127   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5200:5350  require(... */\ntag_31:\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5360:5418  StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":5054:5425  function _setBeacon(address newBeacon) private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_20:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6757:6769  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_37\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6809:6815  target */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6817:6821  data */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6808  functionDelegateCall */\n  tag_38\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\ntag_38:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7199:7211  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7224:7236  bool success */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7238:7261  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7271  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7284  target.delegatecall */\n  and\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7285:7289  data */\n  dup6\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_46\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_45)\ntag_46:\n  0x60\n  swap2\n  pop\ntag_45:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_47\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7334:7340  target */\n  dup7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7363:7375  errorMessage */\n  dup8\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n  tag_48\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap7\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\ntag_48:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7851:7863  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7879:7886  success */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\n  iszero\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7916  returndata */\n  dup3\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7923  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7927:7928  0 */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7906:7928  returndata.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n  tag_53\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":1702:1721  account.code.length */\n  dup6\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_53\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1622:1643   */\n  mstore\n    /* \"#utility.yul\":1679:1681   */\n  0x1d\n    /* \"#utility.yul\":1659:1677   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1652:1682   */\n  mstore\n    /* \"#utility.yul\":1718:1749   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":1698:1716   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1691:1750   */\n  mstore\n    /* \"#utility.yul\":1767:1785   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_25\n    /* \"#utility.yul\":1438:1791   */\n  jump\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\ntag_53:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8208:8218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8201:8218  return returndata */\n  jump(tag_57)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7875:8293  if (success) {... */\ntag_50:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  tag_57\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8257:8267  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8269:8281  errorMessage */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8256  _revert */\n  tag_58\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  jump\t// in\ntag_57:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_58:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:8997  returndata.length */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8980:9001  returndata.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9208:9218  returndata */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9202:9219  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9264:9279  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9251:9261  returndata */\n  dup4\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9247:9249  32 */\n  0x20\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9243:9262  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\ntag_60:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9331:9343  errorMessage */\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/utils/Address.sol\":9324:9344  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_63\n  jump\t// in\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_66:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":1132:1433   */\ntag_43:\n    /* \"#utility.yul\":1261:1264   */\n  0x00\n    /* \"#utility.yul\":1299:1305   */\n  dup3\n    /* \"#utility.yul\":1293:1306   */\n  mload\n    /* \"#utility.yul\":1345:1351   */\n  dup1\n    /* \"#utility.yul\":1338:1342   */\n  0x20\n    /* \"#utility.yul\":1330:1336   */\n  dup6\n    /* \"#utility.yul\":1326:1343   */\n  add\n    /* \"#utility.yul\":1321:1324   */\n  dup5\n    /* \"#utility.yul\":1315:1352   */\n  mcopy\n    /* \"#utility.yul\":1407:1408   */\n  0x00\n    /* \"#utility.yul\":1371:1387   */\n  swap3\n  add\n    /* \"#utility.yul\":1396:1409   */\n  swap2\n  dup3\n  mstore\n  pop\n    /* \"#utility.yul\":1371:1387   */\n  swap2\n    /* \"#utility.yul\":1132:1433   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2214   */\ntag_63:\n    /* \"#utility.yul\":1945:1947   */\n  0x20\n    /* \"#utility.yul\":1934:1943   */\n  dup2\n    /* \"#utility.yul\":1927:1948   */\n  mstore\n    /* \"#utility.yul\":1908:1912   */\n  0x00\n    /* \"#utility.yul\":1977:1983   */\n  dup3\n    /* \"#utility.yul\":1971:1984   */\n  mload\n    /* \"#utility.yul\":2020:2026   */\n  dup1\n    /* \"#utility.yul\":2015:2017   */\n  0x20\n    /* \"#utility.yul\":2004:2013   */\n  dup5\n    /* \"#utility.yul\":2000:2018   */\n  add\n    /* \"#utility.yul\":1993:2027   */\n  mstore\n    /* \"#utility.yul\":2079:2085   */\n  dup1\n    /* \"#utility.yul\":2074:2076   */\n  0x20\n    /* \"#utility.yul\":2066:2072   */\n  dup6\n    /* \"#utility.yul\":2062:2077   */\n  add\n    /* \"#utility.yul\":2057:2059   */\n  0x40\n    /* \"#utility.yul\":2046:2055   */\n  dup6\n    /* \"#utility.yul\":2042:2060   */\n  add\n    /* \"#utility.yul\":2036:2086   */\n  mcopy\n    /* \"#utility.yul\":2135:2136   */\n  0x00\n    /* \"#utility.yul\":2130:2132   */\n  0x40\n    /* \"#utility.yul\":2121:2127   */\n  dup3\n    /* \"#utility.yul\":2110:2119   */\n  dup6\n    /* \"#utility.yul\":2106:2128   */\n  add\n    /* \"#utility.yul\":2102:2133   */\n  add\n    /* \"#utility.yul\":2095:2137   */\n  mstore\n    /* \"#utility.yul\":2205:2207   */\n  0x40\n    /* \"#utility.yul\":2198:2200   */\n  0x1f\n    /* \"#utility.yul\":2194:2201   */\n  not\n    /* \"#utility.yul\":2189:2191   */\n  0x1f\n    /* \"#utility.yul\":2181:2187   */\n  dup4\n    /* \"#utility.yul\":2177:2192   */\n  add\n    /* \"#utility.yul\":2173:2202   */\n  and\n    /* \"#utility.yul\":2162:2171   */\n  dup5\n    /* \"#utility.yul\":2158:2203   */\n  add\n    /* \"#utility.yul\":2154:2208   */\n  add\n    /* \"#utility.yul\":2146:2208   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1796:2214   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_64:\n    /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":128:232  contract nftCollectionBeacon is BeaconProxy{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":128:232  contract nftCollectionBeacon is BeaconProxy{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":128:232  contract nftCollectionBeacon is BeaconProxy{... */\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_13\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_14\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_15\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_14:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_16\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_13:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1511:1518  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n      tag_19\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4719:4785  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n      0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4919:4965  StorageSlot.getAddressSlot(_BEACON_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":4848:4972  function _getBeacon() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1545:1557  _getBeacon() */\n    tag_19:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1573  IBeacon(_getBeacon()).implementation */\n      and\n      0x5c60da1b\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1537:1575  IBeacon(_getBeacon()).implementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1530:1575  return IBeacon(_getBeacon()).implementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":1444:1582  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_27\n      jumpi\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_27:\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"#utility.yul\":14:304   */\n    tag_24:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_34:\n        /* \"#utility.yul\":179:195   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:255   */\n      dup2\n      and\n        /* \"#utility.yul\":214:256   */\n      dup2\n      eq\n        /* \"#utility.yul\":204:274   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":270:271   */\n      0x00\n        /* \"#utility.yul\":267:268   */\n      dup1\n        /* \"#utility.yul\":260:272   */\n      revert\n        /* \"#utility.yul\":204:274   */\n    tag_35:\n        /* \"#utility.yul\":293:298   */\n      swap4\n        /* \"#utility.yul\":14:304   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220923622d59602fb83822347af98a5160194ceeb901b4ce62ef5d60dbf5db519c764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_917": {
									"entryPoint": null,
									"id": 917,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revert_791": {
									"entryPoint": 951,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setBeacon_295": {
									"entryPoint": 276,
									"id": 295,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeBeaconToAndCall_333": {
									"entryPoint": 87,
									"id": 333,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@functionDelegateCall_679": {
									"entryPoint": 662,
									"id": 679,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_708": {
									"entryPoint": 706,
									"id": 708,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_747": {
									"entryPoint": 823,
									"id": 747,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2216:9",
										"nodeType": "YulBlock",
										"src": "0:2216:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:9",
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:9",
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:9",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:9",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nativeSrc": "143:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nativeSrc": "143:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nativeSrc": "112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nativeSrc": "108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nativeSrc": "105:52:9",
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nativeSrc": "166:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nativeSrc": "179:16:9",
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:9",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:9",
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:9",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:9",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nativeSrc": "260:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nativeSrc": "260:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:9",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:9",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nativeSrc": "239:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:9",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nativeSrc": "235:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nativeSrc": "224:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nativeSrc": "214:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nativeSrc": "207:50:9",
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nativeSrc": "204:70:9",
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nativeSrc": "283:15:9",
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:9",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:9",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:9",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:9",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											},
											{
												"body": {
													"nativeSrc": "483:227:9",
													"nodeType": "YulBlock",
													"src": "483:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "500:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:2:9",
																		"nodeType": "YulLiteral",
																		"src": "511:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "493:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:9"
																},
																"nativeSrc": "493:21:9",
																"nodeType": "YulFunctionCall",
																"src": "493:21:9"
															},
															"nativeSrc": "493:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "493:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "534:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "545:2:9",
																				"nodeType": "YulLiteral",
																				"src": "545:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "530:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:9"
																		},
																		"nativeSrc": "530:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:9",
																		"nodeType": "YulLiteral",
																		"src": "550:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:9"
																},
																"nativeSrc": "523:30:9",
																"nodeType": "YulFunctionCall",
																"src": "523:30:9"
															},
															"nativeSrc": "523:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "523:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "573:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "584:2:9",
																				"nodeType": "YulLiteral",
																				"src": "584:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "569:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:9"
																		},
																		"nativeSrc": "569:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:9"
																	},
																	{
																		"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e",
																		"kind": "string",
																		"nativeSrc": "589:34:9",
																		"nodeType": "YulLiteral",
																		"src": "589:34:9",
																		"type": "",
																		"value": "ERC1967: new beacon is not a con"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "562:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:9"
																},
																"nativeSrc": "562:62:9",
																"nodeType": "YulFunctionCall",
																"src": "562:62:9"
															},
															"nativeSrc": "562:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "562:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "644:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "644:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "655:2:9",
																				"nodeType": "YulLiteral",
																				"src": "655:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "640:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "640:3:9"
																		},
																		"nativeSrc": "640:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "640:18:9"
																	},
																	{
																		"hexValue": "7472616374",
																		"kind": "string",
																		"nativeSrc": "660:7:9",
																		"nodeType": "YulLiteral",
																		"src": "660:7:9",
																		"type": "",
																		"value": "tract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "633:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:9"
																},
																"nativeSrc": "633:35:9",
																"nodeType": "YulFunctionCall",
																"src": "633:35:9"
															},
															"nativeSrc": "633:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "633:35:9"
														},
														{
															"nativeSrc": "677:27:9",
															"nodeType": "YulAssignment",
															"src": "677:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "689:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "700:3:9",
																		"nodeType": "YulLiteral",
																		"src": "700:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "685:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "685:3:9"
																},
																"nativeSrc": "685:19:9",
																"nodeType": "YulFunctionCall",
																"src": "685:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "677:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "677:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "309:401:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "460:9:9",
														"nodeType": "YulTypedName",
														"src": "460:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "474:4:9",
														"nodeType": "YulTypedName",
														"src": "474:4:9",
														"type": ""
													}
												],
												"src": "309:401:9"
											},
											{
												"body": {
													"nativeSrc": "889:238:9",
													"nodeType": "YulBlock",
													"src": "889:238:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "906:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "906:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "917:2:9",
																		"nodeType": "YulLiteral",
																		"src": "917:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "899:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:9"
																},
																"nativeSrc": "899:21:9",
																"nodeType": "YulFunctionCall",
																"src": "899:21:9"
															},
															"nativeSrc": "899:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "899:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:2:9",
																				"nodeType": "YulLiteral",
																				"src": "951:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "936:3:9"
																		},
																		"nativeSrc": "936:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "936:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "956:2:9",
																		"nodeType": "YulLiteral",
																		"src": "956:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "929:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "929:6:9"
																},
																"nativeSrc": "929:30:9",
																"nodeType": "YulFunctionCall",
																"src": "929:30:9"
															},
															"nativeSrc": "929:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "929:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "979:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "990:2:9",
																				"nodeType": "YulLiteral",
																				"src": "990:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "975:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:9"
																		},
																		"nativeSrc": "975:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "975:18:9"
																	},
																	{
																		"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069",
																		"kind": "string",
																		"nativeSrc": "995:34:9",
																		"nodeType": "YulLiteral",
																		"src": "995:34:9",
																		"type": "",
																		"value": "ERC1967: beacon implementation i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "968:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "968:6:9"
																},
																"nativeSrc": "968:62:9",
																"nodeType": "YulFunctionCall",
																"src": "968:62:9"
															},
															"nativeSrc": "968:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "968:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1050:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1050:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1061:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1061:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:9"
																		},
																		"nativeSrc": "1046:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:18:9"
																	},
																	{
																		"hexValue": "73206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "1066:18:9",
																		"nodeType": "YulLiteral",
																		"src": "1066:18:9",
																		"type": "",
																		"value": "s not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1039:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1039:6:9"
																},
																"nativeSrc": "1039:46:9",
																"nodeType": "YulFunctionCall",
																"src": "1039:46:9"
															},
															"nativeSrc": "1039:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "1039:46:9"
														},
														{
															"nativeSrc": "1094:27:9",
															"nodeType": "YulAssignment",
															"src": "1094:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1106:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1106:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1117:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1117:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1102:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:9"
																},
																"nativeSrc": "1102:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1102:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1094:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1094:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "715:412:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "866:9:9",
														"nodeType": "YulTypedName",
														"src": "866:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "880:4:9",
														"nodeType": "YulTypedName",
														"src": "880:4:9",
														"type": ""
													}
												],
												"src": "715:412:9"
											},
											{
												"body": {
													"nativeSrc": "1269:164:9",
													"nodeType": "YulBlock",
													"src": "1269:164:9",
													"statements": [
														{
															"nativeSrc": "1279:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1279:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1299:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1293:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1293:5:9"
																},
																"nativeSrc": "1293:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1293:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1283:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1283:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1321:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1321:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1330:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1330:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1338:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1338:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1326:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1326:3:9"
																		},
																		"nativeSrc": "1326:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1326:17:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1345:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1315:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1315:5:9"
																},
																"nativeSrc": "1315:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1315:37:9"
															},
															"nativeSrc": "1315:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1315:37:9"
														},
														{
															"nativeSrc": "1361:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1361:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1375:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1375:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1380:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1380:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1371:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1371:3:9"
																},
																"nativeSrc": "1371:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1371:16:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1365:2:9",
																	"nodeType": "YulTypedName",
																	"src": "1365:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1403:2:9",
																		"nodeType": "YulIdentifier",
																		"src": "1403:2:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1407:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1407:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1396:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:9"
																},
																"nativeSrc": "1396:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1396:13:9"
															},
															"nativeSrc": "1396:13:9",
															"nodeType": "YulExpressionStatement",
															"src": "1396:13:9"
														},
														{
															"nativeSrc": "1418:9:9",
															"nodeType": "YulAssignment",
															"src": "1418:9:9",
															"value": {
																"name": "_1",
																"nativeSrc": "1425:2:9",
																"nodeType": "YulIdentifier",
																"src": "1425:2:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1418:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1132:301:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1245:3:9",
														"nodeType": "YulTypedName",
														"src": "1245:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1250:6:9",
														"nodeType": "YulTypedName",
														"src": "1250:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1261:3:9",
														"nodeType": "YulTypedName",
														"src": "1261:3:9",
														"type": ""
													}
												],
												"src": "1132:301:9"
											},
											{
												"body": {
													"nativeSrc": "1612:179:9",
													"nodeType": "YulBlock",
													"src": "1612:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1629:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1629:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1622:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:9"
																},
																"nativeSrc": "1622:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1622:21:9"
															},
															"nativeSrc": "1622:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1622:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1663:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1663:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1674:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1674:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1659:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1659:3:9"
																		},
																		"nativeSrc": "1659:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1659:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1679:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:30:9"
															},
															"nativeSrc": "1652:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1702:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1713:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1713:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1698:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:9"
																		},
																		"nativeSrc": "1698:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:18:9"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "1718:31:9",
																		"nodeType": "YulLiteral",
																		"src": "1718:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1691:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:9"
																},
																"nativeSrc": "1691:59:9",
																"nodeType": "YulFunctionCall",
																"src": "1691:59:9"
															},
															"nativeSrc": "1691:59:9",
															"nodeType": "YulExpressionStatement",
															"src": "1691:59:9"
														},
														{
															"nativeSrc": "1759:26:9",
															"nodeType": "YulAssignment",
															"src": "1759:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1771:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1771:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1782:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1782:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1767:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:3:9"
																},
																"nativeSrc": "1767:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1759:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1759:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1438:353:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1589:9:9",
														"nodeType": "YulTypedName",
														"src": "1589:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1603:4:9",
														"nodeType": "YulTypedName",
														"src": "1603:4:9",
														"type": ""
													}
												],
												"src": "1438:353:9"
											},
											{
												"body": {
													"nativeSrc": "1917:297:9",
													"nodeType": "YulBlock",
													"src": "1917:297:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1934:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1934:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1945:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1945:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1927:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1927:6:9"
																},
																"nativeSrc": "1927:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1927:21:9"
															},
															"nativeSrc": "1927:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1927:21:9"
														},
														{
															"nativeSrc": "1957:27:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1957:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1977:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1977:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1971:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1971:5:9"
																},
																"nativeSrc": "1971:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1971:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1961:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1961:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2004:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2015:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2015:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2000:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:9"
																		},
																		"nativeSrc": "2000:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2000:18:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2020:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2020:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:9"
																},
																"nativeSrc": "1993:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1993:34:9"
															},
															"nativeSrc": "1993:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1993:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2046:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2046:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2057:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2057:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2042:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:9"
																		},
																		"nativeSrc": "2042:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2042:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2066:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2074:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2074:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2062:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2062:3:9"
																		},
																		"nativeSrc": "2062:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2062:15:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2079:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2079:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2036:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2036:5:9"
																},
																"nativeSrc": "2036:50:9",
																"nodeType": "YulFunctionCall",
																"src": "2036:50:9"
															},
															"nativeSrc": "2036:50:9",
															"nodeType": "YulExpressionStatement",
															"src": "2036:50:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2110:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2110:9:9"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2121:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2121:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2106:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2106:3:9"
																				},
																				"nativeSrc": "2106:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2106:22:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2130:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2130:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2102:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:9"
																		},
																		"nativeSrc": "2102:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2102:31:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2135:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2095:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:9"
																},
																"nativeSrc": "2095:42:9",
																"nodeType": "YulFunctionCall",
																"src": "2095:42:9"
															},
															"nativeSrc": "2095:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "2095:42:9"
														},
														{
															"nativeSrc": "2146:62:9",
															"nodeType": "YulAssignment",
															"src": "2146:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2162:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2181:6:9",
																								"nodeType": "YulIdentifier",
																								"src": "2181:6:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2189:2:9",
																								"nodeType": "YulLiteral",
																								"src": "2189:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2177:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2177:3:9"
																						},
																						"nativeSrc": "2177:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2177:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2198:2:9",
																								"nodeType": "YulLiteral",
																								"src": "2198:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2194:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2194:3:9"
																						},
																						"nativeSrc": "2194:7:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2194:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2173:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2173:3:9"
																				},
																				"nativeSrc": "2173:29:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2173:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2158:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:9"
																		},
																		"nativeSrc": "2158:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2158:45:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2154:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:9"
																},
																"nativeSrc": "2154:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2154:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2146:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2146:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1796:418:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1886:9:9",
														"nodeType": "YulTypedName",
														"src": "1886:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1897:6:9",
														"nodeType": "YulTypedName",
														"src": "1897:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1908:4:9",
														"nodeType": "YulTypedName",
														"src": "1908:4:9",
														"type": ""
													}
												],
												"src": "1796:418:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1967: new beacon is not a con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC1967: beacon implementation i\")\n        mstore(add(headStart, 96), \"s not a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516105c63803806105c683398101604081905261002e916103e1565b8060405180602001604052805f81525061004f82825f61005760201b60201c565b505050610452565b61006083610114565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e905f90a25f8251118061009f5750805b1561010f5761010d836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061010791906103e1565b83610296565b505b505050565b6001600160a01b0381163b61017e5760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101f0816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101e191906103e1565b6001600160a01b03163b151590565b6102555760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610175565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b60606102bb838360405180606001604052806027815260200161059f602791396102c2565b9392505050565b60605f80856001600160a01b0316856040516102de9190610407565b5f60405180830381855af49150503d805f8114610316576040519150601f19603f3d011682016040523d82523d5f602084013e61031b565b606091505b50909250905061032d86838387610337565b9695505050505050565b606083156103a55782515f0361039e576001600160a01b0385163b61039e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610175565b50816103af565b6103af83836103b7565b949350505050565b8151156103c75781518083602001fd5b8060405162461bcd60e51b8152600401610175919061041d565b5f602082840312156103f1575f80fd5b81516001600160a01b03811681146102bb575f80fd5b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6101408061045f5f395ff3fe60806040523661001357610011610017565b005b6100115b610027610022610029565b6100bf565b565b5f61005b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ba91906100dd565b905090565b365f80375f80365f845af43d5f803e8080156100d9573d5ff35b3d5ffd5b5f602082840312156100ed575f80fd5b81516001600160a01b0381168114610103575f80fd5b939250505056fea2646970667358221220923622d59602fb83822347af98a5160194ceeb901b4ce62ef5d60dbf5db519c764736f6c634300081a0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5C6 CODESIZE SUB DUP1 PUSH2 0x5C6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x3E1 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x4F DUP3 DUP3 PUSH0 PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x452 JUMP JUMPDEST PUSH2 0x60 DUP4 PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH0 SWAP1 LOG2 PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x9F JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x10F JUMPI PUSH2 0x10D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST DUP4 PUSH2 0x296 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D1C9858DD PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x255 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1CC81B9BDD08184818DBDB9D1C9858DD PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x175 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BB DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x59F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x31B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x32D DUP7 DUP4 DUP4 DUP8 PUSH2 0x337 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3A5 JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x39E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x175 JUMP JUMPDEST POP DUP2 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x3AF DUP4 DUP4 PUSH2 0x3B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x3C7 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x140 DUP1 PUSH2 0x45F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x29 JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5B PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 CALLDATASIZE 0x22 0xD5 SWAP7 MUL 0xFB DUP4 DUP3 0x23 SELFBALANCE 0xAF SWAP9 0xA5 AND ADD SWAP5 0xCE 0xEB SWAP1 SHL 0x4C 0xE6 0x2E CREATE2 0xD6 0xD 0xBF TSTORE 0xB5 NOT 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C65640000 ",
							"sourceMap": "128:104:8:-:0;;;177:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;217:6;1060:116:4;;;;;;;;;;;;1125:44;1149:6;1157:4;1163:5;1125:23;;;:44;;:::i;:::-;1060:116;;177:52:8;128:104;;5728:313:2;5834:21;5845:9;5834:10;:21::i;:::-;5870:25;;-1:-1:-1;;;;;5870:25:2;;;;;;;;5923:1;5909:4;:11;:15;:28;;;;5928:9;5909:28;5905:130;;;5953:71;5990:9;-1:-1:-1;;;;;5982:33:2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6019:4;5953:28;:71::i;:::-;;5905:130;5728:313;;;:::o;5054:371::-;-1:-1:-1;;;;;1702:19:6;;;5111:79:2;;;;-1:-1:-1;;;5111:79:2;;511:2:9;5111:79:2;;;493:21:9;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:9;;;633:35;685:19;;5111:79:2;;;;;;;;;5221:55;5248:9;-1:-1:-1;;;;;5240:33:2;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1702:19:6;;:23;;;1412:320;5221:55:2;5200:150;;;;-1:-1:-1;;;5200:150:2;;917:2:9;5200:150:2;;;899:21:9;956:2;936:18;;;929:30;995:34;975:18;;;968:62;-1:-1:-1;;;1046:18:9;;;1039:46;1102:19;;5200:150:2;715:412:9;5200:150:2;4719:66;5360:58;;-1:-1:-1;;;;;;5360:58:2;-1:-1:-1;;;;;5360:58:2;;;;;;;;;;5054:371::o;6674:198:6:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:6:o;7058:325::-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:6;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:6;;-1:-1:-1;7223:67:6;-1:-1:-1;7307:69:6;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:6:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:6;;;8113:60;;;;-1:-1:-1;;;8113:60:6;;1640:2:9;8113:60:6;;;1622:21:9;1679:2;1659:18;;;1652:30;1718:31;1698:18;;;1691:59;1767:18;;8113:60:6;1438:353:9;8113:60:6;-1:-1:-1;8208:10:6;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:6;;;;;;;;:::i;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;1132:301;1261:3;1299:6;1293:13;1345:6;1338:4;1330:6;1326:17;1321:3;1315:37;1407:1;1371:16;;1396:13;;;-1:-1:-1;1371:16:9;1132:301;-1:-1:-1;1132:301:9:o;1796:418::-;1945:2;1934:9;1927:21;1908:4;1977:6;1971:13;2020:6;2015:2;2004:9;2000:18;1993:34;2079:6;2074:2;2066:6;2062:15;2057:2;2046:9;2042:18;2036:50;2135:1;2130:2;2121:6;2110:9;2106:22;2102:31;2095:42;2205:2;2198;2194:7;2189:2;2181:6;2177:15;2173:29;2162:9;2158:45;2154:54;2146:62;;;1796:418;;;;:::o;:::-;128:104:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_345": {
									"entryPoint": 191,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_364": {
									"entryPoint": 23,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBeacon_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_436": {
									"entryPoint": 41,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_824": {
									"entryPoint": null,
									"id": 824,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:9",
										"nodeType": "YulBlock",
										"src": "0:306:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:9",
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:9",
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:9",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:9",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nativeSrc": "143:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nativeSrc": "143:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nativeSrc": "112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nativeSrc": "108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nativeSrc": "105:52:9",
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nativeSrc": "166:29:9",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nativeSrc": "179:16:9",
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:9",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:9",
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:9",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:9",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nativeSrc": "260:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nativeSrc": "260:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:9",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:9",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nativeSrc": "239:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:9",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nativeSrc": "235:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nativeSrc": "224:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nativeSrc": "214:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nativeSrc": "207:50:9",
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nativeSrc": "204:70:9",
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nativeSrc": "283:15:9",
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:9",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:9",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:9",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:9",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b610027610022610029565b6100bf565b565b5f61005b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610096573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ba91906100dd565b905090565b365f80375f80365f845af43d5f803e8080156100d9573d5ff35b3d5ffd5b5f602082840312156100ed575f80fd5b81516001600160a01b0381168114610103575f80fd5b939250505056fea2646970667358221220923622d59602fb83822347af98a5160194ceeb901b4ce62ef5d60dbf5db519c764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x29 JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5B PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xD9 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x103 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 CALLDATASIZE 0x22 0xD5 SWAP7 MUL 0xFB DUP4 DUP3 0x23 SELFBALANCE 0xAF SWAP9 0xA5 AND ADD SWAP5 0xCE 0xEB SWAP1 SHL 0x4C 0xE6 0x2E CREATE2 0xD6 0xD 0xBF TSTORE 0xB5 NOT 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "128:104:8:-:0;;;;;;2898:11:3;:9;:11::i;:::-;128:104:8;;2675:11:3;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;1444:138:4:-;1511:7;1545:12;4719:66:2;4919:46;-1:-1:-1;;;;;4919:46:2;;4848:124;1545:12:4;-1:-1:-1;;;;;1537:36:4;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:45;;1444:138;:::o;948:895:3:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;14:290:9;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "64000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 177,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 177,
									"end": 229,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 177,
									"end": 229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 217,
									"end": 223,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1163,
									"end": 1168,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1125,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 177,
									"end": 229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5845,
									"end": 5854,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5834,
									"end": 5844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5834,
									"end": 5855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 5834,
									"end": 5855,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 2,
									"value": "1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5870,
									"end": 5895,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 5923,
									"end": 5924,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5920,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5924,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5928,
									"end": 5937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 5909,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 5990,
									"end": 5999,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6015,
									"name": "PUSH",
									"source": 2,
									"value": "5C60DA1B"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5982,
									"end": 6017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 5982,
									"end": 6017,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6019,
									"end": 6023,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5953,
									"end": 6024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5953,
									"end": 6024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 5905,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5728,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5054,
									"end": 5425,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 589,
									"end": 623,
									"name": "PUSH",
									"source": 9,
									"value": "455243313936373A206E657720626561636F6E206973206E6F74206120636F6E"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 562,
									"end": 624,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 640,
									"end": 658,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 640,
									"end": 658,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 633,
									"end": 668,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 685,
									"end": 704,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 685,
									"end": 704,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 5111,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 5248,
									"end": 5257,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5273,
									"name": "PUSH",
									"source": 2,
									"value": "5C60DA1B"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5240,
									"end": 5275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 5240,
									"end": 5275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 5221,
									"end": 5276,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 917,
									"end": 919,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 899,
									"end": 920,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 956,
									"end": 958,
									"name": "PUSH",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 936,
									"end": 954,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 929,
									"end": 959,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 995,
									"end": 1029,
									"name": "PUSH",
									"source": 9,
									"value": "455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 975,
									"end": 993,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 968,
									"end": 1030,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1CC81B9BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1046,
									"end": 1064,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1046,
									"end": 1064,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1046,
									"end": 1064,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1039,
									"end": 1085,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1102,
									"end": 1121,
									"name": "PUSH",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1102,
									"end": 1121,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 715,
									"end": 1127,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 5200,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4719,
									"end": 4785,
									"name": "PUSH",
									"source": 2,
									"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5360,
									"end": 5418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 5054,
									"end": 5425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6757,
									"end": 6769,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6809,
									"end": 6815,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6817,
									"end": 6821,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH data",
									"source": 6,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6788,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6781,
									"end": 6865,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6674,
									"end": 6872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7199,
									"end": 7211,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7224,
									"end": 7236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7238,
									"end": 7261,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7265,
									"end": 7284,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7285,
									"end": 7289,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 7265,
									"end": 7290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DELEGATECALL",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7334,
									"end": 7340,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7363,
									"end": 7375,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 7307,
									"end": 7333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7307,
									"end": 7376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7300,
									"end": 7376,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7058,
									"end": 7383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7851,
									"end": 7863,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7879,
									"end": 7886,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7906,
									"end": 7916,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7906,
									"end": 7923,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7906,
									"end": 7928,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1622,
									"end": 1643,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1681,
									"name": "PUSH",
									"source": 9,
									"value": "1D"
								},
								{
									"begin": 1659,
									"end": 1677,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1677,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1677,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1718,
									"end": 1749,
									"name": "PUSH",
									"source": 9,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 1698,
									"end": 1716,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1698,
									"end": 1716,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1698,
									"end": 1716,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1750,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1767,
									"end": 1785,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1438,
									"end": 1791,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8208,
									"end": 8218,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 8257,
									"end": 8267,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8269,
									"end": 8281,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 8249,
									"end": 8282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7671,
									"end": 8299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 8980,
									"end": 9001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9208,
									"end": 9218,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9202,
									"end": 9219,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 9264,
									"end": 9279,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9251,
									"end": 9261,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9247,
									"end": 9249,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9243,
									"end": 9262,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9236,
									"end": 9280,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9331,
									"end": 9343,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 9324,
									"end": 9344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1433,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1132,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1264,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1330,
									"end": 1336,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1321,
									"end": 1324,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1315,
									"end": 1352,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1408,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1387,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1371,
									"end": 1387,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1396,
									"end": 1409,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1396,
									"end": 1409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1396,
									"end": 1409,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1371,
									"end": 1387,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1433,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1132,
									"end": 1433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1945,
									"end": 1947,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1934,
									"end": 1943,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1927,
									"end": 1948,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1912,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1977,
									"end": 1983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1971,
									"end": 1984,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2020,
									"end": 2026,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2015,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2004,
									"end": 2013,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2000,
									"end": 2018,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1993,
									"end": 2027,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2079,
									"end": 2085,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2074,
									"end": 2076,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2066,
									"end": 2072,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2062,
									"end": 2077,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2057,
									"end": 2059,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2046,
									"end": 2055,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2042,
									"end": 2060,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2036,
									"end": 2086,
									"name": "MCOPY",
									"source": 9
								},
								{
									"begin": 2135,
									"end": 2136,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2130,
									"end": 2132,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2121,
									"end": 2127,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2110,
									"end": 2119,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2106,
									"end": 2128,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2102,
									"end": 2133,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2095,
									"end": 2137,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2205,
									"end": 2207,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2194,
									"end": 2201,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2189,
									"end": 2191,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2181,
									"end": 2187,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2177,
									"end": 2192,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2173,
									"end": 2202,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2162,
									"end": 2171,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2203,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2154,
									"end": 2208,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2146,
									"end": 2208,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2146,
									"end": 2208,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2146,
									"end": 2208,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1796,
									"end": 2214,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 128,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 232,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220923622d59602fb83822347af98a5160194ceeb901b4ce62ef5d60dbf5db519c764736f6c634300081a0033",
									".code": [
										{
											"begin": 128,
											"end": 232,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 232,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 128,
											"end": 232,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 128,
											"end": 232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 232,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 128,
											"end": 232,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 128,
											"end": 232,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 4719,
											"end": 4785,
											"name": "PUSH",
											"source": 2,
											"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4848,
											"end": 4972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "5C60DA1B"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1537,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1537,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14,
											"end": 304,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14,
											"end": 304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 179,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 255,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 214,
											"end": 256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 256,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 204,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 270,
											"end": 271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 260,
											"end": 272,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 204,
											"end": 274,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 204,
											"end": 274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 293,
											"end": 298,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 304,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
								"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
								"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts@4.9.6/utils/Address.sol",
								"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
								"GemNFT/Proxy/BeaconProxyNFTfactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":\"nftCollectionBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts@4.9.6/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"GemNFT/Proxy/BeaconProxyNFTfactory.sol\":{\"keccak256\":\"0xf48f916846fdc72b67034475c0f8b1a5652e44dd15efcafda538db743ed9055b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e297778b7cfef037c9bd1ca30d3cd33b9620233c2a4788d037679c796a5c11a\",\"dweb:/ipfs/QmNorDHNH53hignX7Ljm1wztkrsF9DTH2G5MoUVu6xmmxX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:0",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IERC1967",
							"nameLocation": "276:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "291:68:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 7,
									"name": "Upgraded",
									"nameLocation": "370:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "395:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "379:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:32:0"
									},
									"src": "364:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 14,
									"name": "AdminChanged",
									"nameLocation": "495:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "516:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "508:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "539:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "531:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:41:0"
									},
									"src": "489:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "555:59:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 19,
									"name": "BeaconUpgraded",
									"nameLocation": "625:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "656:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "640:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:24:0"
									},
									"src": "619:45:0"
								}
							],
							"scope": 21,
							"src": "266:400:0",
							"usedErrors": [],
							"usedEvents": [
								7,
								14,
								19
							]
						}
					],
					"src": "107:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:1",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "352:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "376:438:1",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "828:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "867:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:1"
									},
									"scope": 30,
									"src": "819:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "342:536:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:766:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							792
						],
						"ERC1967Upgrade": [
							334
						],
						"IBeacon": [
							462
						],
						"IERC1822Proxiable": [
							30
						],
						"IERC1967": [
							20
						],
						"StorageSlot": [
							902
						]
					},
					"id": 335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 463,
							"src": "141:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 34,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 21,
							"src": "173:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 31,
							"src": "213:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 36,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 793,
							"src": "259:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 37,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 903,
							"src": "293:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 39,
										"name": "IERC1967",
										"nameLocations": [
											"553:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "553:8:2"
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "553:8:2"
								}
							],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 38,
								"nodeType": "StructuredDocumentation",
								"src": "332:184:2",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 334,
							"linearizedBaseContracts": [
								334,
								20
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "535:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 43,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "672:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "647:108:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 41,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 42,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "689:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "762:214:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 47,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1007:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "981:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 45,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 46,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1030:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1237:78:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 55,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1281:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 53,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "1254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1266:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 824,
															"src": "1254:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$798_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1254:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1303:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 797,
													"src": "1254:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "1247:61:2"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1103:67:2",
										"text": " @dev Returns the current implementation address."
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1184:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:2:2"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1228:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:9:2"
									},
									"scope": 334,
									"src": "1175:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1469:196:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 69,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "1506:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 67,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "1487:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$792_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1495:10:2",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 480,
																"src": "1487:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1487:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1479:95:2"
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 77,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1611:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 74,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1584:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1596:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 824,
																"src": "1584:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$798_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1584:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1633:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "1584:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 80,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1641:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1584:74:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1584:74:2"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1321:80:2",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1415:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1442:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1434:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:27:2"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:2"
									},
									"scope": 334,
									"src": "1406:259:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1827:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 91,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1856:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1837:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1837:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 95,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1898:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 94,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1889:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "1884:32:2"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1671:95:2",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1780:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1799:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1791:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:27:2"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:2"
									},
									"scope": 334,
									"src": "1771:152:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "2155:167:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 110,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2176:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 109,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "2165:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "2165:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 113,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2208:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2208:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2208:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 117,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2227:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2208:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 127,
												"nodeType": "IfStatement",
												"src": "2204:112:2",
												"trueBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "2238:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 122,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "2281:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 123,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "2300:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 119,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "2252:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$792_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2260:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 679,
																	"src": "2252:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2252:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "2252:53:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "1929:123:2",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2066:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2092:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2084:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2111:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2111:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2135:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2130:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2130:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:62:2"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:2"
									},
									"scope": 334,
									"src": "2057:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2596:820:2",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 141,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2937:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 139,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "2910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2922:14:2",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 835,
															"src": "2910:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$801_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2910:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$801_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2953:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 800,
													"src": "2910:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 179,
													"nodeType": "Block",
													"src": "3028:382:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 164,
																		"nodeType": "Block",
																		"src": "3122:115:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 160,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 158,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 155,
																								"src": "3148:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 159,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 47,
																								"src": "3156:20:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3148:28:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 161,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3178:43:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 157,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3140:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3140:82:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 163,
																				"nodeType": "ExpressionStatement",
																				"src": "3140:82:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 156,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 155,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3116:4:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 165,
																				"src": "3108:12:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 154,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3108:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3107:14:2"
																	},
																	"src": "3099:138:2"
																},
																{
																	"block": {
																		"id": 170,
																		"nodeType": "Block",
																		"src": "3244:89:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 167,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3269:48:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 166,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3262:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3262:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 169,
																				"nodeType": "ExpressionStatement",
																				"src": "3262:56:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 171,
																	"nodeType": "TryCatchClause",
																	"src": "3238:95:2"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 150,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 132,
																				"src": "3064:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 149,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "3046:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$30_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3046:36:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$30",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3083:13:2",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "3046:50:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3046:52:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 172,
															"nodeType": "TryStatement",
															"src": "3042:291:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 174,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "3364:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 175,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "3383:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 176,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "3389:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 173,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "3346:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3346:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 178,
															"nodeType": "ExpressionStatement",
															"src": "3346:53:2"
														}
													]
												},
												"id": 180,
												"nodeType": "IfStatement",
												"src": "2906:504:2",
												"trueBody": {
													"id": 148,
													"nodeType": "Block",
													"src": "2960:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 145,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "2993:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 144,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "2974:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 147,
															"nodeType": "ExpressionStatement",
															"src": "2974:37:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2328:161:2",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2503:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2533:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2525:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2552:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2552:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2576:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2571:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:62:2"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:2"
									},
									"scope": 334,
									"src": "2494:922:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "3422:189:2",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 186,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3642:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "3616:106:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 184,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3616:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3656:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "3837:69:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 194,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3881:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 192,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "3854:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3866:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 824,
															"src": "3854:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$798_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3854:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3894:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 797,
													"src": "3854:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 191,
												"id": 197,
												"nodeType": "Return",
												"src": "3847:52:2"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3729:50:2",
										"text": " @dev Returns the current admin."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "3793:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3802:2:2"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "3828:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:9:2"
									},
									"scope": 334,
									"src": "3784:122:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "4033:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 206,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "4051:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4071:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4063:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4063:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4063:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4051:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4043:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "4043:73:2"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 218,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "4153:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 215,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4126:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4138:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 824,
																"src": "4126:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$798_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4126:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4166:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "4126:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 221,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "4174:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4126:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "4126:56:2"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "3912:71:2",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3997:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4015:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "4007:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:18:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4033:0:2"
									},
									"scope": 334,
									"src": "3988:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4349:86:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 232,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "4377:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4377:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 234,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "4390:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 231,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4364:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4364:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "4359:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 238,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "4419:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 237,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4409:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "4409:19:2"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "4195:100:2",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4309:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4330:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4322:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:18:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4349:0:2"
									},
									"scope": 334,
									"src": "4300:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4441:232:2",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 246,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "4704:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "4678:107:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 244,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4678:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4719:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "4902:70:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 254,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "4946:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 252,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "4919:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4931:14:2",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 824,
															"src": "4919:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$798_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4960:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 797,
													"src": "4919:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 257,
												"nodeType": "Return",
												"src": "4912:53:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "4792:51:2",
										"text": " @dev Returns the current beacon."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "4857:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4867:2:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "4893:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:9:2"
									},
									"scope": 334,
									"src": "4848:124:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "5101:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 268,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "5138:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "5119:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$792_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5127:10:2",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 480,
																"src": "5119:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5119:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5150:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5111:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:79:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "5111:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 277,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 262,
																					"src": "5248:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 276,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "5240:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$462_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5240:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$462",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5259:14:2",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 461,
																		"src": "5240:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5240:35:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 274,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "5221:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$792_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5229:10:2",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 480,
																"src": "5221:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:55:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5200:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "5200:150:2"
											},
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 288,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "5387:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 285,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "5360:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$902_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5372:14:2",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 824,
																"src": "5360:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$798_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5360:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5401:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "5360:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 291,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "5409:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5360:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5360:58:2"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "4978:71:2",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5063:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5082:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "5074:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:19:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5101:0:2"
									},
									"scope": 334,
									"src": "5054:371:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "5824:217:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5845:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 305,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5834:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5834:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 310,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5885:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 309,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "5870:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "EmitStatement",
												"src": "5865:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 313,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "5909:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5914:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5909:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5923:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5909:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 317,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "5928:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5909:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "IfStatement",
												"src": "5905:130:2",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "5939:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 323,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 298,
																						"src": "5990:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 322,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "5982:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$462_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5982:18:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$462",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6001:14:2",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 461,
																			"src": "5982:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5982:35:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 327,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "6019:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 319,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "5953:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$792_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5961:20:2",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 679,
																	"src": "5953:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5953:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "5953:71:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "5431:292:2",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "5737:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5769:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5761:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5793:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5780:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5780:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "5804:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5799:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5799:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5760:54:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5824:0:2"
									},
									"scope": 334,
									"src": "5728:313:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 335,
							"src": "517:5526:2",
							"usedErrors": [],
							"usedEvents": [
								7,
								14,
								19
							]
						}
					],
					"src": "116:5928:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.9.6/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							386
						]
					},
					"id": 387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 337,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:3",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 386,
							"linearizedBaseContracts": [
								386
							],
							"name": "Proxy",
							"nameLocation": "741:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1008:835:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1027:810:3",
													"nodeType": "YulBlock",
													"src": "1027:810:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1280:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1283:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1286:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:3"
																		},
																		"nativeSrc": "1286:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1267:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:3"
																},
																"nativeSrc": "1267:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1267:34:3"
															},
															"nativeSrc": "1267:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:3"
														},
														{
															"nativeSrc": "1428:74:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1455:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:3"
																		},
																		"nativeSrc": "1455:5:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:3"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1462:14:3",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1478:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1481:12:3",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:3"
																		},
																		"nativeSrc": "1481:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1497:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1500:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1442:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:3"
																},
																"nativeSrc": "1442:60:3",
																"nodeType": "YulFunctionCall",
																"src": "1442:60:3"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1432:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1570:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1573:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1576:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:3"
																		},
																		"nativeSrc": "1576:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:3"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1555:14:3",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:3"
																},
																"nativeSrc": "1555:38:3",
																"nodeType": "YulFunctionCall",
																"src": "1555:38:3"
															},
															"nativeSrc": "1555:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:3"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1688:59:3",
																		"nodeType": "YulBlock",
																		"src": "1688:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1713:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1716:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:3"
																							},
																							"nativeSrc": "1716:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:3"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1706:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:3"
																					},
																					"nativeSrc": "1706:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:3"
																				},
																				"nativeSrc": "1706:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1681:66:3",
																	"nodeType": "YulCase",
																	"src": "1681:66:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1686:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:3",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1768:59:3",
																		"nodeType": "YulBlock",
																		"src": "1768:59:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1793:1:3",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:3",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1796:14:3",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:3"
																							},
																							"nativeSrc": "1796:16:3",
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:3"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1786:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:3"
																					},
																					"nativeSrc": "1786:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:3"
																				},
																				"nativeSrc": "1786:27:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:3"
																			}
																		]
																	},
																	"nativeSrc": "1760:67:3",
																	"nodeType": "YulCase",
																	"src": "1760:67:3",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1614:6:3",
																"nodeType": "YulIdentifier",
																"src": "1614:6:3"
															},
															"nativeSrc": "1607:220:3",
															"nodeType": "YulSwitch",
															"src": "1607:220:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 340,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:3",
														"valueSize": 1
													}
												],
												"id": 343,
												"nodeType": "InlineAssembly",
												"src": "1018:819:3"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:3",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "967:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:3"
									},
									"scope": 386,
									"src": "948:895:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:3",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2085:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:3"
									},
									"scope": 386,
									"src": "2027:67:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2360:72:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 355,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2370:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 359,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2407:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "2397:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:3"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:3",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:3"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:3"
									},
									"scope": 386,
									"src": "2322:110:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2665:28:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 368,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2675:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:3"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:3",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 372,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:3"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:3"
									},
									"scope": 386,
									"src": "2629:64:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "2888:28:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 376,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2898:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:3"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:3",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 380,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:3"
									},
									"scope": 386,
									"src": "2853:63:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3242:2:3",
										"statements": []
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:3",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:3"
									},
									"scope": 386,
									"src": "3198:46:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 387,
							"src": "723:2523:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:3148:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
					"exportedSymbols": {
						"Address": [
							792
						],
						"BeaconProxy": [
							452
						],
						"ERC1967Upgrade": [
							334
						],
						"IBeacon": [
							462
						],
						"IERC1822Proxiable": [
							30
						],
						"IERC1967": [
							20
						],
						"Proxy": [
							386
						],
						"StorageSlot": [
							902
						]
					},
					"id": 453,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 388,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 463,
							"src": "137:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 390,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 387,
							"src": "161:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/ERC1967/ERC1967Upgrade.sol",
							"file": "../ERC1967/ERC1967Upgrade.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 453,
							"sourceUnit": 335,
							"src": "184:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 393,
										"name": "Proxy",
										"nameLocations": [
											"604:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 386,
										"src": "604:5:4"
									},
									"id": 394,
									"nodeType": "InheritanceSpecifier",
									"src": "604:5:4"
								},
								{
									"baseName": {
										"id": 395,
										"name": "ERC1967Upgrade",
										"nameLocations": [
											"611:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 334,
										"src": "611:14:4"
									},
									"id": 396,
									"nodeType": "InheritanceSpecifier",
									"src": "611:14:4"
								}
							],
							"canonicalName": "BeaconProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "225:354:4",
								"text": " @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 452,
							"linearizedBaseContracts": [
								452,
								334,
								20,
								386
							],
							"name": "BeaconProxy",
							"nameLocation": "589:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1115:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "beacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "1149:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "1157:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1163:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 404,
														"name": "_upgradeBeaconToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1125:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1125:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1125:44:4"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "632:423:4",
										"text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1080:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1072:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1072:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1101:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1088:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1088:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:35:4"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:0:4"
									},
									"scope": 452,
									"src": "1060:116:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "1305:36:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 417,
														"name": "_getBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1322:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 416,
												"id": 419,
												"nodeType": "Return",
												"src": "1315:19:4"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1182:59:4",
										"text": " @dev Returns the current beacon address."
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beacon",
									"nameLocation": "1255:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:2:4"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1296:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:9:4"
									},
									"scope": 452,
									"src": "1246:95:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										351
									],
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "1520:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 429,
																		"name": "_getBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "1545:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1545:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 428,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "1537:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$462_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1537:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$462",
																"typeString": "contract IBeacon"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1559:14:4",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "1537:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1537:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 427,
												"id": 434,
												"nodeType": "Return",
												"src": "1530:45:4"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "1347:92:4",
										"text": " @dev Returns the current implementation address of the associated beacon."
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1453:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 424,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1493:8:4"
									},
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:2:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "1511:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:4"
									},
									"scope": 452,
									"src": "1444:138:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "2032:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "beacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2066:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "2074:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2080:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 444,
														"name": "_upgradeBeaconToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "2042:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "2042:44:4"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1588:367:4",
										"text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "1969:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1988:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1980:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2009:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1996:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1996:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:35:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:4"
									},
									"scope": 452,
									"src": "1960:133:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 453,
							"src": "580:1515:4",
							"usedErrors": [],
							"usedEvents": [
								7,
								14,
								19
							]
						}
					],
					"src": "112:1984:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 454,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:5",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "IBeacon",
							"nameLocation": "208:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "222:162:5",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "398:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "438:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:9:5"
									},
									"scope": 462,
									"src": "389:58:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 463,
							"src": "198:251:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:357:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.9.6/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							792
						]
					},
					"id": 793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 465,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 792,
							"linearizedBaseContracts": [
								792
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1478:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 473,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "1702:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 472,
												"id": 478,
												"nodeType": "Return",
												"src": "1695:30:6"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1432:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:6"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:6"
									},
									"scope": 792,
									"src": "1412:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2718:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 491,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$792",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$792",
																				"typeString": "library Address"
																			}
																		],
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 489,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 494,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "2761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:6"
											},
											{
												"assignments": [
													500,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 513,
														"src": "2813:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 499,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 501,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "2831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 503,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "2853:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "2882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:6"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2666:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "2693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:6"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:6"
									},
									"scope": 792,
									"src": "2647:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3790:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "3829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 524,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															572,
															616
														],
														"referencedDeclaration": 616,
														"src": "3807:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 523,
												"id": 530,
												"nodeType": "Return",
												"src": "3800:79:6"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:6"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:6"
									},
									"scope": 792,
									"src": "3701:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "4255:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "4294:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4302:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 548,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 544,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															572,
															616
														],
														"referencedDeclaration": 616,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 543,
												"id": 550,
												"nodeType": "Return",
												"src": "4265:59:6"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4190:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:6"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4241:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:6"
									},
									"scope": 792,
									"src": "4108:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4806:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "4845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "4853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 567,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4859:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 564,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															572,
															616
														],
														"referencedDeclaration": 616,
														"src": "4823:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 563,
												"id": 570,
												"nodeType": "Return",
												"src": "4816:94:6"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4724:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4740:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4759:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:6"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4792:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:6"
									},
									"scope": 792,
									"src": "4693:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5344:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 589,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$792",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$792",
																				"typeString": "library Address"
																			}
																		],
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 587,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 592,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5387:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:6"
											},
											{
												"assignments": [
													598,
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "5446:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "5460:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 599,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"arguments": [
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 601,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "5487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 609,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 611,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 612,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5591:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 608,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "5535:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 585,
												"id": 614,
												"nodeType": "Return",
												"src": "5528:76:6"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5229:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5279:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5330:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:6"
									},
									"scope": 792,
									"src": "5165:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "5888:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "5924:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 626,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															662
														],
														"referencedDeclaration": 662,
														"src": "5905:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 625,
												"id": 631,
												"nodeType": "Return",
												"src": "5898:80:6"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:6"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5874:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 623,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:6"
									},
									"scope": 792,
									"src": "5788:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "6327:168:6",
										"statements": [
											{
												"assignments": [
													646,
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "6338:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 645,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 661,
														"src": "6352:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 647,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [
														{
															"id": 651,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "6397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 649,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "6446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 657,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "6463:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 658,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "6475:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 654,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "6419:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 644,
												"id": 660,
												"nodeType": "Return",
												"src": "6412:76:6"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6206:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6230:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6257:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:6"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6313:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:6"
									},
									"scope": 792,
									"src": "6169:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6771:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "6809:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6817:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 672,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															679,
															708
														],
														"referencedDeclaration": 708,
														"src": "6788:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 671,
												"id": 677,
												"nodeType": "Return",
												"src": "6781:84:6"
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6720:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:6"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6757:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:6"
									},
									"scope": 792,
									"src": "6674:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "7213:170:6",
										"statements": [
											{
												"assignments": [
													692,
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "7224:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 691,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "7238:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 693,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [
														{
															"id": 697,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "7285:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 695,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "7265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "7334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "7342:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 703,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 704,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "7363:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 700,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "7307:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 690,
												"id": 706,
												"nodeType": "Return",
												"src": "7300:76:6"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7097:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7121:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7148:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:6"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "7199:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:6"
									},
									"scope": 792,
									"src": "7058:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7865:434:6",
										"statements": [
											{
												"condition": {
													"id": 722,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 713,
													"src": "7879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8235:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "8257:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 741,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "8269:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 739,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "8249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 743,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:6"
														}
													]
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "7875:418:6",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "7888:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 723,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "7906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 735,
															"nodeType": "IfStatement",
															"src": "7902:286:6",
															"trueBody": {
																"id": 734,
																"nodeType": "Block",
																"src": "7930:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 729,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 711,
																							"src": "8132:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 728,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "8121:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 727,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 733,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 736,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "8208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 721,
															"id": 737,
															"nodeType": "Return",
															"src": "8201:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7716:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7762:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:6"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7851:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:6"
									},
									"scope": 792,
									"src": "7671:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "8680:135:6",
										"statements": [
											{
												"condition": {
													"id": 759,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 750,
													"src": "8694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8751:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 764,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "8773:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 765,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "8785:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 763,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "8765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 767,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:6"
														}
													]
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8690:119:6",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "8703:42:6",
													"statements": [
														{
															"expression": {
																"id": 760,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "8724:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 758,
															"id": 761,
															"nodeType": "Return",
															"src": "8717:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "8555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "8577:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "8610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:6"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "8666:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:6"
									},
									"scope": 792,
									"src": "8520:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "8904:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "8980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9310:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "9331:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 784,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:6"
														}
													]
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "8976:379:6",
												"trueBody": {
													"id": 783,
													"nodeType": "Block",
													"src": "9003:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:6",
																"nodeType": "YulBlock",
																"src": "9161:133:6",
																"statements": [
																	{
																		"nativeSrc": "9179:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:6"
																			},
																			"nativeSrc": "9202:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:6",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:6",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:6"
																					},
																					"nativeSrc": "9243:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:6"
																			},
																			"nativeSrc": "9236:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:6"
																		},
																		"nativeSrc": "9236:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 773,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 773,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:6",
																	"valueSize": 1
																}
															],
															"id": 782,
															"nodeType": "InlineAssembly",
															"src": "9152:142:6"
														}
													]
												}
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "8838:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "8863:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:6"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:6"
									},
									"scope": 792,
									"src": "8821:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 793,
							"src": "194:9169:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							902
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 794,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 795,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:7",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902
							],
							"name": "StorageSlot",
							"nameLocation": "1428:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 798,
									"members": [
										{
											"constant": false,
											"id": 797,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1483:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 798,
											"src": "1475:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 796,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1475:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1453:11:7",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1446:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 801,
									"members": [
										{
											"constant": false,
											"id": 800,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1535:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "1530:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 799,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1508:11:7",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1501:46:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 804,
									"members": [
										{
											"constant": false,
											"id": 803,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 804,
											"src": "1582:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 802,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1560:11:7",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1553:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 807,
									"members": [
										{
											"constant": false,
											"id": 806,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1645:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 807,
											"src": "1637:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 805,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1615:11:7",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1608:49:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 810,
									"members": [
										{
											"constant": false,
											"id": 809,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1698:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 810,
											"src": "1691:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 808,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1691:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1670:10:7",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1663:47:7",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 813,
									"members": [
										{
											"constant": false,
											"id": 812,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1749:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 813,
											"src": "1743:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 811,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1743:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1723:9:7",
									"nodeType": "StructDefinition",
									"scope": 902,
									"src": "1716:45:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1943:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2005:38:7",
													"nodeType": "YulBlock",
													"src": "2005:38:7",
													"statements": [
														{
															"nativeSrc": "2019:14:7",
															"nodeType": "YulAssignment",
															"src": "2019:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2029:4:7",
																"nodeType": "YulIdentifier",
																"src": "2029:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2019:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": true,
														"src": "2019:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 816,
														"isOffset": false,
														"isSlot": false,
														"src": "2029:4:7",
														"valueSize": 1
													}
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "1996:47:7"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "1767:87:7",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1868:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1891:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1883:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:14:7"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1940:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1920:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 818,
														"name": "AddressSlot",
														"nameLocations": [
															"1920:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 798,
														"src": "1920:11:7"
													},
													"referencedDeclaration": 798,
													"src": "1920:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$798_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:23:7"
									},
									"scope": 902,
									"src": "1859:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "2231:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2293:38:7",
													"nodeType": "YulBlock",
													"src": "2293:38:7",
													"statements": [
														{
															"nativeSrc": "2307:14:7",
															"nodeType": "YulAssignment",
															"src": "2307:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2317:4:7",
																"nodeType": "YulIdentifier",
																"src": "2317:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2307:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 831,
														"isOffset": false,
														"isSlot": true,
														"src": "2307:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 827,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:4:7",
														"valueSize": 1
													}
												],
												"id": 833,
												"nodeType": "InlineAssembly",
												"src": "2284:47:7"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "2055:87:7",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2156:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2179:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2171:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 826,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:14:7"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2228:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "2208:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$801_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 829,
														"name": "BooleanSlot",
														"nameLocations": [
															"2208:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 801,
														"src": "2208:11:7"
													},
													"referencedDeclaration": 801,
													"src": "2208:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$801_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:23:7"
									},
									"scope": 902,
									"src": "2147:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "2519:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2581:38:7",
													"nodeType": "YulBlock",
													"src": "2581:38:7",
													"statements": [
														{
															"nativeSrc": "2595:14:7",
															"nodeType": "YulAssignment",
															"src": "2595:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2605:4:7",
																"nodeType": "YulIdentifier",
																"src": "2605:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": true,
														"src": "2595:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 838,
														"isOffset": false,
														"isSlot": false,
														"src": "2605:4:7",
														"valueSize": 1
													}
												],
												"id": 844,
												"nodeType": "InlineAssembly",
												"src": "2572:47:7"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "2343:87:7",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2467:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "2459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:14:7"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2516:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "2496:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$804_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2496:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 804,
														"src": "2496:11:7"
													},
													"referencedDeclaration": 804,
													"src": "2496:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$804_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:23:7"
									},
									"scope": 902,
									"src": "2435:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "2807:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2869:38:7",
													"nodeType": "YulBlock",
													"src": "2869:38:7",
													"statements": [
														{
															"nativeSrc": "2883:14:7",
															"nodeType": "YulAssignment",
															"src": "2883:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "2893:4:7",
																"nodeType": "YulIdentifier",
																"src": "2893:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2883:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 853,
														"isOffset": false,
														"isSlot": true,
														"src": "2883:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 849,
														"isOffset": false,
														"isSlot": false,
														"src": "2893:4:7",
														"valueSize": 1
													}
												],
												"id": 855,
												"nodeType": "InlineAssembly",
												"src": "2860:47:7"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "2631:87:7",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2732:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2755:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2747:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 848,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:14:7"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2804:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2784:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$807_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "Uint256Slot",
														"nameLocations": [
															"2784:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 807,
														"src": "2784:11:7"
													},
													"referencedDeclaration": 807,
													"src": "2784:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$807_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:23:7"
									},
									"scope": 902,
									"src": "2723:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "3092:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3154:38:7",
													"nodeType": "YulBlock",
													"src": "3154:38:7",
													"statements": [
														{
															"nativeSrc": "3168:14:7",
															"nodeType": "YulAssignment",
															"src": "3168:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3178:4:7",
																"nodeType": "YulIdentifier",
																"src": "3178:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3168:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 864,
														"isOffset": false,
														"isSlot": true,
														"src": "3168:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": false,
														"src": "3178:4:7",
														"valueSize": 1
													}
												],
												"id": 866,
												"nodeType": "InlineAssembly",
												"src": "3145:47:7"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2919:86:7",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3019:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3041:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3033:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:14:7"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3089:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3070:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$810_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 862,
														"name": "StringSlot",
														"nameLocations": [
															"3070:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 810,
														"src": "3070:10:7"
													},
													"referencedDeclaration": 810,
													"src": "3070:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$810_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:22:7"
									},
									"scope": 902,
									"src": "3010:188:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "3400:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3462:44:7",
													"nodeType": "YulBlock",
													"src": "3462:44:7",
													"statements": [
														{
															"nativeSrc": "3476:20:7",
															"nodeType": "YulAssignment",
															"src": "3476:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3486:10:7",
																"nodeType": "YulIdentifier",
																"src": "3486:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3476:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": true,
														"src": "3476:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 871,
														"isOffset": false,
														"isSlot": true,
														"src": "3486:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 877,
												"nodeType": "InlineAssembly",
												"src": "3453:53:7"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "3204:101:7",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3319:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3348:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3333:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 870,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3333:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:22:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3397:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "3378:20:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$810_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 873,
														"name": "StringSlot",
														"nameLocations": [
															"3378:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 810,
														"src": "3378:10:7"
													},
													"referencedDeclaration": 810,
													"src": "3378:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$810_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:7"
									},
									"scope": 902,
									"src": "3310:202:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "3688:106:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3750:38:7",
													"nodeType": "YulBlock",
													"src": "3750:38:7",
													"statements": [
														{
															"nativeSrc": "3764:14:7",
															"nodeType": "YulAssignment",
															"src": "3764:14:7",
															"value": {
																"name": "slot",
																"nativeSrc": "3774:4:7",
																"nodeType": "YulIdentifier",
																"src": "3774:4:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 886,
														"isOffset": false,
														"isSlot": true,
														"src": "3764:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 882,
														"isOffset": false,
														"isSlot": false,
														"src": "3774:4:7",
														"valueSize": 1
													}
												],
												"id": 888,
												"nodeType": "InlineAssembly",
												"src": "3741:47:7"
											}
										]
									},
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "3518:85:7",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3617:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3638:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3630:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:14:7"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3685:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3667:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$813_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 884,
														"name": "BytesSlot",
														"nameLocations": [
															"3667:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 813,
														"src": "3667:9:7"
													},
													"referencedDeclaration": 813,
													"src": "3667:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$813_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:21:7"
									},
									"scope": 902,
									"src": "3608:186:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "3991:112:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4053:44:7",
													"nodeType": "YulBlock",
													"src": "4053:44:7",
													"statements": [
														{
															"nativeSrc": "4067:20:7",
															"nodeType": "YulAssignment",
															"src": "4067:20:7",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4077:10:7",
																"nodeType": "YulIdentifier",
																"src": "4077:10:7"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 897,
														"isOffset": false,
														"isSlot": true,
														"src": "4067:6:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 893,
														"isOffset": false,
														"isSlot": true,
														"src": "4077:10:7",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 899,
												"nodeType": "InlineAssembly",
												"src": "4044:53:7"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "3800:99:7",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3913:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3940:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "3926:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 892,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:21:7"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3988:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "3970:19:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$813_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 895,
														"name": "BytesSlot",
														"nameLocations": [
															"3970:9:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 813,
														"src": "3970:9:7"
													},
													"referencedDeclaration": 813,
													"src": "3970:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$813_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:21:7"
									},
									"scope": 902,
									"src": "3904:199:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 903,
							"src": "1420:2685:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3913:7"
				},
				"id": 7
			},
			"GemNFT/Proxy/BeaconProxyNFTfactory.sol": {
				"ast": {
					"absolutePath": "GemNFT/Proxy/BeaconProxyNFTfactory.sol",
					"exportedSymbols": {
						"Address": [
							792
						],
						"BeaconProxy": [
							452
						],
						"ERC1967Upgrade": [
							334
						],
						"IBeacon": [
							462
						],
						"IERC1822Proxiable": [
							30
						],
						"IERC1967": [
							20
						],
						"Proxy": [
							386
						],
						"StorageSlot": [
							902
						],
						"nftCollectionBeacon": [
							918
						]
					},
					"id": 919,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
							"file": "@openzeppelin/contracts@4.9.6/proxy/beacon/BeaconProxy.sol",
							"id": 905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 919,
							"sourceUnit": 453,
							"src": "57:69:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 906,
										"name": "BeaconProxy",
										"nameLocations": [
											"160:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 452,
										"src": "160:11:8"
									},
									"id": 907,
									"nodeType": "InheritanceSpecifier",
									"src": "160:11:8"
								}
							],
							"canonicalName": "nftCollectionBeacon",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 918,
							"linearizedBaseContracts": [
								918,
								452,
								334,
								20,
								386
							],
							"name": "nftCollectionBeacon",
							"nameLocation": "137:19:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "227:2:8",
										"statements": []
									},
									"id": 917,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 912,
													"name": "beacon",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 909,
													"src": "217:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"hexValue": "",
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "224:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 914,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 911,
												"name": "BeaconProxy",
												"nameLocations": [
													"205:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 452,
												"src": "205:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "205:22:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "197:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "189:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:16:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "227:0:8"
									},
									"scope": 918,
									"src": "177:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 919,
							"src": "128:104:8",
							"usedErrors": [],
							"usedEvents": [
								7,
								14,
								19
							]
						}
					],
					"src": "32:200:8"
				},
				"id": 8
			}
		}
	}
}