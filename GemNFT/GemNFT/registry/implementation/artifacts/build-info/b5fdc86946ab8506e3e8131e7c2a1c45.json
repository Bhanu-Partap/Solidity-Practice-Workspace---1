{
	"id": "b5fdc86946ab8506e3e8131e7c2a1c45",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.17;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"../storage/CTRStorage.sol\";\r\nimport \"../interface/IClaimTopicsRegistry.sol\";\r\n\r\ncontract ClaimTopicsRegistry is IClaimTopicsRegistry, OwnableUpgradeable, CTRStorage {\r\n\r\n    function init() external initializer {\r\n        __Ownable_init();\r\n    }\r\n\r\n   \r\n    function addClaimTopic(uint256 _claimTopic) external override onlyOwner {\r\n        uint256 length = _claimTopics.length;\r\n        require(length < 15, \"cannot require more than 15 topics\");\r\n        for (uint256 i = 0; i < length; i++) {\r\n            require(_claimTopics[i] != _claimTopic, \"claimTopic already exists\");\r\n        }\r\n        _claimTopics.push(_claimTopic);\r\n        emit ClaimTopicAdded(_claimTopic);\r\n    }\r\n\r\n    /**\r\n     *  @dev See {IClaimTopicsRegistry-removeClaimTopic}.\r\n     */\r\n    function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {\r\n        uint256 length = _claimTopics.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            if (_claimTopics[i] == _claimTopic) {\r\n                _claimTopics[i] = _claimTopics[length - 1];\r\n                _claimTopics.pop();\r\n                emit ClaimTopicRemoved(_claimTopic);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  @dev See {IClaimTopicsRegistry-getClaimTopics}.\r\n     */\r\n    function getClaimTopics() external view override returns (uint256[] memory) {\r\n        return _claimTopics;\r\n    }\r\n}\r\n"
			},
			"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ninterface IClaimTopicsRegistry {\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    function getClaimTopics() external view returns (uint256[] memory);\n}\n"
			},
			"GemNFT/Copy_registry/storage/CTRStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\ncontract CTRStorage {\n    \n    uint256[] internal _claimTopics;\n\n   \n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 671,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol",
								"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol",
								"GemNFT/Copy_registry/storage/CTRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 671,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol": {
				"ClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getClaimTopics()": {
								"details": "See {IClaimTopicsRegistry-getClaimTopics}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeClaimTopic(uint256)": {
								"details": "See {IClaimTopicsRegistry-removeClaimTopic}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":231:1549  contract ClaimTopicsRegistry is IClaimTopicsRegistry, OwnableUpgradeable, CTRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":231:1549  contract ClaimTopicsRegistry is IClaimTopicsRegistry, OwnableUpgradeable, CTRStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc7b22551\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc7b22551\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdf09d604\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x08297846\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":918:1349  function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":410:833  function addClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1432:1546  function getClaimTopics() external view override returns (uint256[] memory) {... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":325:397  function init() external initializer {... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":918:1349  function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_35:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1004:1018  uint256 length */\n      0x00\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1021:1033  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1021:1040  _claimTopics.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1004:1040  uint256 length = _claimTopics.length */\n      swap1\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1056:1065  uint256 i */\n      0x00\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1051:1342  for (uint256 i = 0; i < length; i++) {... */\n    tag_38:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1075:1081  length */\n      dup2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1071:1072  i */\n      dup2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1071:1081  i < length */\n      lt\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1051:1342  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_39\n      jumpi\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1126:1137  _claimTopic */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1107:1119  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1120:1121  i */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1107:1122  _claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_41\n      jumpi\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n    tag_41:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1107:1137  _claimTopics[i] == _claimTopic */\n      sub\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1103:1331  if (_claimTopics[i] == _claimTopic) {... */\n      tag_45\n      jumpi\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1176:1188  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1198:1199  1 */\n      0x01\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1189:1195  length */\n      dup4\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1189:1199  length - 1 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1176:1200  _claimTopics[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_48\n      jumpi\n      tag_49\n      tag_43\n      jump\t// in\n    tag_49:\n    tag_48:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1158:1170  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1171:1172  i */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1158:1173  _claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_51\n      jumpi\n      tag_52\n      tag_43\n      jump\t// in\n    tag_52:\n    tag_51:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1158:1200  _claimTopics[i] = _claimTopics[length - 1] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1219:1231  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1219:1237  _claimTopics.pop() */\n      dup1\n      sload\n      dup1\n      tag_54\n      jumpi\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1279:1290  _claimTopic */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1261:1291  ClaimTopicRemoved(_claimTopic) */\n      0x0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1310:1315  break */\n      jump(tag_39)\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1103:1331  if (_claimTopics[i] == _claimTopic) {... */\n    tag_45:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1083:1086  i++ */\n      dup1\n      dup1\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap2\n      pop\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1051:1342  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_38)\n    tag_39:\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":993:1349  {... */\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":918:1349  function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1487:1494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1519  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":410:833  function addClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":493:507  uint256 length */\n      0x00\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":510:522  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":510:529  _claimTopics.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":493:529  uint256 length = _claimTopics.length */\n      swap1\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":557:559  15 */\n      0x0f\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":548:554  length */\n      dup2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":548:559  length < 15 */\n      lt\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":540:598  require(length < 15, \"cannot require more than 15 topics\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":614:623  uint256 i */\n      0x00\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":609:741  for (uint256 i = 0; i < length; i++) {... */\n    tag_72:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":633:639  length */\n      dup2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":629:630  i */\n      dup2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":629:639  i < length */\n      lt\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":609:741  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":688:699  _claimTopic */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":669:681  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":682:683  i */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":669:684  _claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      tag_76\n      tag_43\n      jump\t// in\n    tag_76:\n    tag_75:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":669:699  _claimTopics[i] != _claimTopic */\n      sub\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":661:729  require(_claimTopics[i] != _claimTopic, \"claimTopic already exists\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":641:644  i++ */\n      dup1\n      dup1\n      tag_81\n      swap1\n      tag_59\n      jump\t// in\n    tag_81:\n      swap2\n      pop\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":609:741  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_72)\n    tag_73:\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":751:763  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":769:780  _claimTopic */\n      dup3\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":751:781  _claimTopics.push(_claimTopic) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":813:824  _claimTopic */\n      dup2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":797:825  ClaimTopicAdded(_claimTopic) */\n      0x01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":482:833  {... */\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":410:833  function addClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1432:1546  function getClaimTopics() external view override returns (uint256[] memory) {... */\n    tag_25:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1490:1506  uint256[] memory */\n      0x60\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1526:1538  _claimTopics */\n      0x65\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1519:1538  return _claimTopics */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":1432:1546  function getClaimTopics() external view override returns (uint256[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":325:397  function init() external initializer {... */\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3315  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3361  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_87\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3417  AddressUpgradeable.isContract */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3388:3432  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3432  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3452:3453  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3566:3580  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3612:3616  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_95:\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":373:389  __Ownable_init() */\n      tag_97\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":373:387  __Ownable_init */\n      tag_98\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":373:389  __Ownable_init() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3694  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3733:3734  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":325:397  function init() external initializer {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2422:2423  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2410  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_36:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1683  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_112\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_18\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2764  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2783:2791  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2780  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2837:2845  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2835  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_121\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1205  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_133:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_135:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_136:\n        /* \"#utility.yul\":490:514   */\n      tag_175\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_135\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_176:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_137:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_178\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_136\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_181\n      tag_133\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":766:885   */\n    tag_180:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_182\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_137\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_138:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_139:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_185\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_138\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_140:\n        /* \"#utility.yul\":1346:1370   */\n      tag_187\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_139\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_20:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_189\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_140\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1725   */\n    tag_141:\n        /* \"#utility.yul\":1678:1684   */\n      0x00\n        /* \"#utility.yul\":1712:1717   */\n      dup2\n        /* \"#utility.yul\":1706:1718   */\n      mload\n        /* \"#utility.yul\":1696:1718   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1731:1915   */\n    tag_142:\n        /* \"#utility.yul\":1830:1841   */\n      0x00\n        /* \"#utility.yul\":1864:1870   */\n      dup3\n        /* \"#utility.yul\":1859:1862   */\n      dup3\n        /* \"#utility.yul\":1852:1871   */\n      mstore\n        /* \"#utility.yul\":1904:1908   */\n      0x20\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1895:1909   */\n      add\n        /* \"#utility.yul\":1880:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1731:1915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1921:2053   */\n    tag_143:\n        /* \"#utility.yul\":1988:1992   */\n      0x00\n        /* \"#utility.yul\":2011:2014   */\n      dup2\n        /* \"#utility.yul\":2003:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2045   */\n      0x20\n        /* \"#utility.yul\":2036:2039   */\n      dup3\n        /* \"#utility.yul\":2032:2046   */\n      add\n        /* \"#utility.yul\":2024:2046   */\n      swap1\n      pop\n        /* \"#utility.yul\":1921:2053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2167   */\n    tag_144:\n        /* \"#utility.yul\":2136:2160   */\n      tag_194\n        /* \"#utility.yul\":2154:2159   */\n      dup2\n        /* \"#utility.yul\":2136:2160   */\n      tag_135\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2131:2134   */\n      dup3\n        /* \"#utility.yul\":2124:2161   */\n      mstore\n        /* \"#utility.yul\":2059:2167   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2173:2352   */\n    tag_145:\n        /* \"#utility.yul\":2242:2252   */\n      0x00\n        /* \"#utility.yul\":2263:2309   */\n      tag_196\n        /* \"#utility.yul\":2305:2308   */\n      dup4\n        /* \"#utility.yul\":2297:2303   */\n      dup4\n        /* \"#utility.yul\":2263:2309   */\n      tag_144\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2341:2345   */\n      0x20\n        /* \"#utility.yul\":2336:2339   */\n      dup4\n        /* \"#utility.yul\":2332:2346   */\n      add\n        /* \"#utility.yul\":2318:2346   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2358:2471   */\n    tag_146:\n        /* \"#utility.yul\":2428:2432   */\n      0x00\n        /* \"#utility.yul\":2460:2464   */\n      0x20\n        /* \"#utility.yul\":2455:2458   */\n      dup3\n        /* \"#utility.yul\":2451:2465   */\n      add\n        /* \"#utility.yul\":2443:2465   */\n      swap1\n      pop\n        /* \"#utility.yul\":2358:2471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2507:3239   */\n    tag_147:\n        /* \"#utility.yul\":2626:2629   */\n      0x00\n        /* \"#utility.yul\":2655:2709   */\n      tag_199\n        /* \"#utility.yul\":2703:2708   */\n      dup3\n        /* \"#utility.yul\":2655:2709   */\n      tag_141\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2725:2811   */\n      tag_200\n        /* \"#utility.yul\":2804:2810   */\n      dup2\n        /* \"#utility.yul\":2799:2802   */\n      dup6\n        /* \"#utility.yul\":2725:2811   */\n      tag_142\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2718:2811   */\n      swap4\n      pop\n        /* \"#utility.yul\":2835:2891   */\n      tag_201\n        /* \"#utility.yul\":2885:2890   */\n      dup4\n        /* \"#utility.yul\":2835:2891   */\n      tag_143\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2914:2921   */\n      dup1\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2930:3214   */\n    tag_202:\n        /* \"#utility.yul\":2955:2961   */\n      dup4\n        /* \"#utility.yul\":2952:2953   */\n      dup2\n        /* \"#utility.yul\":2949:2962   */\n      lt\n        /* \"#utility.yul\":2930:3214   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":3031:3037   */\n      dup2\n        /* \"#utility.yul\":3025:3038   */\n      mload\n        /* \"#utility.yul\":3058:3121   */\n      tag_205\n        /* \"#utility.yul\":3117:3120   */\n      dup9\n        /* \"#utility.yul\":3102:3115   */\n      dup3\n        /* \"#utility.yul\":3058:3121   */\n      tag_145\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3051:3121   */\n      swap8\n      pop\n        /* \"#utility.yul\":3144:3204   */\n      tag_206\n        /* \"#utility.yul\":3197:3203   */\n      dup4\n        /* \"#utility.yul\":3144:3204   */\n      tag_146\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3134:3204   */\n      swap3\n      pop\n        /* \"#utility.yul\":2990:3214   */\n      pop\n        /* \"#utility.yul\":2977:2978   */\n      0x01\n        /* \"#utility.yul\":2974:2975   */\n      dup2\n        /* \"#utility.yul\":2970:2979   */\n      add\n        /* \"#utility.yul\":2965:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2930:3214   */\n      jump(tag_202)\n    tag_204:\n        /* \"#utility.yul\":2934:2948   */\n      pop\n        /* \"#utility.yul\":3230:3233   */\n      dup6\n        /* \"#utility.yul\":3223:3233   */\n      swap4\n      pop\n        /* \"#utility.yul\":2631:3239   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2507:3239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3245:3618   */\n    tag_27:\n        /* \"#utility.yul\":3388:3392   */\n      0x00\n        /* \"#utility.yul\":3426:3428   */\n      0x20\n        /* \"#utility.yul\":3415:3424   */\n      dup3\n        /* \"#utility.yul\":3411:3429   */\n      add\n        /* \"#utility.yul\":3403:3429   */\n      swap1\n      pop\n        /* \"#utility.yul\":3475:3484   */\n      dup2\n        /* \"#utility.yul\":3469:3473   */\n      dup2\n        /* \"#utility.yul\":3465:3485   */\n      sub\n        /* \"#utility.yul\":3461:3462   */\n      0x00\n        /* \"#utility.yul\":3450:3459   */\n      dup4\n        /* \"#utility.yul\":3446:3463   */\n      add\n        /* \"#utility.yul\":3439:3486   */\n      mstore\n        /* \"#utility.yul\":3503:3611   */\n      tag_208\n        /* \"#utility.yul\":3606:3610   */\n      dup2\n        /* \"#utility.yul\":3597:3603   */\n      dup5\n        /* \"#utility.yul\":3503:3611   */\n      tag_147\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3495:3611   */\n      swap1\n      pop\n        /* \"#utility.yul\":3245:3618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3624:3746   */\n    tag_148:\n        /* \"#utility.yul\":3697:3721   */\n      tag_210\n        /* \"#utility.yul\":3715:3720   */\n      dup2\n        /* \"#utility.yul\":3697:3721   */\n      tag_139\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3690:3695   */\n      dup2\n        /* \"#utility.yul\":3687:3722   */\n      eq\n        /* \"#utility.yul\":3677:3740   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":3736:3737   */\n      0x00\n        /* \"#utility.yul\":3733:3734   */\n      dup1\n        /* \"#utility.yul\":3726:3738   */\n      revert\n        /* \"#utility.yul\":3677:3740   */\n    tag_211:\n        /* \"#utility.yul\":3624:3746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3752:3891   */\n    tag_149:\n        /* \"#utility.yul\":3798:3803   */\n      0x00\n        /* \"#utility.yul\":3836:3842   */\n      dup2\n        /* \"#utility.yul\":3823:3843   */\n      calldataload\n        /* \"#utility.yul\":3814:3843   */\n      swap1\n      pop\n        /* \"#utility.yul\":3852:3885   */\n      tag_213\n        /* \"#utility.yul\":3879:3884   */\n      dup2\n        /* \"#utility.yul\":3852:3885   */\n      tag_148\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3752:3891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3897:4226   */\n    tag_32:\n        /* \"#utility.yul\":3956:3962   */\n      0x00\n        /* \"#utility.yul\":4005:4007   */\n      0x20\n        /* \"#utility.yul\":3993:4002   */\n      dup3\n        /* \"#utility.yul\":3984:3991   */\n      dup5\n        /* \"#utility.yul\":3980:4003   */\n      sub\n        /* \"#utility.yul\":3976:4008   */\n      slt\n        /* \"#utility.yul\":3973:4092   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":4011:4090   */\n      tag_216\n      tag_133\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3973:4092   */\n    tag_215:\n        /* \"#utility.yul\":4131:4132   */\n      0x00\n        /* \"#utility.yul\":4156:4209   */\n      tag_217\n        /* \"#utility.yul\":4201:4208   */\n      dup5\n        /* \"#utility.yul\":4192:4198   */\n      dup3\n        /* \"#utility.yul\":4181:4190   */\n      dup6\n        /* \"#utility.yul\":4177:4199   */\n      add\n        /* \"#utility.yul\":4156:4209   */\n      tag_149\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4146:4209   */\n      swap2\n      pop\n        /* \"#utility.yul\":4102:4219   */\n      pop\n        /* \"#utility.yul\":3897:4226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4412   */\n    tag_43:\n        /* \"#utility.yul\":4280:4357   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4277:4278   */\n      0x00\n        /* \"#utility.yul\":4270:4358   */\n      mstore\n        /* \"#utility.yul\":4377:4381   */\n      0x32\n        /* \"#utility.yul\":4374:4375   */\n      0x04\n        /* \"#utility.yul\":4367:4382   */\n      mstore\n        /* \"#utility.yul\":4401:4405   */\n      0x24\n        /* \"#utility.yul\":4398:4399   */\n      0x00\n        /* \"#utility.yul\":4391:4406   */\n      revert\n        /* \"#utility.yul\":4418:4598   */\n    tag_150:\n        /* \"#utility.yul\":4466:4543   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4463:4464   */\n      0x00\n        /* \"#utility.yul\":4456:4544   */\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x11\n        /* \"#utility.yul\":4560:4561   */\n      0x04\n        /* \"#utility.yul\":4553:4568   */\n      mstore\n        /* \"#utility.yul\":4587:4591   */\n      0x24\n        /* \"#utility.yul\":4584:4585   */\n      0x00\n        /* \"#utility.yul\":4577:4592   */\n      revert\n        /* \"#utility.yul\":4604:4798   */\n    tag_47:\n        /* \"#utility.yul\":4644:4648   */\n      0x00\n        /* \"#utility.yul\":4664:4684   */\n      tag_221\n        /* \"#utility.yul\":4682:4683   */\n      dup3\n        /* \"#utility.yul\":4664:4684   */\n      tag_135\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4659:4684   */\n      swap2\n      pop\n        /* \"#utility.yul\":4698:4718   */\n      tag_222\n        /* \"#utility.yul\":4716:4717   */\n      dup4\n        /* \"#utility.yul\":4698:4718   */\n      tag_135\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4693:4718   */\n      swap3\n      pop\n        /* \"#utility.yul\":4742:4743   */\n      dup3\n        /* \"#utility.yul\":4739:4740   */\n      dup3\n        /* \"#utility.yul\":4735:4744   */\n      sub\n        /* \"#utility.yul\":4727:4744   */\n      swap1\n      pop\n        /* \"#utility.yul\":4766:4767   */\n      dup2\n        /* \"#utility.yul\":4760:4764   */\n      dup2\n        /* \"#utility.yul\":4757:4768   */\n      gt\n        /* \"#utility.yul\":4754:4791   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":4771:4789   */\n      tag_224\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4754:4791   */\n    tag_223:\n        /* \"#utility.yul\":4604:4798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4804:4984   */\n    tag_56:\n        /* \"#utility.yul\":4852:4929   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4842:4930   */\n      mstore\n        /* \"#utility.yul\":4949:4953   */\n      0x31\n        /* \"#utility.yul\":4946:4947   */\n      0x04\n        /* \"#utility.yul\":4939:4954   */\n      mstore\n        /* \"#utility.yul\":4973:4977   */\n      0x24\n        /* \"#utility.yul\":4970:4971   */\n      0x00\n        /* \"#utility.yul\":4963:4978   */\n      revert\n        /* \"#utility.yul\":4990:5223   */\n    tag_59:\n        /* \"#utility.yul\":5029:5032   */\n      0x00\n        /* \"#utility.yul\":5052:5076   */\n      tag_227\n        /* \"#utility.yul\":5070:5075   */\n      dup3\n        /* \"#utility.yul\":5052:5076   */\n      tag_135\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5043:5076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5098:5164   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5091:5096   */\n      dup3\n        /* \"#utility.yul\":5088:5165   */\n      sub\n        /* \"#utility.yul\":5085:5188   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":5168:5186   */\n      tag_229\n      tag_150\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5085:5188   */\n    tag_228:\n        /* \"#utility.yul\":5215:5216   */\n      0x01\n        /* \"#utility.yul\":5208:5213   */\n      dup3\n        /* \"#utility.yul\":5204:5217   */\n      add\n        /* \"#utility.yul\":5197:5217   */\n      swap1\n      pop\n        /* \"#utility.yul\":4990:5223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5229:5398   */\n    tag_151:\n        /* \"#utility.yul\":5313:5324   */\n      0x00\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5342:5345   */\n      dup3\n        /* \"#utility.yul\":5335:5354   */\n      mstore\n        /* \"#utility.yul\":5387:5391   */\n      0x20\n        /* \"#utility.yul\":5382:5385   */\n      dup3\n        /* \"#utility.yul\":5378:5392   */\n      add\n        /* \"#utility.yul\":5363:5392   */\n      swap1\n      pop\n        /* \"#utility.yul\":5229:5398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5404:5625   */\n    tag_152:\n        /* \"#utility.yul\":5544:5578   */\n      0x63616e6e6f742072657175697265206d6f7265207468616e20313520746f7069\n        /* \"#utility.yul\":5540:5541   */\n      0x00\n        /* \"#utility.yul\":5532:5538   */\n      dup3\n        /* \"#utility.yul\":5528:5542   */\n      add\n        /* \"#utility.yul\":5521:5579   */\n      mstore\n        /* \"#utility.yul\":5613:5617   */\n      0x6373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5608:5610   */\n      0x20\n        /* \"#utility.yul\":5600:5606   */\n      dup3\n        /* \"#utility.yul\":5596:5611   */\n      add\n        /* \"#utility.yul\":5589:5618   */\n      mstore\n        /* \"#utility.yul\":5404:5625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5631:5997   */\n    tag_153:\n        /* \"#utility.yul\":5773:5776   */\n      0x00\n        /* \"#utility.yul\":5794:5861   */\n      tag_233\n        /* \"#utility.yul\":5858:5860   */\n      0x22\n        /* \"#utility.yul\":5853:5856   */\n      dup4\n        /* \"#utility.yul\":5794:5861   */\n      tag_151\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5787:5861   */\n      swap2\n      pop\n        /* \"#utility.yul\":5870:5963   */\n      tag_234\n        /* \"#utility.yul\":5959:5962   */\n      dup3\n        /* \"#utility.yul\":5870:5963   */\n      tag_152\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5988:5990   */\n      0x40\n        /* \"#utility.yul\":5983:5986   */\n      dup3\n        /* \"#utility.yul\":5979:5991   */\n      add\n        /* \"#utility.yul\":5972:5991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5631:5997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6003:6422   */\n    tag_71:\n        /* \"#utility.yul\":6169:6173   */\n      0x00\n        /* \"#utility.yul\":6207:6209   */\n      0x20\n        /* \"#utility.yul\":6196:6205   */\n      dup3\n        /* \"#utility.yul\":6192:6210   */\n      add\n        /* \"#utility.yul\":6184:6210   */\n      swap1\n      pop\n        /* \"#utility.yul\":6256:6265   */\n      dup2\n        /* \"#utility.yul\":6250:6254   */\n      dup2\n        /* \"#utility.yul\":6246:6266   */\n      sub\n        /* \"#utility.yul\":6242:6243   */\n      0x00\n        /* \"#utility.yul\":6231:6240   */\n      dup4\n        /* \"#utility.yul\":6227:6244   */\n      add\n        /* \"#utility.yul\":6220:6267   */\n      mstore\n        /* \"#utility.yul\":6284:6415   */\n      tag_236\n        /* \"#utility.yul\":6410:6414   */\n      dup2\n        /* \"#utility.yul\":6284:6415   */\n      tag_153\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6276:6415   */\n      swap1\n      pop\n        /* \"#utility.yul\":6003:6422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6428:6603   */\n    tag_154:\n        /* \"#utility.yul\":6568:6595   */\n      0x636c61696d546f70696320616c72656164792065786973747300000000000000\n        /* \"#utility.yul\":6564:6565   */\n      0x00\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6552:6566   */\n      add\n        /* \"#utility.yul\":6545:6596   */\n      mstore\n        /* \"#utility.yul\":6428:6603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6609:6975   */\n    tag_155:\n        /* \"#utility.yul\":6751:6754   */\n      0x00\n        /* \"#utility.yul\":6772:6839   */\n      tag_239\n        /* \"#utility.yul\":6836:6838   */\n      0x19\n        /* \"#utility.yul\":6831:6834   */\n      dup4\n        /* \"#utility.yul\":6772:6839   */\n      tag_151\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6765:6839   */\n      swap2\n      pop\n        /* \"#utility.yul\":6848:6941   */\n      tag_240\n        /* \"#utility.yul\":6937:6940   */\n      dup3\n        /* \"#utility.yul\":6848:6941   */\n      tag_154\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6966:6968   */\n      0x20\n        /* \"#utility.yul\":6961:6964   */\n      dup3\n        /* \"#utility.yul\":6957:6969   */\n      add\n        /* \"#utility.yul\":6950:6969   */\n      swap1\n      pop\n        /* \"#utility.yul\":6609:6975   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6981:7400   */\n    tag_80:\n        /* \"#utility.yul\":7147:7151   */\n      0x00\n        /* \"#utility.yul\":7185:7187   */\n      0x20\n        /* \"#utility.yul\":7174:7183   */\n      dup3\n        /* \"#utility.yul\":7170:7188   */\n      add\n        /* \"#utility.yul\":7162:7188   */\n      swap1\n      pop\n        /* \"#utility.yul\":7234:7243   */\n      dup2\n        /* \"#utility.yul\":7228:7232   */\n      dup2\n        /* \"#utility.yul\":7224:7244   */\n      sub\n        /* \"#utility.yul\":7220:7221   */\n      0x00\n        /* \"#utility.yul\":7209:7218   */\n      dup4\n        /* \"#utility.yul\":7205:7222   */\n      add\n        /* \"#utility.yul\":7198:7245   */\n      mstore\n        /* \"#utility.yul\":7262:7393   */\n      tag_242\n        /* \"#utility.yul\":7388:7392   */\n      dup2\n        /* \"#utility.yul\":7262:7393   */\n      tag_155\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7254:7393   */\n      swap1\n      pop\n        /* \"#utility.yul\":6981:7400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7406:7639   */\n    tag_156:\n        /* \"#utility.yul\":7546:7580   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":7542:7543   */\n      0x00\n        /* \"#utility.yul\":7534:7540   */\n      dup3\n        /* \"#utility.yul\":7530:7544   */\n      add\n        /* \"#utility.yul\":7523:7581   */\n      mstore\n        /* \"#utility.yul\":7615:7631   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7610:7612   */\n      0x20\n        /* \"#utility.yul\":7602:7608   */\n      dup3\n        /* \"#utility.yul\":7598:7613   */\n      add\n        /* \"#utility.yul\":7591:7632   */\n      mstore\n        /* \"#utility.yul\":7406:7639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7645:8011   */\n    tag_157:\n        /* \"#utility.yul\":7787:7790   */\n      0x00\n        /* \"#utility.yul\":7808:7875   */\n      tag_245\n        /* \"#utility.yul\":7872:7874   */\n      0x2e\n        /* \"#utility.yul\":7867:7870   */\n      dup4\n        /* \"#utility.yul\":7808:7875   */\n      tag_151\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7801:7875   */\n      swap2\n      pop\n        /* \"#utility.yul\":7884:7977   */\n      tag_246\n        /* \"#utility.yul\":7973:7976   */\n      dup3\n        /* \"#utility.yul\":7884:7977   */\n      tag_156\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":8002:8004   */\n      0x40\n        /* \"#utility.yul\":7997:8000   */\n      dup3\n        /* \"#utility.yul\":7993:8005   */\n      add\n        /* \"#utility.yul\":7986:8005   */\n      swap1\n      pop\n        /* \"#utility.yul\":7645:8011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8017:8436   */\n    tag_94:\n        /* \"#utility.yul\":8183:8187   */\n      0x00\n        /* \"#utility.yul\":8221:8223   */\n      0x20\n        /* \"#utility.yul\":8210:8219   */\n      dup3\n        /* \"#utility.yul\":8206:8224   */\n      add\n        /* \"#utility.yul\":8198:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8270:8279   */\n      dup2\n        /* \"#utility.yul\":8264:8268   */\n      dup2\n        /* \"#utility.yul\":8260:8280   */\n      sub\n        /* \"#utility.yul\":8256:8257   */\n      0x00\n        /* \"#utility.yul\":8245:8254   */\n      dup4\n        /* \"#utility.yul\":8241:8258   */\n      add\n        /* \"#utility.yul\":8234:8281   */\n      mstore\n        /* \"#utility.yul\":8298:8429   */\n      tag_248\n        /* \"#utility.yul\":8424:8428   */\n      dup2\n        /* \"#utility.yul\":8298:8429   */\n      tag_157\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8290:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8017:8436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8442:8527   */\n    tag_158:\n        /* \"#utility.yul\":8487:8494   */\n      0x00\n        /* \"#utility.yul\":8516:8521   */\n      dup2\n        /* \"#utility.yul\":8505:8521   */\n      swap1\n      pop\n        /* \"#utility.yul\":8442:8527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8533:8619   */\n    tag_159:\n        /* \"#utility.yul\":8568:8575   */\n      0x00\n        /* \"#utility.yul\":8608:8612   */\n      0xff\n        /* \"#utility.yul\":8601:8606   */\n      dup3\n        /* \"#utility.yul\":8597:8613   */\n      and\n        /* \"#utility.yul\":8586:8613   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8625:8685   */\n    tag_160:\n        /* \"#utility.yul\":8653:8656   */\n      0x00\n        /* \"#utility.yul\":8674:8679   */\n      dup2\n        /* \"#utility.yul\":8667:8679   */\n      swap1\n      pop\n        /* \"#utility.yul\":8625:8685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8691:8845   */\n    tag_161:\n        /* \"#utility.yul\":8747:8756   */\n      0x00\n        /* \"#utility.yul\":8780:8839   */\n      tag_253\n        /* \"#utility.yul\":8796:8838   */\n      tag_254\n        /* \"#utility.yul\":8805:8837   */\n      tag_255\n        /* \"#utility.yul\":8831:8836   */\n      dup5\n        /* \"#utility.yul\":8805:8837   */\n      tag_158\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8796:8838   */\n      tag_160\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8780:8839   */\n      tag_159\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8767:8839   */\n      swap1\n      pop\n        /* \"#utility.yul\":8691:8845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8851:8994   */\n    tag_162:\n        /* \"#utility.yul\":8944:8987   */\n      tag_257\n        /* \"#utility.yul\":8981:8986   */\n      dup2\n        /* \"#utility.yul\":8944:8987   */\n      tag_161\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8939:8942   */\n      dup3\n        /* \"#utility.yul\":8932:8988   */\n      mstore\n        /* \"#utility.yul\":8851:8994   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9000:9234   */\n    tag_101:\n        /* \"#utility.yul\":9099:9103   */\n      0x00\n        /* \"#utility.yul\":9137:9139   */\n      0x20\n        /* \"#utility.yul\":9126:9135   */\n      dup3\n        /* \"#utility.yul\":9122:9140   */\n      add\n        /* \"#utility.yul\":9114:9140   */\n      swap1\n      pop\n        /* \"#utility.yul\":9150:9227   */\n      tag_259\n        /* \"#utility.yul\":9224:9225   */\n      0x00\n        /* \"#utility.yul\":9213:9222   */\n      dup4\n        /* \"#utility.yul\":9209:9226   */\n      add\n        /* \"#utility.yul\":9200:9206   */\n      dup5\n        /* \"#utility.yul\":9150:9227   */\n      tag_162\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9000:9234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9240:9465   */\n    tag_163:\n        /* \"#utility.yul\":9380:9414   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9376:9377   */\n      0x00\n        /* \"#utility.yul\":9368:9374   */\n      dup3\n        /* \"#utility.yul\":9364:9378   */\n      add\n        /* \"#utility.yul\":9357:9415   */\n      mstore\n        /* \"#utility.yul\":9449:9457   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9444:9446   */\n      0x20\n        /* \"#utility.yul\":9436:9442   */\n      dup3\n        /* \"#utility.yul\":9432:9447   */\n      add\n        /* \"#utility.yul\":9425:9458   */\n      mstore\n        /* \"#utility.yul\":9240:9465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9471:9837   */\n    tag_164:\n        /* \"#utility.yul\":9613:9616   */\n      0x00\n        /* \"#utility.yul\":9634:9701   */\n      tag_262\n        /* \"#utility.yul\":9698:9700   */\n      0x26\n        /* \"#utility.yul\":9693:9696   */\n      dup4\n        /* \"#utility.yul\":9634:9701   */\n      tag_151\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9627:9701   */\n      swap2\n      pop\n        /* \"#utility.yul\":9710:9803   */\n      tag_263\n        /* \"#utility.yul\":9799:9802   */\n      dup3\n        /* \"#utility.yul\":9710:9803   */\n      tag_163\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9828:9830   */\n      0x40\n        /* \"#utility.yul\":9823:9826   */\n      dup3\n        /* \"#utility.yul\":9819:9831   */\n      add\n        /* \"#utility.yul\":9812:9831   */\n      swap1\n      pop\n        /* \"#utility.yul\":9471:9837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9843:10262   */\n    tag_107:\n        /* \"#utility.yul\":10009:10013   */\n      0x00\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10036:10045   */\n      dup3\n        /* \"#utility.yul\":10032:10050   */\n      add\n        /* \"#utility.yul\":10024:10050   */\n      swap1\n      pop\n        /* \"#utility.yul\":10096:10105   */\n      dup2\n        /* \"#utility.yul\":10090:10094   */\n      dup2\n        /* \"#utility.yul\":10086:10106   */\n      sub\n        /* \"#utility.yul\":10082:10083   */\n      0x00\n        /* \"#utility.yul\":10071:10080   */\n      dup4\n        /* \"#utility.yul\":10067:10084   */\n      add\n        /* \"#utility.yul\":10060:10107   */\n      mstore\n        /* \"#utility.yul\":10124:10255   */\n      tag_265\n        /* \"#utility.yul\":10250:10254   */\n      dup2\n        /* \"#utility.yul\":10124:10255   */\n      tag_164\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10116:10255   */\n      swap1\n      pop\n        /* \"#utility.yul\":9843:10262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10268:10450   */\n    tag_165:\n        /* \"#utility.yul\":10408:10442   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10404:10405   */\n      0x00\n        /* \"#utility.yul\":10396:10402   */\n      dup3\n        /* \"#utility.yul\":10392:10406   */\n      add\n        /* \"#utility.yul\":10385:10443   */\n      mstore\n        /* \"#utility.yul\":10268:10450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10456:10822   */\n    tag_166:\n        /* \"#utility.yul\":10598:10601   */\n      0x00\n        /* \"#utility.yul\":10619:10686   */\n      tag_268\n        /* \"#utility.yul\":10683:10685   */\n      0x20\n        /* \"#utility.yul\":10678:10681   */\n      dup4\n        /* \"#utility.yul\":10619:10686   */\n      tag_151\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10612:10686   */\n      swap2\n      pop\n        /* \"#utility.yul\":10695:10788   */\n      tag_269\n        /* \"#utility.yul\":10784:10787   */\n      dup3\n        /* \"#utility.yul\":10695:10788   */\n      tag_165\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10813:10815   */\n      0x20\n        /* \"#utility.yul\":10808:10811   */\n      dup3\n        /* \"#utility.yul\":10804:10816   */\n      add\n        /* \"#utility.yul\":10797:10816   */\n      swap1\n      pop\n        /* \"#utility.yul\":10456:10822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10828:11247   */\n    tag_115:\n        /* \"#utility.yul\":10994:10998   */\n      0x00\n        /* \"#utility.yul\":11032:11034   */\n      0x20\n        /* \"#utility.yul\":11021:11030   */\n      dup3\n        /* \"#utility.yul\":11017:11035   */\n      add\n        /* \"#utility.yul\":11009:11035   */\n      swap1\n      pop\n        /* \"#utility.yul\":11081:11090   */\n      dup2\n        /* \"#utility.yul\":11075:11079   */\n      dup2\n        /* \"#utility.yul\":11071:11091   */\n      sub\n        /* \"#utility.yul\":11067:11068   */\n      0x00\n        /* \"#utility.yul\":11056:11065   */\n      dup4\n        /* \"#utility.yul\":11052:11069   */\n      add\n        /* \"#utility.yul\":11045:11092   */\n      mstore\n        /* \"#utility.yul\":11109:11240   */\n      tag_271\n        /* \"#utility.yul\":11235:11239   */\n      dup2\n        /* \"#utility.yul\":11109:11240   */\n      tag_166\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":11101:11240   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:11247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11253:11483   */\n    tag_167:\n        /* \"#utility.yul\":11393:11427   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":11389:11390   */\n      0x00\n        /* \"#utility.yul\":11381:11387   */\n      dup3\n        /* \"#utility.yul\":11377:11391   */\n      add\n        /* \"#utility.yul\":11370:11428   */\n      mstore\n        /* \"#utility.yul\":11462:11475   */\n      0x6e697469616c697a696e67000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11457:11459   */\n      0x20\n        /* \"#utility.yul\":11449:11455   */\n      dup3\n        /* \"#utility.yul\":11445:11460   */\n      add\n        /* \"#utility.yul\":11438:11476   */\n      mstore\n        /* \"#utility.yul\":11253:11483   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11489:11855   */\n    tag_168:\n        /* \"#utility.yul\":11631:11634   */\n      0x00\n        /* \"#utility.yul\":11652:11719   */\n      tag_274\n        /* \"#utility.yul\":11716:11718   */\n      0x2b\n        /* \"#utility.yul\":11711:11714   */\n      dup4\n        /* \"#utility.yul\":11652:11719   */\n      tag_151\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":11645:11719   */\n      swap2\n      pop\n        /* \"#utility.yul\":11728:11821   */\n      tag_275\n        /* \"#utility.yul\":11817:11820   */\n      dup3\n        /* \"#utility.yul\":11728:11821   */\n      tag_167\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11846:11848   */\n      0x40\n        /* \"#utility.yul\":11841:11844   */\n      dup3\n        /* \"#utility.yul\":11837:11849   */\n      add\n        /* \"#utility.yul\":11830:11849   */\n      swap1\n      pop\n        /* \"#utility.yul\":11489:11855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11861:12280   */\n    tag_121:\n        /* \"#utility.yul\":12027:12031   */\n      0x00\n        /* \"#utility.yul\":12065:12067   */\n      0x20\n        /* \"#utility.yul\":12054:12063   */\n      dup3\n        /* \"#utility.yul\":12050:12068   */\n      add\n        /* \"#utility.yul\":12042:12068   */\n      swap1\n      pop\n        /* \"#utility.yul\":12114:12123   */\n      dup2\n        /* \"#utility.yul\":12108:12112   */\n      dup2\n        /* \"#utility.yul\":12104:12124   */\n      sub\n        /* \"#utility.yul\":12100:12101   */\n      0x00\n        /* \"#utility.yul\":12089:12098   */\n      dup4\n        /* \"#utility.yul\":12085:12102   */\n      add\n        /* \"#utility.yul\":12078:12125   */\n      mstore\n        /* \"#utility.yul\":12142:12273   */\n      tag_277\n        /* \"#utility.yul\":12268:12272   */\n      dup2\n        /* \"#utility.yul\":12142:12273   */\n      tag_168\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":12134:12273   */\n      swap1\n      pop\n        /* \"#utility.yul\":11861:12280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a888d2255fb21e75eec19ddb9e3670fc190a7e97a40c1d56a9ca08b15a69218164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610eaf806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c7b225511161005b578063c7b22551146100c6578063df09d604146100e2578063e1c7392a14610100578063f2fde38b1461010a5761007d565b80630829784614610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190610810565b610126565b005b6100a6610227565b005b6100b061023b565b6040516100bd919061087e565b60405180910390f35b6100e060048036038101906100db9190610810565b610265565b005b6100ea610393565b6040516100f79190610957565b60405180910390f35b6101086103eb565b005b610124600480360381019061011f91906109a5565b610529565b005b61012e6105ac565b6000606580549050905060005b81811015610222578260658281548110610158576101576109d2565b5b90600052602060002001540361020f5760656001836101779190610a30565b81548110610188576101876109d2565b5b9060005260206000200154606582815481106101a7576101a66109d2565b5b906000526020600020018190555060658054806101c7576101c6610a64565b5b60019003818190600052602060002001600090559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a2610222565b808061021a90610a93565b91505061013b565b505050565b61022f6105ac565b610239600061062a565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61026d6105ac565b60006065805490509050600f81106102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610b5e565b60405180910390fd5b60005b818110156103385782606582815481106102da576102d96109d2565b5b906000526020600020015403610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031c90610bca565b60405180910390fd5b808061033090610a93565b9150506102bd565b506065829080600181540180825580915050600190039060005260206000200160009091909190915055817f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d660405160405180910390a25050565b606060658054806020026020016040519081016040528092919081815260200182805480156103e157602002820191906000526020600020905b8154815260200190600101908083116103cd575b5050505050905090565b60008060019054906101000a900460ff1615905080801561041c5750600160008054906101000a900460ff1660ff16105b80610449575061042b306106f0565b1580156104485750600160008054906101000a900460ff1660ff16145b5b610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90610c5c565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156104c5576001600060016101000a81548160ff0219169083151502179055505b6104cd610713565b80156105265760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161051d9190610cce565b60405180910390a15b50565b6105316105ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790610d5b565b60405180910390fd5b6105a98161062a565b50565b6105b461076c565b73ffffffffffffffffffffffffffffffffffffffff166105d261023b565b73ffffffffffffffffffffffffffffffffffffffff1614610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061f90610dc7565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990610e59565b60405180910390fd5b61076a610774565b565b600033905090565b600060019054906101000a900460ff166107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90610e59565b60405180910390fd5b6107d36107ce61076c565b61062a565b565b600080fd5b6000819050919050565b6107ed816107da565b81146107f857600080fd5b50565b60008135905061080a816107e4565b92915050565b600060208284031215610826576108256107d5565b5b6000610834848285016107fb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108688261083d565b9050919050565b6108788161085d565b82525050565b6000602082019050610893600083018461086f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108ce816107da565b82525050565b60006108e083836108c5565b60208301905092915050565b6000602082019050919050565b600061090482610899565b61090e81856108a4565b9350610919836108b5565b8060005b8381101561094a57815161093188826108d4565b975061093c836108ec565b92505060018101905061091d565b5085935050505092915050565b6000602082019050818103600083015261097181846108f9565b905092915050565b6109828161085d565b811461098d57600080fd5b50565b60008135905061099f81610979565b92915050565b6000602082840312156109bb576109ba6107d5565b5b60006109c984828501610990565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a3b826107da565b9150610a46836107da565b9250828203905081811115610a5e57610a5d610a01565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000610a9e826107da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ad057610acf610a01565b5b600182019050919050565b600082825260208201905092915050565b7f63616e6e6f742072657175697265206d6f7265207468616e20313520746f706960008201527f6373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b48602283610adb565b9150610b5382610aec565b604082019050919050565b60006020820190508181036000830152610b7781610b3b565b9050919050565b7f636c61696d546f70696320616c72656164792065786973747300000000000000600082015250565b6000610bb4601983610adb565b9150610bbf82610b7e565b602082019050919050565b60006020820190508181036000830152610be381610ba7565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610c46602e83610adb565b9150610c5182610bea565b604082019050919050565b60006020820190508181036000830152610c7581610c39565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000610cb8610cb3610cae84610c7c565b610c93565b610c86565b9050919050565b610cc881610c9d565b82525050565b6000602082019050610ce36000830184610cbf565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d45602683610adb565b9150610d5082610ce9565b604082019050919050565b60006020820190508181036000830152610d7481610d38565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610db1602083610adb565b9150610dbc82610d7b565b602082019050919050565b60006020820190508181036000830152610de081610da4565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610e43602b83610adb565b9150610e4e82610de7565b604082019050919050565b60006020820190508181036000830152610e7281610e36565b905091905056fea2646970667358221220a888d2255fb21e75eec19ddb9e3670fc190a7e97a40c1d56a9ca08b15a69218164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEAF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7B22551 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC7B22551 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xDF09D604 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x8297846 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH2 0x3EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x222 JUMPI DUP3 PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x158 JUMPI PUSH2 0x157 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x20F JUMPI PUSH1 0x65 PUSH1 0x1 DUP4 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xA30 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x188 JUMPI PUSH2 0x187 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A7 JUMPI PUSH2 0x1A6 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x65 DUP1 SLOAD DUP1 PUSH2 0x1C7 JUMPI PUSH2 0x1C6 PUSH2 0xA64 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP3 PUSH32 0xB1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x222 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x21A SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22F PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x239 PUSH1 0x0 PUSH2 0x62A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0xF DUP2 LT PUSH2 0x2BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B1 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x338 JUMPI DUP3 PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DA JUMPI PUSH2 0x2D9 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x330 SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BD JUMP JUMPDEST POP PUSH1 0x65 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP2 PUSH32 0x1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3CD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x41C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x449 JUMPI POP PUSH2 0x42B ADDRESS PUSH2 0x6F0 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x448 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x4CD PUSH2 0x713 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x62A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x76C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D2 PUSH2 0x23B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76A PUSH2 0x774 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D3 PUSH2 0x7CE PUSH2 0x76C JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x80A DUP2 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x826 JUMPI PUSH2 0x825 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP5 DUP3 DUP6 ADD PUSH2 0x7FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x868 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x893 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CE DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E0 DUP4 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x904 DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x90E DUP2 DUP6 PUSH2 0x8A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x919 DUP4 PUSH2 0x8B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x94A JUMPI DUP2 MLOAD PUSH2 0x931 DUP9 DUP3 PUSH2 0x8D4 JUMP JUMPDEST SWAP8 POP PUSH2 0x93C DUP4 PUSH2 0x8EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x91D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x971 DUP2 DUP5 PUSH2 0x8F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x99F DUP2 PUSH2 0x979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH2 0x9BA PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP5 DUP3 DUP6 ADD PUSH2 0x990 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3B DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP PUSH2 0xA46 DUP4 PUSH2 0x7DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5D PUSH2 0xA01 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9E DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xAD0 JUMPI PUSH2 0xACF PUSH2 0xA01 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616E6E6F742072657175697265206D6F7265207468616E20313520746F7069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB48 PUSH1 0x22 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xB53 DUP3 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB77 DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x636C61696D546F70696320616C72656164792065786973747300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 PUSH1 0x19 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xBBF DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBE3 DUP2 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC46 PUSH1 0x2E DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xC51 DUP3 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC75 DUP2 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB8 PUSH2 0xCB3 PUSH2 0xCAE DUP5 PUSH2 0xC7C JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0xC9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 PUSH1 0x26 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xD50 DUP3 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD74 DUP2 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB1 PUSH1 0x20 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xDBC DUP3 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDE0 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 PUSH1 0x2B DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xE4E DUP3 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE72 DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DUP9 0xD2 0x25 0x5F 0xB2 0x1E PUSH22 0xEEC19DDB9E3670FC190A7E97A40C1D56A9CA08B15A69 0x21 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "231:1318:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_26": {
									"entryPoint": 1811,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 1908,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 1452,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_657": {
									"entryPoint": 1900,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_125": {
									"entryPoint": 1578,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addClaimTopic_744": {
									"entryPoint": 613,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getClaimTopics_809": {
									"entryPoint": 915,
									"id": 809,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@init_692": {
									"entryPoint": 1003,
									"id": 692,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_318": {
									"entryPoint": 1776,
									"id": 318,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": 571,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeClaimTopic_798": {
									"entryPoint": 294,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_82": {
									"entryPoint": 551,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 1321,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 2260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12283:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:7",
														"type": ""
													}
												],
												"src": "545:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:7"
															},
															"nodeType": "YulIf",
															"src": "766:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:7",
														"type": ""
													}
												],
												"src": "690:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:7",
														"type": ""
													}
												],
												"src": "1025:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:7",
														"type": ""
													}
												],
												"src": "1157:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:40:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1696:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1668:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1678:6:7",
														"type": ""
													}
												],
												"src": "1611:114:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1842:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1859:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1852:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1880:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1880:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1814:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1819:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1830:11:7",
														"type": ""
													}
												],
												"src": "1731:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:60:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2003:11:7",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2011:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2024:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2036:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2041:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1980:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1988:4:7",
														"type": ""
													}
												],
												"src": "1921:132:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2114:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2131:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2154:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2136:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2102:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2109:3:7",
														"type": ""
													}
												],
												"src": "2059:108:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2253:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2305:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2263:33:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:46:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2318:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2336:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2318:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2226:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2234:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2242:10:7",
														"type": ""
													}
												],
												"src": "2173:179:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:38:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2443:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2455:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "2443:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2420:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "2428:4:7",
														"type": ""
													}
												],
												"src": "2358:113:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:608:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2641:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2703:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2655:47:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2645:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2718:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2799:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2804:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2725:73:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2718:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2820:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2885:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2835:49:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2835:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "2824:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2900:21:7",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "2914:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2904:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2990:224:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3004:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3031:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3025:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3025:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3008:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3051:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3102:13:7"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3117:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3058:43:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3058:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3051:3:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3134:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3197:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3144:52:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3144:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3134:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2952:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2955:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2949:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2963:18:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2965:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2974:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2977:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2970:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2970:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2965:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2934:14:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2936:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2945:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "2940:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2930:284:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3223:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3230:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3223:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2610:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2617:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2626:3:7",
														"type": ""
													}
												],
												"src": "2507:732:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:225:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3403:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3411:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3403:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3461:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3469:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3465:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3495:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:7"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3606:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3503:93:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3495:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3365:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3377:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3388:4:7",
														"type": ""
													}
												],
												"src": "3245:373:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3667:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3724:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3733:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3736:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3726:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3726:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3690:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3715:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3697:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3697:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:43:7"
															},
															"nodeType": "YulIf",
															"src": "3677:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3660:5:7",
														"type": ""
													}
												],
												"src": "3624:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3804:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3814:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3836:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3823:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3814:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3879:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3852:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3852:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3782:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3790:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3798:5:7",
														"type": ""
													}
												],
												"src": "3752:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3963:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4009:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4011:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4011:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4011:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3984:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3980:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:32:7"
															},
															"nodeType": "YulIf",
															"src": "3973:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4102:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4117:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4131:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4121:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4146:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4181:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4192:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4177:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4177:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4201:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4156:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4156:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4146:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3933:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3944:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3956:6:7",
														"type": ""
													}
												],
												"src": "3897:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4260:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4277:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4280:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4270:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4374:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4377:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4367:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4367:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4232:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4466:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4563:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4553:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4553:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4584:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4577:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4577:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4418:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4649:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4659:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4682:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4664:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4659:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4693:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4716:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4698:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4698:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4693:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4727:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4739:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4742:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4727:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4769:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4771:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4771:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4771:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4760:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4766:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4757:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:11:7"
															},
															"nodeType": "YulIf",
															"src": "4754:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4635:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4638:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4644:4:7",
														"type": ""
													}
												],
												"src": "4604:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4832:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4852:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4842:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4946:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4939:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4939:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4973:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4963:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "4804:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5033:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5043:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5070:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5052:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5052:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5043:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5166:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5168:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5168:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5091:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5098:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5088:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:77:7"
															},
															"nodeType": "YulIf",
															"src": "5085:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5197:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5208:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5215:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5197:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5019:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5029:3:7",
														"type": ""
													}
												],
												"src": "4990:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5325:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5342:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5347:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5382:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5363:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5297:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5302:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5313:11:7",
														"type": ""
													}
												],
												"src": "5229:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5510:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5532:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5540:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:14:7"
																	},
																	{
																		"hexValue": "63616e6e6f742072657175697265206d6f7265207468616e20313520746f7069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5544:34:7",
																		"type": "",
																		"value": "cannot require more than 15 topi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5521:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5600:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5608:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5596:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5596:15:7"
																	},
																	{
																		"hexValue": "6373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5613:4:7",
																		"type": "",
																		"value": "cs"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5589:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5589:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5502:6:7",
														"type": ""
													}
												],
												"src": "5404:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5787:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5853:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5794:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5787:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5959:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737",
																	"nodeType": "YulIdentifier",
																	"src": "5870:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5972:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5983:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5988:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5765:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5773:3:7",
														"type": ""
													}
												],
												"src": "5631:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6174:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6184:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6196:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6207:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6192:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6184:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6231:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6242:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6227:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6250:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6256:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6246:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6246:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6220:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6220:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6276:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6410:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6284:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6284:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6276:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6154:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6169:4:7",
														"type": ""
													}
												],
												"src": "6003:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6534:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6556:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6564:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6552:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6552:14:7"
																	},
																	{
																		"hexValue": "636c61696d546f70696320616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6568:27:7",
																		"type": "",
																		"value": "claimTopic already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6545:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6545:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6526:6:7",
														"type": ""
													}
												],
												"src": "6428:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6755:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6765:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6831:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6836:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6772:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6772:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6765:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6937:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
																	"nodeType": "YulIdentifier",
																	"src": "6848:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6848:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6848:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6950:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6961:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6966:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6957:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6950:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6743:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6751:3:7",
														"type": ""
													}
												],
												"src": "6609:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7152:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7162:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7174:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7185:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7170:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7162:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7209:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7228:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7234:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7224:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7198:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7198:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7254:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7388:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7262:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7262:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7254:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7132:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7147:4:7",
														"type": ""
													}
												],
												"src": "6981:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7512:127:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7542:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7530:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7530:14:7"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7546:34:7",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7523:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7602:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7598:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7598:15:7"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7615:16:7",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7591:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7591:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7591:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7504:6:7",
														"type": ""
													}
												],
												"src": "7406:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7791:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7801:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7867:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7872:2:7",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7808:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7801:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7973:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nodeType": "YulIdentifier",
																	"src": "7884:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7997:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7993:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7993:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7986:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7779:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7787:3:7",
														"type": ""
													}
												],
												"src": "7645:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8188:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8198:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8210:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8221:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8206:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8198:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8256:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8264:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8270:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8260:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8260:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8424:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8298:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8298:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8290:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8168:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8183:4:7",
														"type": ""
													}
												],
												"src": "8017:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8495:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8505:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8516:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8505:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8477:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8487:7:7",
														"type": ""
													}
												],
												"src": "8442:85:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8576:43:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8586:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8601:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8608:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8597:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8586:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8558:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8568:7:7",
														"type": ""
													}
												],
												"src": "8533:86:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8657:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8667:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8674:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8643:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8653:3:7",
														"type": ""
													}
												],
												"src": "8625:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8757:88:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8767:72:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8831:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "8805:25:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8805:32:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "8796:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8796:42:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8780:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8780:59:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8767:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8737:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8747:9:7",
														"type": ""
													}
												],
												"src": "8691:154:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8922:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8939:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8981:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "8944:36:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8944:43:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:56:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:56:7"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8910:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8917:3:7",
														"type": ""
													}
												],
												"src": "8851:143:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9104:130:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9114:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9126:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9114:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9200:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9213:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9224:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9209:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9209:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9150:49:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9150:77:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9150:77:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9076:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9088:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9099:4:7",
														"type": ""
													}
												],
												"src": "9000:234:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9346:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9368:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9376:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9364:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9364:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9380:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9357:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9357:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9357:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9436:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9444:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9432:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9432:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9449:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9425:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9338:6:7",
														"type": ""
													}
												],
												"src": "9240:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9617:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9627:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9693:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9698:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9634:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9634:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9799:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "9710:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9812:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9823:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9828:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9819:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9819:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9605:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9613:3:7",
														"type": ""
													}
												],
												"src": "9471:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10014:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10024:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10036:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10032:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10024:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10071:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10067:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10090:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10096:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10086:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10086:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10060:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10060:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10116:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10250:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10124:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10124:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10116:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9994:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10009:4:7",
														"type": ""
													}
												],
												"src": "9843:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10374:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10396:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10404:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10392:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10408:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10385:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10385:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10385:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10366:6:7",
														"type": ""
													}
												],
												"src": "10268:182:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10602:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10612:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10678:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10619:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10619:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10612:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10784:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10695:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10695:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10808:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10813:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10590:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10598:3:7",
														"type": ""
													}
												],
												"src": "10456:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10999:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11009:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11021:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11032:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11017:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11017:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11009:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11056:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11067:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11052:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11075:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11071:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11071:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11045:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11045:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11101:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11235:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11109:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11109:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11101:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10979:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10994:4:7",
														"type": ""
													}
												],
												"src": "10828:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11359:124:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11381:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11389:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11377:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11377:14:7"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11393:34:7",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11370:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11370:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11370:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11449:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11457:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11445:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11445:15:7"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11462:13:7",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11438:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11438:38:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11438:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11351:6:7",
														"type": ""
													}
												],
												"src": "11253:230:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11635:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11645:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11711:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11716:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11652:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11652:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11645:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11817:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																	"nodeType": "YulIdentifier",
																	"src": "11728:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11728:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11728:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11830:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11841:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11846:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11837:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11830:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11623:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11631:3:7",
														"type": ""
													}
												],
												"src": "11489:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12042:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12054:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12065:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12050:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12050:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12042:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12089:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12100:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12085:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12085:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12108:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12104:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12104:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12078:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12078:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12078:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12134:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12268:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12142:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12142:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12134:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12012:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12027:4:7",
														"type": ""
													}
												],
												"src": "11861:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot require more than 15 topi\")\n\n        mstore(add(memPtr, 32), \"cs\")\n\n    }\n\n    function abi_encode_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"claimTopic already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c7b225511161005b578063c7b22551146100c6578063df09d604146100e2578063e1c7392a14610100578063f2fde38b1461010a5761007d565b80630829784614610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190610810565b610126565b005b6100a6610227565b005b6100b061023b565b6040516100bd919061087e565b60405180910390f35b6100e060048036038101906100db9190610810565b610265565b005b6100ea610393565b6040516100f79190610957565b60405180910390f35b6101086103eb565b005b610124600480360381019061011f91906109a5565b610529565b005b61012e6105ac565b6000606580549050905060005b81811015610222578260658281548110610158576101576109d2565b5b90600052602060002001540361020f5760656001836101779190610a30565b81548110610188576101876109d2565b5b9060005260206000200154606582815481106101a7576101a66109d2565b5b906000526020600020018190555060658054806101c7576101c6610a64565b5b60019003818190600052602060002001600090559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a2610222565b808061021a90610a93565b91505061013b565b505050565b61022f6105ac565b610239600061062a565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61026d6105ac565b60006065805490509050600f81106102ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b190610b5e565b60405180910390fd5b60005b818110156103385782606582815481106102da576102d96109d2565b5b906000526020600020015403610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031c90610bca565b60405180910390fd5b808061033090610a93565b9150506102bd565b506065829080600181540180825580915050600190039060005260206000200160009091909190915055817f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d660405160405180910390a25050565b606060658054806020026020016040519081016040528092919081815260200182805480156103e157602002820191906000526020600020905b8154815260200190600101908083116103cd575b5050505050905090565b60008060019054906101000a900460ff1615905080801561041c5750600160008054906101000a900460ff1660ff16105b80610449575061042b306106f0565b1580156104485750600160008054906101000a900460ff1660ff16145b5b610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90610c5c565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156104c5576001600060016101000a81548160ff0219169083151502179055505b6104cd610713565b80156105265760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161051d9190610cce565b60405180910390a15b50565b6105316105ac565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790610d5b565b60405180910390fd5b6105a98161062a565b50565b6105b461076c565b73ffffffffffffffffffffffffffffffffffffffff166105d261023b565b73ffffffffffffffffffffffffffffffffffffffff1614610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061f90610dc7565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075990610e59565b60405180910390fd5b61076a610774565b565b600033905090565b600060019054906101000a900460ff166107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90610e59565b60405180910390fd5b6107d36107ce61076c565b61062a565b565b600080fd5b6000819050919050565b6107ed816107da565b81146107f857600080fd5b50565b60008135905061080a816107e4565b92915050565b600060208284031215610826576108256107d5565b5b6000610834848285016107fb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108688261083d565b9050919050565b6108788161085d565b82525050565b6000602082019050610893600083018461086f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108ce816107da565b82525050565b60006108e083836108c5565b60208301905092915050565b6000602082019050919050565b600061090482610899565b61090e81856108a4565b9350610919836108b5565b8060005b8381101561094a57815161093188826108d4565b975061093c836108ec565b92505060018101905061091d565b5085935050505092915050565b6000602082019050818103600083015261097181846108f9565b905092915050565b6109828161085d565b811461098d57600080fd5b50565b60008135905061099f81610979565b92915050565b6000602082840312156109bb576109ba6107d5565b5b60006109c984828501610990565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a3b826107da565b9150610a46836107da565b9250828203905081811115610a5e57610a5d610a01565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000610a9e826107da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ad057610acf610a01565b5b600182019050919050565b600082825260208201905092915050565b7f63616e6e6f742072657175697265206d6f7265207468616e20313520746f706960008201527f6373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b48602283610adb565b9150610b5382610aec565b604082019050919050565b60006020820190508181036000830152610b7781610b3b565b9050919050565b7f636c61696d546f70696320616c72656164792065786973747300000000000000600082015250565b6000610bb4601983610adb565b9150610bbf82610b7e565b602082019050919050565b60006020820190508181036000830152610be381610ba7565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610c46602e83610adb565b9150610c5182610bea565b604082019050919050565b60006020820190508181036000830152610c7581610c39565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000610cb8610cb3610cae84610c7c565b610c93565b610c86565b9050919050565b610cc881610c9d565b82525050565b6000602082019050610ce36000830184610cbf565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610d45602683610adb565b9150610d5082610ce9565b604082019050919050565b60006020820190508181036000830152610d7481610d38565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610db1602083610adb565b9150610dbc82610d7b565b602082019050919050565b60006020820190508181036000830152610de081610da4565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000610e43602b83610adb565b9150610e4e82610de7565b604082019050919050565b60006020820190508181036000830152610e7281610e36565b905091905056fea2646970667358221220a888d2255fb21e75eec19ddb9e3670fc190a7e97a40c1d56a9ca08b15a69218164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7B22551 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC7B22551 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xDF09D604 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x8297846 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x265 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x108 PUSH2 0x3EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12E PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x222 JUMPI DUP3 PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x158 JUMPI PUSH2 0x157 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x20F JUMPI PUSH1 0x65 PUSH1 0x1 DUP4 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xA30 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x188 JUMPI PUSH2 0x187 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A7 JUMPI PUSH2 0x1A6 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x65 DUP1 SLOAD DUP1 PUSH2 0x1C7 JUMPI PUSH2 0x1C6 PUSH2 0xA64 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP3 PUSH32 0xB1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x222 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x21A SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22F PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x239 PUSH1 0x0 PUSH2 0x62A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0xF DUP2 LT PUSH2 0x2BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B1 SWAP1 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x338 JUMPI DUP3 PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DA JUMPI PUSH2 0x2D9 PUSH2 0x9D2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x330 SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BD JUMP JUMPDEST POP PUSH1 0x65 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP2 PUSH32 0x1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3CD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x41C JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x449 JUMPI POP PUSH2 0x42B ADDRESS PUSH2 0x6F0 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x448 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x4CD PUSH2 0x713 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x51D SWAP2 SWAP1 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x531 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x597 SWAP1 PUSH2 0xD5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x62A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x76C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D2 PUSH2 0x23B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61F SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x759 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76A PUSH2 0x774 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BA SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D3 PUSH2 0x7CE PUSH2 0x76C JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP2 EQ PUSH2 0x7F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x80A DUP2 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x826 JUMPI PUSH2 0x825 PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x834 DUP5 DUP3 DUP6 ADD PUSH2 0x7FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x868 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x878 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x893 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x86F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CE DUP2 PUSH2 0x7DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E0 DUP4 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x904 DUP3 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x90E DUP2 DUP6 PUSH2 0x8A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x919 DUP4 PUSH2 0x8B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x94A JUMPI DUP2 MLOAD PUSH2 0x931 DUP9 DUP3 PUSH2 0x8D4 JUMP JUMPDEST SWAP8 POP PUSH2 0x93C DUP4 PUSH2 0x8EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x91D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x971 DUP2 DUP5 PUSH2 0x8F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x982 DUP2 PUSH2 0x85D JUMP JUMPDEST DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x99F DUP2 PUSH2 0x979 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BB JUMPI PUSH2 0x9BA PUSH2 0x7D5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP5 DUP3 DUP6 ADD PUSH2 0x990 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA3B DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP PUSH2 0xA46 DUP4 PUSH2 0x7DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5D PUSH2 0xA01 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA9E DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xAD0 JUMPI PUSH2 0xACF PUSH2 0xA01 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616E6E6F742072657175697265206D6F7265207468616E20313520746F7069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB48 PUSH1 0x22 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xB53 DUP3 PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB77 DUP2 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x636C61696D546F70696320616C72656164792065786973747300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB4 PUSH1 0x19 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xBBF DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBE3 DUP2 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC46 PUSH1 0x2E DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xC51 DUP3 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC75 DUP2 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB8 PUSH2 0xCB3 PUSH2 0xCAE DUP5 PUSH2 0xC7C JUMP JUMPDEST PUSH2 0xC93 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0xC9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 PUSH1 0x26 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xD50 DUP3 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD74 DUP2 PUSH2 0xD38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB1 PUSH1 0x20 DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xDBC DUP3 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDE0 DUP2 PUSH2 0xDA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE43 PUSH1 0x2B DUP4 PUSH2 0xADB JUMP JUMPDEST SWAP2 POP PUSH2 0xE4E DUP3 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE72 DUP2 PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 DUP9 0xD2 0x25 0x5F 0xB2 0x1E PUSH22 0xEEC19DDB9E3670FC190A7E97A40C1D56A9CA08B15A69 0x21 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "231:1318:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:431;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2064:101:0;;;:::i;:::-;;1441:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;410:423:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1432:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:72;;;:::i;:::-;;2314:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;918:431:4;1334:13:0;:11;:13::i;:::-;1004:14:4::1;1021:12;:19;;;;1004:36;;1056:9;1051:291;1075:6;1071:1;:10;1051:291;;;1126:11;1107:12;1120:1;1107:15;;;;;;;;:::i;:::-;;;;;;;;;;:30:::0;1103:228:::1;;1176:12;1198:1;1189:6;:10;;;;:::i;:::-;1176:24;;;;;;;;:::i;:::-;;;;;;;;;;1158:12;1171:1;1158:15;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;1219:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1279:11;1261:30;;;;;;;;;;1310:5;;1103:228;1083:3;;;;;:::i;:::-;;;;1051:291;;;;993:356;918:431:::0;:::o;2064:101:0:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;1441:85::-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;410:423:4:-;1334:13:0;:11;:13::i;:::-;493:14:4::1;510:12;:19;;;;493:36;;557:2;548:6;:11;540:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;614:9;609:132;633:6;629:1;:10;609:132;;;688:11;669:12;682:1;669:15;;;;;;;;:::i;:::-;;;;;;;;;;:30:::0;661:68:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;641:3;;;;;:::i;:::-;;;;609:132;;;;751:12;769:11;751:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:11;797:28;;;;;;;;;;482:351;410:423:::0;:::o;1432:114::-;1490:16;1526:12;1519:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:114;:::o;325:72::-;3279:19:1;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;373:16:4::1;:14;:16::i;:::-;3651:14:1::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;325:72:4:o;2314:198:0:-;1334:13;:11;:13::i;:::-;2422:1:::1;2402:22;;:8;:22;;::::0;2394:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;1599:130::-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;2666:187::-;2739:16;2758:6;;;;;;;;;;;2739:25;;2783:8;2774:6;;:17;;;;;;;;;;;;;;;;;;2837:8;2806:40;;2827:8;2806:40;;;;;;;;;;;;2729:124;2666:187;:::o;1423:320:2:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;1003:95:0:-;5374:13:1;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:0::1;:24;:26::i;:::-;1003:95::o:0;850:96:3:-;903:7;929:10;922:17;;850:96;:::o;1104:111:0:-;5374:13:1;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:0::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:114::-;1678:6;1712:5;1706:12;1696:22;;1611:114;;;:::o;1731:184::-;1830:11;1864:6;1859:3;1852:19;1904:4;1899:3;1895:14;1880:29;;1731:184;;;;:::o;1921:132::-;1988:4;2011:3;2003:11;;2041:4;2036:3;2032:14;2024:22;;1921:132;;;:::o;2059:108::-;2136:24;2154:5;2136:24;:::i;:::-;2131:3;2124:37;2059:108;;:::o;2173:179::-;2242:10;2263:46;2305:3;2297:6;2263:46;:::i;:::-;2341:4;2336:3;2332:14;2318:28;;2173:179;;;;:::o;2358:113::-;2428:4;2460;2455:3;2451:14;2443:22;;2358:113;;;:::o;2507:732::-;2626:3;2655:54;2703:5;2655:54;:::i;:::-;2725:86;2804:6;2799:3;2725:86;:::i;:::-;2718:93;;2835:56;2885:5;2835:56;:::i;:::-;2914:7;2945:1;2930:284;2955:6;2952:1;2949:13;2930:284;;;3031:6;3025:13;3058:63;3117:3;3102:13;3058:63;:::i;:::-;3051:70;;3144:60;3197:6;3144:60;:::i;:::-;3134:70;;2990:224;2977:1;2974;2970:9;2965:14;;2930:284;;;2934:14;3230:3;3223:10;;2631:608;;;2507:732;;;;:::o;3245:373::-;3388:4;3426:2;3415:9;3411:18;3403:26;;3475:9;3469:4;3465:20;3461:1;3450:9;3446:17;3439:47;3503:108;3606:4;3597:6;3503:108;:::i;:::-;3495:116;;3245:373;;;;:::o;3624:122::-;3697:24;3715:5;3697:24;:::i;:::-;3690:5;3687:35;3677:63;;3736:1;3733;3726:12;3677:63;3624:122;:::o;3752:139::-;3798:5;3836:6;3823:20;3814:29;;3852:33;3879:5;3852:33;:::i;:::-;3752:139;;;;:::o;3897:329::-;3956:6;4005:2;3993:9;3984:7;3980:23;3976:32;3973:119;;;4011:79;;:::i;:::-;3973:119;4131:1;4156:53;4201:7;4192:6;4181:9;4177:22;4156:53;:::i;:::-;4146:63;;4102:117;3897:329;;;;:::o;4232:180::-;4280:77;4277:1;4270:88;4377:4;4374:1;4367:15;4401:4;4398:1;4391:15;4418:180;4466:77;4463:1;4456:88;4563:4;4560:1;4553:15;4587:4;4584:1;4577:15;4604:194;4644:4;4664:20;4682:1;4664:20;:::i;:::-;4659:25;;4698:20;4716:1;4698:20;:::i;:::-;4693:25;;4742:1;4739;4735:9;4727:17;;4766:1;4760:4;4757:11;4754:37;;;4771:18;;:::i;:::-;4754:37;4604:194;;;;:::o;4804:180::-;4852:77;4849:1;4842:88;4949:4;4946:1;4939:15;4973:4;4970:1;4963:15;4990:233;5029:3;5052:24;5070:5;5052:24;:::i;:::-;5043:33;;5098:66;5091:5;5088:77;5085:103;;5168:18;;:::i;:::-;5085:103;5215:1;5208:5;5204:13;5197:20;;4990:233;;;:::o;5229:169::-;5313:11;5347:6;5342:3;5335:19;5387:4;5382:3;5378:14;5363:29;;5229:169;;;;:::o;5404:221::-;5544:34;5540:1;5532:6;5528:14;5521:58;5613:4;5608:2;5600:6;5596:15;5589:29;5404:221;:::o;5631:366::-;5773:3;5794:67;5858:2;5853:3;5794:67;:::i;:::-;5787:74;;5870:93;5959:3;5870:93;:::i;:::-;5988:2;5983:3;5979:12;5972:19;;5631:366;;;:::o;6003:419::-;6169:4;6207:2;6196:9;6192:18;6184:26;;6256:9;6250:4;6246:20;6242:1;6231:9;6227:17;6220:47;6284:131;6410:4;6284:131;:::i;:::-;6276:139;;6003:419;;;:::o;6428:175::-;6568:27;6564:1;6556:6;6552:14;6545:51;6428:175;:::o;6609:366::-;6751:3;6772:67;6836:2;6831:3;6772:67;:::i;:::-;6765:74;;6848:93;6937:3;6848:93;:::i;:::-;6966:2;6961:3;6957:12;6950:19;;6609:366;;;:::o;6981:419::-;7147:4;7185:2;7174:9;7170:18;7162:26;;7234:9;7228:4;7224:20;7220:1;7209:9;7205:17;7198:47;7262:131;7388:4;7262:131;:::i;:::-;7254:139;;6981:419;;;:::o;7406:233::-;7546:34;7542:1;7534:6;7530:14;7523:58;7615:16;7610:2;7602:6;7598:15;7591:41;7406:233;:::o;7645:366::-;7787:3;7808:67;7872:2;7867:3;7808:67;:::i;:::-;7801:74;;7884:93;7973:3;7884:93;:::i;:::-;8002:2;7997:3;7993:12;7986:19;;7645:366;;;:::o;8017:419::-;8183:4;8221:2;8210:9;8206:18;8198:26;;8270:9;8264:4;8260:20;8256:1;8245:9;8241:17;8234:47;8298:131;8424:4;8298:131;:::i;:::-;8290:139;;8017:419;;;:::o;8442:85::-;8487:7;8516:5;8505:16;;8442:85;;;:::o;8533:86::-;8568:7;8608:4;8601:5;8597:16;8586:27;;8533:86;;;:::o;8625:60::-;8653:3;8674:5;8667:12;;8625:60;;;:::o;8691:154::-;8747:9;8780:59;8796:42;8805:32;8831:5;8805:32;:::i;:::-;8796:42;:::i;:::-;8780:59;:::i;:::-;8767:72;;8691:154;;;:::o;8851:143::-;8944:43;8981:5;8944:43;:::i;:::-;8939:3;8932:56;8851:143;;:::o;9000:234::-;9099:4;9137:2;9126:9;9122:18;9114:26;;9150:77;9224:1;9213:9;9209:17;9200:6;9150:77;:::i;:::-;9000:234;;;;:::o;9240:225::-;9380:34;9376:1;9368:6;9364:14;9357:58;9449:8;9444:2;9436:6;9432:15;9425:33;9240:225;:::o;9471:366::-;9613:3;9634:67;9698:2;9693:3;9634:67;:::i;:::-;9627:74;;9710:93;9799:3;9710:93;:::i;:::-;9828:2;9823:3;9819:12;9812:19;;9471:366;;;:::o;9843:419::-;10009:4;10047:2;10036:9;10032:18;10024:26;;10096:9;10090:4;10086:20;10082:1;10071:9;10067:17;10060:47;10124:131;10250:4;10124:131;:::i;:::-;10116:139;;9843:419;;;:::o;10268:182::-;10408:34;10404:1;10396:6;10392:14;10385:58;10268:182;:::o;10456:366::-;10598:3;10619:67;10683:2;10678:3;10619:67;:::i;:::-;10612:74;;10695:93;10784:3;10695:93;:::i;:::-;10813:2;10808:3;10804:12;10797:19;;10456:366;;;:::o;10828:419::-;10994:4;11032:2;11021:9;11017:18;11009:26;;11081:9;11075:4;11071:20;11067:1;11056:9;11052:17;11045:47;11109:131;11235:4;11109:131;:::i;:::-;11101:139;;10828:419;;;:::o;11253:230::-;11393:34;11389:1;11381:6;11377:14;11370:58;11462:13;11457:2;11449:6;11445:15;11438:38;11253:230;:::o;11489:366::-;11631:3;11652:67;11716:2;11711:3;11652:67;:::i;:::-;11645:74;;11728:93;11817:3;11728:93;:::i;:::-;11846:2;11841:3;11837:12;11830:19;;11489:366;;;:::o;11861:419::-;12027:4;12065:2;12054:9;12050:18;12042:26;;12114:9;12108:4;12104:20;12100:1;12089:9;12085:17;12078:47;12142:131;12268:4;12142:131;:::i;:::-;12134:139;;11861:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "751800",
								"executionCost": "786",
								"totalCost": "752586"
							},
							"external": {
								"addClaimTopic(uint256)": "infinite",
								"getClaimTopics()": "infinite",
								"init()": "116171",
								"owner()": "2567",
								"removeClaimTopic(uint256)": "infinite",
								"renounceOwnership()": "30421",
								"transferOwnership(address)": "30810"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1549,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a888d2255fb21e75eec19ddb9e3670fc190a7e97a40c1d56a9ca08b15a69218164736f6c63430008110033",
									".code": [
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "C7B22551"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "C7B22551"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "DF09D604"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "E1C7392A"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "8297846"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 231,
											"end": 1549,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 918,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 918,
											"end": 1349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 410,
											"end": 833,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 410,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1432,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1432,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 325,
											"end": 397,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 325,
											"end": 397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 325,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 397,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 325,
											"end": 397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 325,
											"end": 397,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 1040,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1081,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1081,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1120,
											"end": 1121,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1107,
											"end": 1122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1107,
											"end": 1137,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1103,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1198,
											"end": 1199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1189,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1189,
											"end": 1199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1189,
											"end": 1199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1189,
											"end": 1199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1176,
											"end": 1200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1171,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1158,
											"end": 1173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1219,
											"end": 1237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "B1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5"
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1291,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1310,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1310,
											"end": 1315,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1103,
											"end": 1331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1103,
											"end": 1331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1083,
											"end": 1086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1342,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 918,
											"end": 1349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 833,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 510,
											"end": 529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 510,
											"end": 529,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 510,
											"end": 529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 510,
											"end": 529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 493,
											"end": 529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 493,
											"end": 529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 557,
											"end": 559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 548,
											"end": 554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 548,
											"end": 559,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 540,
											"end": 598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 540,
											"end": 598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 614,
											"end": 623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 629,
											"end": 639,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 688,
											"end": 699,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 669,
											"end": 681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 682,
											"end": 683,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 669,
											"end": 684,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 669,
											"end": 684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 669,
											"end": 699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 661,
											"end": 729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 661,
											"end": 729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 609,
											"end": 741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 769,
											"end": 780,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 751,
											"end": 781,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 813,
											"end": 824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6"
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 797,
											"end": 825,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 482,
											"end": 833,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 410,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1526,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 325,
											"end": 397,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 325,
											"end": 397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3388,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3388,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3325,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 373,
											"end": 387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 373,
											"end": 389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 373,
											"end": 389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 373,
											"end": 389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3694,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 325,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2394,
											"end": 2467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1673,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1662,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1654,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1195,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1195,
											"end": 1205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1195,
											"end": 1207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1195,
											"end": 1207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1195,
											"end": 1207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1718,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1852,
											"end": 1871,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 1992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2014,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2154,
											"end": 2159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2136,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2136,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2124,
											"end": 2161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2305,
											"end": 2308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2263,
											"end": 2309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2263,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2332,
											"end": 2346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2443,
											"end": 2465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2655,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2655,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2802,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2725,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2725,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2811,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2835,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2835,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2962,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3058,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3058,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3121,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3197,
											"end": 3203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 3144,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3144,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3204,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2990,
											"end": 3214,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2930,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2934,
											"end": 2948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2631,
											"end": 3239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 3239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 3239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3388,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 3503,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3503,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 3697,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3697,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3687,
											"end": 3722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3738,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3677,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3843,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 3852,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3852,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3991,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 4003,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4008,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4011,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4011,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3973,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4131,
											"end": 4132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4156,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4156,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4209,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 4226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4412,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4232,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4357,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 4374,
											"end": 4375,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4405,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4406,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4598,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4418,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4543,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4560,
											"end": 4561,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4553,
											"end": 4568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4584,
											"end": 4585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4592,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4664,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4664,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4698,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4698,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4693,
											"end": 4718,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4693,
											"end": 4718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4768,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 4771,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4754,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4984,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4804,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4929,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4842,
											"end": 4930,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 4953,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4939,
											"end": 4954,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4978,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5070,
											"end": 5075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 5052,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5052,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5165,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5168,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5085,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5215,
											"end": 5216,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5213,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5335,
											"end": 5354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5387,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5382,
											"end": 5385,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5229,
											"end": 5398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5625,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5404,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "63616E6E6F742072657175697265206D6F7265207468616E20313520746F7069"
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 5617,
											"name": "PUSH",
											"source": 7,
											"value": "6373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5608,
											"end": 5610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5600,
											"end": 5606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5404,
											"end": 5625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5997,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5631,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5776,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5858,
											"end": 5860,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5853,
											"end": 5856,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 5794,
											"end": 5861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5794,
											"end": 5861,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5794,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5861,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5959,
											"end": 5962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5870,
											"end": 5963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5963,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5870,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5988,
											"end": 5990,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5979,
											"end": 5991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6422,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6003,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6169,
											"end": 6173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6256,
											"end": 6265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6266,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6240,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6244,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6220,
											"end": 6267,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6410,
											"end": 6414,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6284,
											"end": 6415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6415,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6284,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6603,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6428,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6568,
											"end": 6595,
											"name": "PUSH",
											"source": 7,
											"value": "636C61696D546F70696320616C72656164792065786973747300000000000000"
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6975,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6609,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6751,
											"end": 6754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6831,
											"end": 6834,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6772,
											"end": 6839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6839,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 6772,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6839,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6937,
											"end": 6940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6848,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6848,
											"end": 6941,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6848,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 6969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6981,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7187,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7162,
											"end": 7188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7228,
											"end": 7232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7218,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7205,
											"end": 7222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7245,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7388,
											"end": 7392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7262,
											"end": 7393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7393,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7262,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7639,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7406,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7580,
											"name": "PUSH",
											"source": 7,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7534,
											"end": 7540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7615,
											"end": 7631,
											"name": "PUSH",
											"source": 7,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7610,
											"end": 7612,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7598,
											"end": 7613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7591,
											"end": 7632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 8011,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7645,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7787,
											"end": 7790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7808,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7872,
											"end": 7874,
											"name": "PUSH",
											"source": 7,
											"value": "2E"
										},
										{
											"begin": 7867,
											"end": 7870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7808,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7875,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7808,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7884,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7973,
											"end": 7976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7884,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7884,
											"end": 7977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7884,
											"end": 7977,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7884,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7997,
											"end": 8000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7993,
											"end": 8005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 8005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 8005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 8011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 8011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 8011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 8011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8223,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8270,
											"end": 8279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8280,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8281,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8298,
											"end": 8429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8298,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8017,
											"end": 8436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8527,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 8442,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8521,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8505,
											"end": 8521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8505,
											"end": 8521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8619,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8533,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8608,
											"end": 8612,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8586,
											"end": 8613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8619,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8685,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8625,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8653,
											"end": 8656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8674,
											"end": 8679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8845,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8691,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8747,
											"end": 8756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8780,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8796,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8805,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8831,
											"end": 8836,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 8805,
											"end": 8837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8805,
											"end": 8837,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8805,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8796,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8838,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8796,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8780,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8780,
											"end": 8839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8780,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 8780,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8994,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 8851,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8944,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8981,
											"end": 8986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8944,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8944,
											"end": 8987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8944,
											"end": 8987,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8944,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 8942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9234,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 9000,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9122,
											"end": 9140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9140,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9206,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 9150,
											"end": 9227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9227,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 9150,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9234,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9240,
											"end": 9465,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 9240,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9414,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9364,
											"end": 9378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9357,
											"end": 9415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9449,
											"end": 9457,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9444,
											"end": 9446,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9436,
											"end": 9442,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9447,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9425,
											"end": 9458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9240,
											"end": 9465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9240,
											"end": 9465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9698,
											"end": 9700,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 9693,
											"end": 9696,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9634,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9634,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9627,
											"end": 9701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9799,
											"end": 9802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 9710,
											"end": 9803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9710,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9828,
											"end": 9830,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9819,
											"end": 9831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 9831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10032,
											"end": 10050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10096,
											"end": 10105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10090,
											"end": 10094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10082,
											"end": 10083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10067,
											"end": 10084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10060,
											"end": 10107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 10124,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10124,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10116,
											"end": 10255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 10262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 10262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10450,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 10268,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10408,
											"end": 10442,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10404,
											"end": 10405,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10385,
											"end": 10443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10598,
											"end": 10601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10683,
											"end": 10685,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10678,
											"end": 10681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 10619,
											"end": 10686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10612,
											"end": 10686,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10612,
											"end": 10686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 10784,
											"end": 10787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 10695,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10813,
											"end": 10815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 10816,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10797,
											"end": 10816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10456,
											"end": 10822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10994,
											"end": 10998,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11034,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11035,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11009,
											"end": 11035,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11079,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11071,
											"end": 11091,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11067,
											"end": 11068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 11065,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11052,
											"end": 11069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11045,
											"end": 11092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 11235,
											"end": 11239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 11109,
											"end": 11240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11101,
											"end": 11240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 11247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11483,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 11253,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11427,
											"name": "PUSH",
											"source": 7,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 11389,
											"end": 11390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11387,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11377,
											"end": 11391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11370,
											"end": 11428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11475,
											"name": "PUSH",
											"source": 7,
											"value": "6E697469616C697A696E67000000000000000000000000000000000000000000"
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11449,
											"end": 11455,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11438,
											"end": 11476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11489,
											"end": 11855,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 11489,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11652,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11716,
											"end": 11718,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 11711,
											"end": 11714,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11652,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 11652,
											"end": 11719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11652,
											"end": 11719,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 11652,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11719,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11645,
											"end": 11719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11728,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11817,
											"end": 11820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11728,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 11728,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11728,
											"end": 11821,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 11728,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11846,
											"end": 11848,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11841,
											"end": 11844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11837,
											"end": 11849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 11849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 11849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11489,
											"end": 11855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11489,
											"end": 11855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11489,
											"end": 11855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11489,
											"end": 11855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12280,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 11861,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12065,
											"end": 12067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12054,
											"end": 12063,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12068,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12042,
											"end": 12068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12114,
											"end": 12123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12104,
											"end": 12124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12100,
											"end": 12101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12089,
											"end": 12098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12085,
											"end": 12102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12078,
											"end": 12125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 12268,
											"end": 12272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 12142,
											"end": 12273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12273,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 12142,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12134,
											"end": 12273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12134,
											"end": 12273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol",
								"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol",
								"GemNFT/Copy_registry/storage/CTRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"init()": "e1c7392a",
							"owner()": "8da5cb5b",
							"removeClaimTopic(uint256)": "08297846",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getClaimTopics()\":{\"details\":\"See {IClaimTopicsRegistry-getClaimTopics}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeClaimTopic(uint256)\":{\"details\":\"See {IClaimTopicsRegistry-removeClaimTopic}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":\"ClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol\":{\"keccak256\":\"0xd1285fcb3e7dcd19eeac010ecd33f2f88539ba306065cb0b9211253a4fdfbe4b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9dd40cf9660067d972169b81c608cdf31d2f4ab74e721d6241590402b73b9088\",\"dweb:/ipfs/QmZ5wwqdwMSEyyqiHYQBAi5Rs5oyrEcbwxc9zREK6rNdGo\"]},\"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]},\"GemNFT/Copy_registry/storage/CTRStorage.sol\":{\"keccak256\":\"0xdf6acb1c9827e36cf73a909c1a929706b4c229c0ded14171b2bfdb0d463739eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://112b37f5d7170a2db2b8e681f59a28c31c02b0d9c8346260262d1706e4a4c2cb\",\"dweb:/ipfs/QmVFYkjDEzWUczKyiPa7Uue1isLVcZqip3PqUWDt4Nc5in\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 671,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 842,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_claimTopics",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 846,
								"contract": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x209963b4e545f78c8fbf76bd3779bedc134bd3f3419b4b8eb0af63249689f2ea\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0633ef0e22df28c198104c5f076f927a3171b73b1e24ab28d8127c7ed191ce1\",\"dweb:/ipfs/QmT7QJHzkoBvx4Xp58BhL2PRhHMdtJKPNgcpvhBfPjnNyf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GemNFT/Copy_registry/storage/CTRStorage.sol": {
				"CTRStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GemNFT/Copy_registry/storage/CTRStorage.sol\":62:163  contract CTRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GemNFT/Copy_registry/storage/CTRStorage.sol\":62:163  contract CTRStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a7514df6d56db9121c7a2cd1522da17ec687b67de8c214ddfc7fc36906bc40c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203a7514df6d56db9121c7a2cd1522da17ec687b67de8c214ddfc7fc36906bc40c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH22 0x14DF6D56DB9121C7A2CD1522DA17EC687B67DE8C214D 0xDF 0xC7 0xFC CALLDATASIZE SWAP1 PUSH12 0xC40C64736F6C634300081100 CALLER ",
							"sourceMap": "62:101:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203a7514df6d56db9121c7a2cd1522da17ec687b67de8c214ddfc7fc36906bc40c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE PUSH22 0x14DF6D56DB9121C7A2CD1522DA17EC687B67DE8C214D 0xDF 0xC7 0xFC CALLDATASIZE SWAP1 PUSH12 0xC40C64736F6C634300081100 CALLER ",
							"sourceMap": "62:101:6:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 62,
									"end": 163,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 163,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a7514df6d56db9121c7a2cd1522da17ec687b67de8c214ddfc7fc36906bc40c64736f6c63430008110033",
									".code": [
										{
											"begin": 62,
											"end": 163,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 163,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 163,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 62,
											"end": 163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 163,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol",
								"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol",
								"GemNFT/Copy_registry/storage/CTRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GemNFT/Copy_registry/storage/CTRStorage.sol\":\"CTRStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GemNFT/Copy_registry/storage/CTRStorage.sol\":{\"keccak256\":\"0xdf6acb1c9827e36cf73a909c1a929706b4c229c0ded14171b2bfdb0d463739eb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://112b37f5d7170a2db2b8e681f59a28c31c02b0d9c8346260262d1706e4a4c2cb\",\"dweb:/ipfs/QmVFYkjDEzWUczKyiPa7Uue1isLVcZqip3PqUWDt4Nc5in\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 842,
								"contract": "GemNFT/Copy_registry/storage/CTRStorage.sol:CTRStorage",
								"label": "_claimTopics",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 846,
								"contract": "GemNFT/Copy_registry/storage/CTRStorage.sol:CTRStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"ContextUpgradeable": [
							672
						],
						"Initializable": [
							300
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 673,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 301,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nameLocations": [
											"748:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 672,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								672,
								300
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2118:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:0"
									},
									"scope": 131,
									"src": "2064:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2384:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2402:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2477:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2374:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:0"
									},
									"scope": 131,
									"src": "2314:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2729:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2739:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2758:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2774:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2827:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2837:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2806:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2801:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:0"
									},
									"scope": 131,
									"src": "2666:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3118:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2438:0",
							"usedErrors": []
						}
					],
					"src": "102:3045:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"Initializable": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 301,
							"sourceUnit": 631,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Initializable",
							"nameLocation": "2412:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "2546:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "2675:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2809:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2821:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:1"
									},
									"src": "2803:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3269:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3302:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3347:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3365:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$300",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$300",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 630,
																						"src": "3388:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$630_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:1",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 318,
																					"src": "3388:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3436:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3536:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3566:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3562:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3582:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3596:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3651:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3647:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3667:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3681:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3721:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3716:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3255:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:1"
									},
									"src": "3246:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4863:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4882:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4899:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4914:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4982:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4997:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5014:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5055:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "5103:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5091:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "5086:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4834:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4848:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:1"
									},
									"src": "4825:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "5356:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5374:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:1"
									},
									"src": "5328:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5988:231:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "6007:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "6078:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "6074:139:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "6111:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "6125:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6174:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "6169:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:1"
									},
									"scope": 300,
									"src": "5939:280:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "6393:36:1",
										"statements": [
											{
												"expression": {
													"id": 287,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "6410:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 286,
												"id": 288,
												"nodeType": "Return",
												"src": "6403:19:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6386:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 284,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:1"
									},
									"scope": 300,
									"src": "6329:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "6601:37:1",
										"statements": [
											{
												"expression": {
													"id": 296,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "6618:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "6611:20:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "6595:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:1"
									},
									"scope": 300,
									"src": "6545:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "2394:4246:1",
							"usedErrors": []
						}
					],
					"src": "113:6528:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 303,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1489:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 311,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1713:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 310,
												"id": 316,
												"nodeType": "Return",
												"src": "1706:30:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1443:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1483:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:2"
									},
									"scope": 630,
									"src": "1423:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2729:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 329,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 327,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 332,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2772:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:2"
											},
											{
												"assignments": [
													338,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "2824:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 337,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 345,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 339,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "2842:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2864:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2893:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2677:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2704:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:2"
									},
									"scope": 630,
									"src": "2658:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3801:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3840:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3848:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 362,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "3818:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 361,
												"id": 368,
												"nodeType": "Return",
												"src": "3811:79:2"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3734:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3750:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3787:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:2"
									},
									"scope": 630,
									"src": "3712:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4266:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4305:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4313:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4322:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "4283:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 381,
												"id": 388,
												"nodeType": "Return",
												"src": "4276:59:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4150:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4174:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4201:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4252:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:2"
									},
									"scope": 630,
									"src": "4119:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4817:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4856:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4864:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 402,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "4834:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 401,
												"id": 408,
												"nodeType": "Return",
												"src": "4827:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4735:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4751:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4770:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4803:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:2"
									},
									"scope": 630,
									"src": "4704:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "5355:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5398:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:2"
											},
											{
												"assignments": [
													436,
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5457:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5471:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 437,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"id": 443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5524:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 439,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5498:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 441,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5517:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5573:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 449,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "5590:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 450,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5602:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 446,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "5546:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 452,
												"nodeType": "Return",
												"src": "5539:76:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5216:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5240:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5267:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5290:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5341:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:2"
									},
									"scope": 630,
									"src": "5176:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5899:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5935:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "5943:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 464,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															500
														],
														"referencedDeclaration": 500,
														"src": "5916:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "5909:80:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5827:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5843:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5885:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:2"
									},
									"scope": 630,
									"src": "5799:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "6338:168:2",
										"statements": [
											{
												"assignments": [
													484,
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6349:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6363:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 485,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 487,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6390:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6457:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "6474:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6486:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 492,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "6430:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 498,
												"nodeType": "Return",
												"src": "6423:76:2"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6217:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6241:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6268:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6324:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:2"
									},
									"scope": 630,
									"src": "6180:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6782:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6820:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6828:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 510,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															517,
															546
														],
														"referencedDeclaration": 546,
														"src": "6799:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 509,
												"id": 515,
												"nodeType": "Return",
												"src": "6792:84:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6715:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6731:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6768:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:2"
									},
									"scope": 630,
									"src": "6685:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "7224:170:2",
										"statements": [
											{
												"assignments": [
													530,
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "7235:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 529,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "7249:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"id": 535,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7296:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 533,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "7276:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:2",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "7345:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "7353:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7362:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "7374:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 538,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "7318:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 544,
												"nodeType": "Return",
												"src": "7311:76:2"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7108:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7132:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7159:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7210:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:2"
									},
									"scope": 630,
									"src": "7069:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "7876:434:2",
										"statements": [
											{
												"condition": {
													"id": 560,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "7890:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "8246:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 578,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "8268:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 579,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "8280:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 577,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "8260:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:2"
														}
													]
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "7886:418:2",
												"trueBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "7899:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 561,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "7917:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "7913:286:2",
															"trueBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "7941:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 567,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 549,
																							"src": "8143:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 566,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "8132:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 565,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 574,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "8219:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 559,
															"id": 575,
															"nodeType": "Return",
															"src": "8212:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7727:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7751:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7773:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7806:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7862:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:2"
									},
									"scope": 630,
									"src": "7682:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "8691:135:2",
										"statements": [
											{
												"condition": {
													"id": 597,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "8705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "8762:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 602,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "8784:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 603,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "8796:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 601,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "8776:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:2"
														}
													]
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "8701:119:2",
												"trueBody": {
													"id": 600,
													"nodeType": "Block",
													"src": "8714:42:2",
													"statements": [
														{
															"expression": {
																"id": 598,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "8735:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 596,
															"id": 599,
															"nodeType": "Return",
															"src": "8728:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8566:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8588:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8621:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:2"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8677:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:2"
									},
									"scope": 630,
									"src": "8531:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "8915:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 616,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "8991:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "9321:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 623,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "9342:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 622,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 625,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:2"
														}
													]
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "8987:379:2",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "9014:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 611,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 611,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:2",
																	"valueSize": 1
																}
															],
															"id": 620,
															"nodeType": "InlineAssembly",
															"src": "9163:142:2"
														}
													]
												}
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "8849:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "8874:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:2"
									},
									"scope": 630,
									"src": "8832:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "194:9180:2",
							"usedErrors": []
						}
					],
					"src": "101:9274:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"ContextUpgradeable": [
							672
						],
						"Initializable": [
							300
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 301,
							"src": "110:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "Initializable",
										"nameLocations": [
											"691:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "691:13:3"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 672,
							"linearizedBaseContracts": [
								672,
								300
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "763:7:3",
										"statements": []
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 639,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 638,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:3"
									},
									"scope": 672,
									"src": "711:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "838:7:3",
										"statements": []
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 645,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 644,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:3"
									},
									"scope": 672,
									"src": "776:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "912:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 653,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 655,
												"nodeType": "Return",
												"src": "922:17:3"
											}
										]
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "903:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:3"
									},
									"scope": 672,
									"src": "850:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1019:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 662,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 661,
												"id": 664,
												"nodeType": "Return",
												"src": "1029:15:3"
											}
										]
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1003:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:3"
									},
									"scope": 672,
									"src": "952:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 671,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 672,
									"src": "1316:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 668,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 670,
										"length": {
											"hexValue": "3530",
											"id": 669,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 673,
							"src": "651:693:3",
							"usedErrors": []
						}
					],
					"src": "86:1259:3"
				},
				"id": 3
			},
			"GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "GemNFT/Copy_registry/implementation/ClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"CTRStorage": [
							847
						],
						"ClaimTopicsRegistry": [
							810
						],
						"ContextUpgradeable": [
							672
						],
						"IClaimTopicsRegistry": [
							837
						],
						"Initializable": [
							300
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 811,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 132,
							"src": "66:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "GemNFT/Copy_registry/storage/CTRStorage.sol",
							"file": "../storage/CTRStorage.sol",
							"id": 676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 848,
							"src": "143:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol",
							"file": "../interface/IClaimTopicsRegistry.sol",
							"id": 677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 838,
							"src": "180:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 678,
										"name": "IClaimTopicsRegistry",
										"nameLocations": [
											"263:20:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "263:20:4"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "263:20:4"
								},
								{
									"baseName": {
										"id": 680,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"285:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "285:18:4"
									},
									"id": 681,
									"nodeType": "InheritanceSpecifier",
									"src": "285:18:4"
								},
								{
									"baseName": {
										"id": 682,
										"name": "CTRStorage",
										"nameLocations": [
											"305:10:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 847,
										"src": "305:10:4"
									},
									"id": 683,
									"nodeType": "InheritanceSpecifier",
									"src": "305:10:4"
								}
							],
							"canonicalName": "ClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810,
								847,
								131,
								672,
								300,
								837
							],
							"name": "ClaimTopicsRegistry",
							"nameLocation": "240:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "362:35:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 688,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "373:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "373:16:4"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 685,
												"name": "initializer",
												"nameLocations": [
													"350:11:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "350:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "350:11:4"
										}
									],
									"name": "init",
									"nameLocation": "334:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:4"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:4"
									},
									"scope": 810,
									"src": "325:72:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										825
									],
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "482:351:4",
										"statements": [
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "501:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "493:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "493:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"expression": {
														"id": 702,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "510:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "523:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "510:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "493:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 706,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "548:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3135",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "548:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742072657175697265206d6f7265207468616e20313520746f70696373",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "561:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737",
																"typeString": "literal_string \"cannot require more than 15 topics\""
															},
															"value": "cannot require more than 15 topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c95b5d98a83b544adacac7504a883dc2e549c923cf29f977b923b0b0c6471737",
																"typeString": "literal_string \"cannot require more than 15 topics\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "540:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "540:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "540:58:4"
											},
											{
												"body": {
													"id": 731,
													"nodeType": "Block",
													"src": "646:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 723,
																				"name": "_claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 842,
																				"src": "669:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 725,
																			"indexExpression": {
																				"id": 724,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "682:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "669:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 726,
																			"name": "_claimTopic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "688:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "669:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "636c61696d546f70696320616c726561647920657869737473",
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "701:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
																			"typeString": "literal_string \"claimTopic already exists\""
																		},
																		"value": "claimTopic already exists"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
																			"typeString": "literal_string \"claimTopic already exists\""
																		}
																	],
																	"id": 722,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "661:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "661:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 730,
															"nodeType": "ExpressionStatement",
															"src": "661:68:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 716,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "629:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 717,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "633:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "629:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 732,
												"initializationExpression": {
													"assignments": [
														713
													],
													"declarations": [
														{
															"constant": false,
															"id": 713,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "622:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 732,
															"src": "614:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 712,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "614:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 715,
													"initialValue": {
														"hexValue": "30",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "626:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "614:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "641:3:4",
														"subExpression": {
															"id": 719,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "641:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 721,
													"nodeType": "ExpressionStatement",
													"src": "641:3:4"
												},
												"nodeType": "ForStatement",
												"src": "609:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "_claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "769:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 733,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "751:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "764:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "751:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "751:30:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 740,
															"name": "_claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "813:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "ClaimTopicAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "797:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "797:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "EmitStatement",
												"src": "792:33:4"
											}
										]
									},
									"functionSelector": "c7b22551",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 697,
												"name": "onlyOwner",
												"nameLocations": [
													"472:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "472:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "472:9:4"
										}
									],
									"name": "addClaimTopic",
									"nameLocation": "419:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 696,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "463:8:4"
									},
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "441:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "433:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:21:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "482:0:4"
									},
									"scope": 810,
									"src": "410:423:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "993:356:4",
										"statements": [
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1012:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "1004:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"expression": {
														"id": 755,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1021:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1034:6:4",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1021:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:36:4"
											},
											{
												"body": {
													"id": 795,
													"nodeType": "Block",
													"src": "1088:254:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 768,
																		"name": "_claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "1107:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 770,
																	"indexExpression": {
																		"id": 769,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "1120:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1107:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 771,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1126:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1107:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 794,
															"nodeType": "IfStatement",
															"src": "1103:228:4",
															"trueBody": {
																"id": 793,
																"nodeType": "Block",
																"src": "1139:192:4",
																"statements": [
																	{
																		"expression": {
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 773,
																					"name": "_claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "1158:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 775,
																				"indexExpression": {
																					"id": 774,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "1171:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1158:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 776,
																					"name": "_claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "1176:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 780,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 779,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 777,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 754,
																						"src": "1189:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 778,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1198:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "1189:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1176:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1158:42:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 782,
																		"nodeType": "ExpressionStatement",
																		"src": "1158:42:4"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 783,
																					"name": "_claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "1219:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1232:3:4",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "1219:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1219:18:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 787,
																		"nodeType": "ExpressionStatement",
																		"src": "1219:18:4"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 789,
																					"name": "_claimTopic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "1279:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 788,
																				"name": "ClaimTopicRemoved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "1261:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1261:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 791,
																		"nodeType": "EmitStatement",
																		"src": "1256:35:4"
																	},
																	{
																		"id": 792,
																		"nodeType": "Break",
																		"src": "1310:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 762,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "1071:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 763,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1075:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1071:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"initializationExpression": {
													"assignments": [
														759
													],
													"declarations": [
														{
															"constant": false,
															"id": 759,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1064:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 796,
															"src": "1056:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 758,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1056:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 761,
													"initialValue": {
														"hexValue": "30",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1068:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1056:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1083:3:4",
														"subExpression": {
															"id": 765,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1083:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 767,
													"nodeType": "ExpressionStatement",
													"src": "1083:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1051:291:4"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "841:71:4",
										"text": "  @dev See {IClaimTopicsRegistry-removeClaimTopic}."
									},
									"functionSelector": "08297846",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 751,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 750,
												"name": "onlyOwner",
												"nameLocations": [
													"983:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "983:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "983:9:4"
										}
									],
									"name": "removeClaimTopic",
									"nameLocation": "927:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 749,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "974:8:4"
									},
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "952:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "944:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:21:4"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:4"
									},
									"scope": 810,
									"src": "918:431:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "1508:38:4",
										"statements": [
											{
												"expression": {
													"id": 806,
													"name": "_claimTopics",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "1526:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 805,
												"id": 807,
												"nodeType": "Return",
												"src": "1519:19:4"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1357:69:4",
										"text": "  @dev See {IClaimTopicsRegistry-getClaimTopics}."
									},
									"functionSelector": "df09d604",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "1441:14:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 801,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1472:8:4"
									},
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:4"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1490:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 802,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1490:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 803,
													"nodeType": "ArrayTypeName",
													"src": "1490:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:18:4"
									},
									"scope": 810,
									"src": "1432:114:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 811,
							"src": "231:1318:4",
							"usedErrors": []
						}
					],
					"src": "39:1512:4"
				},
				"id": 4
			},
			"GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "GemNFT/Copy_registry/interface/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							837
						]
					},
					"id": 838,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimTopicsRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "72:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6",
									"id": 816,
									"name": "ClaimTopicAdded",
									"nameLocation": "105:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "137:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "121:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:28:5"
									},
									"src": "99:50:5"
								},
								{
									"anonymous": false,
									"eventSelector": "0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5",
									"id": 820,
									"name": "ClaimTopicRemoved",
									"nameLocation": "161:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "195:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "179:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "178:28:5"
									},
									"src": "155:52:5"
								},
								{
									"functionSelector": "c7b22551",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "222:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "244:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "236:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "235:21:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:5"
									},
									"scope": 837,
									"src": "213:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "08297846",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "281:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "306:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "298:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:21:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:5"
									},
									"scope": 837,
									"src": "272:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "df09d604",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "343:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:5"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "383:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 832,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "383:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 833,
													"nodeType": "ArrayTypeName",
													"src": "383:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:18:5"
									},
									"scope": 837,
									"src": "334:67:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 838,
							"src": "62:341:5",
							"usedErrors": []
						}
					],
					"src": "37:367:5"
				},
				"id": 5
			},
			"GemNFT/Copy_registry/storage/CTRStorage.sol": {
				"ast": {
					"absolutePath": "GemNFT/Copy_registry/storage/CTRStorage.sol",
					"exportedSymbols": {
						"CTRStorage": [
							847
						]
					},
					"id": 848,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CTRStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 847,
							"linearizedBaseContracts": [
								847
							],
							"name": "CTRStorage",
							"nameLocation": "71:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 842,
									"mutability": "mutable",
									"name": "_claimTopics",
									"nameLocation": "112:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "93:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 840,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "93:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 841,
										"nodeType": "ArrayTypeName",
										"src": "93:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 846,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "155:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "135:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 843,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "135:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 845,
										"length": {
											"hexValue": "3439",
											"id": 844,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "143:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "135:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 848,
							"src": "62:101:6",
							"usedErrors": []
						}
					],
					"src": "37:127:6"
				},
				"id": 6
			}
		}
	}
}